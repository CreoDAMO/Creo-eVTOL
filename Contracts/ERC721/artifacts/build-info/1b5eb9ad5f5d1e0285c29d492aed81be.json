{
	"id": "1b5eb9ad5f5d1e0285c29d492aed81be",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"Contracts/ERC721/CreoEvoltBlockchain.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\"; // Import EnumerableMap contract\n\ncontract EVTolToken is ERC721 {\n    using EnumerableMap for EnumerableMap.UintToAddressMap; // Use EnumerableMap for UintToAddressMap\n\n    // Struct to store eVTOL metadata\n    struct EVTOLOwner {\n        string identifier; // Unique identifier of the eVTOL\n        string inspectionHistory; // Inspection history of the eVTOL\n        // Add additional metadata as needed\n    }\n    \n    // Mapping to store eVTOL metadata\n    mapping(uint256 => EVTOLOwner) private _eVTOLData;\n    EnumerableMap.UintToAddressMap private _tokenOwners; // Track token ownership\n    \n    // Constructor to initialize the ERC721 contract with name \"eVTOL\" and symbol \"EVTOL\"\n    constructor() ERC721(\"eVTOL\", \"EVTOL\") {}\n\n    // Function to mint a new eVTOL NFT\n    function mintEVTOLOwner(address to, uint256 tokenId, string memory identifier, string memory inspectionHistory) external {\n        _mint(to, tokenId); // Mint a new token with the specified tokenId and assign it to the specified address\n        _eVTOLData[tokenId] = EVTOLOwner(identifier, inspectionHistory); // Store metadata for the minted eVTOL token\n    }\n    \n    // Function to get eVTOL metadata\n    function getEVTOLOwnerMetadata(uint256 tokenId) external view returns (string memory identifier, string memory inspectionHistory) {\n        require(_tokenOwners.contains(tokenId), \"Token ID does not exist\"); // Ensure that the token exists\n        return (_eVTOLData[tokenId].identifier, _eVTOLData[tokenId].inspectionHistory); // Return metadata for the specified eVTOL token\n    }\n    \n    // Other functions for your ERC-721 contract...\n}\n"
			},
			"@openzeppelin/contracts/utils/structs/EnumerableMap.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableMap.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableMap.js.\n\npragma solidity ^0.8.20;\n\nimport {EnumerableSet} from \"./EnumerableSet.sol\";\n\n/**\n * @dev Library for managing an enumerable variant of Solidity's\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n * type.\n *\n * Maps have the following properties:\n *\n * - Entries are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableMap for EnumerableMap.UintToAddressMap;\n *\n *     // Declare a set state variable\n *     EnumerableMap.UintToAddressMap private myMap;\n * }\n * ```\n *\n * The following map types are supported:\n *\n * - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\n * - `address -> uint256` (`AddressToUintMap`) since v4.6.0\n * - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0\n * - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0\n * - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableMap.\n * ====\n */\nlibrary EnumerableMap {\n    using EnumerableSet for EnumerableSet.Bytes32Set;\n\n    // To implement this library for multiple types with as little code repetition as possible, we write it in\n    // terms of a generic Map type with bytes32 keys and values. The Map implementation uses private functions,\n    // and user-facing implementations such as `UintToAddressMap` are just wrappers around the underlying Map.\n    // This means that we can only create new EnumerableMaps for types that fit in bytes32.\n\n    /**\n     * @dev Query for a nonexistent map key.\n     */\n    error EnumerableMapNonexistentKey(bytes32 key);\n\n    struct Bytes32ToBytes32Map {\n        // Storage of keys\n        EnumerableSet.Bytes32Set _keys;\n        mapping(bytes32 key => bytes32) _values;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(Bytes32ToBytes32Map storage map, bytes32 key, bytes32 value) internal returns (bool) {\n        map._values[key] = value;\n        return map._keys.add(key);\n    }\n\n    /**\n     * @dev Removes a key-value pair from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(Bytes32ToBytes32Map storage map, bytes32 key) internal returns (bool) {\n        delete map._values[key];\n        return map._keys.remove(key);\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool) {\n        return map._keys.contains(key);\n    }\n\n    /**\n     * @dev Returns the number of key-value pairs in the map. O(1).\n     */\n    function length(Bytes32ToBytes32Map storage map) internal view returns (uint256) {\n        return map._keys.length();\n    }\n\n    /**\n     * @dev Returns the key-value pair stored at position `index` in the map. O(1).\n     *\n     * Note that there are no guarantees on the ordering of entries inside the\n     * array, and it may change when more entries are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32ToBytes32Map storage map, uint256 index) internal view returns (bytes32, bytes32) {\n        bytes32 key = map._keys.at(index);\n        return (key, map._values[key]);\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool, bytes32) {\n        bytes32 value = map._values[key];\n        if (value == bytes32(0)) {\n            return (contains(map, key), bytes32(0));\n        } else {\n            return (true, value);\n        }\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bytes32) {\n        bytes32 value = map._values[key];\n        if (value == 0 && !contains(map, key)) {\n            revert EnumerableMapNonexistentKey(key);\n        }\n        return value;\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(Bytes32ToBytes32Map storage map) internal view returns (bytes32[] memory) {\n        return map._keys.values();\n    }\n\n    // UintToUintMap\n\n    struct UintToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(UintToUintMap storage map, uint256 key, uint256 value) internal returns (bool) {\n        return set(map._inner, bytes32(key), bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(UintToUintMap storage map, uint256 key) internal returns (bool) {\n        return remove(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(UintToUintMap storage map, uint256 key) internal view returns (bool) {\n        return contains(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(UintToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the map. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintToUintMap storage map, uint256 index) internal view returns (uint256, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (uint256(key), uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(UintToUintMap storage map, uint256 key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(UintToUintMap storage map, uint256 key) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(key)));\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(UintToUintMap storage map) internal view returns (uint256[] memory) {\n        bytes32[] memory store = keys(map._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintToAddressMap\n\n    struct UintToAddressMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(UintToAddressMap storage map, uint256 key, address value) internal returns (bool) {\n        return set(map._inner, bytes32(key), bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\n        return remove(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\n        return contains(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(UintToAddressMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the map. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (uint256(key), address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(UintToAddressMap storage map, uint256 key) internal view returns (bool, address) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\n        return (success, address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(UintToAddressMap storage map, uint256 key) internal view returns (address) {\n        return address(uint160(uint256(get(map._inner, bytes32(key)))));\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(UintToAddressMap storage map) internal view returns (uint256[] memory) {\n        bytes32[] memory store = keys(map._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressToUintMap\n\n    struct AddressToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(AddressToUintMap storage map, address key, uint256 value) internal returns (bool) {\n        return set(map._inner, bytes32(uint256(uint160(key))), bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(AddressToUintMap storage map, address key) internal returns (bool) {\n        return remove(map._inner, bytes32(uint256(uint160(key))));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(AddressToUintMap storage map, address key) internal view returns (bool) {\n        return contains(map._inner, bytes32(uint256(uint160(key))));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(AddressToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the map. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressToUintMap storage map, uint256 index) internal view returns (address, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (address(uint160(uint256(key))), uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(AddressToUintMap storage map, address key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(uint256(uint160(key))));\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(AddressToUintMap storage map, address key) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(uint256(uint160(key)))));\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(AddressToUintMap storage map) internal view returns (address[] memory) {\n        bytes32[] memory store = keys(map._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // Bytes32ToUintMap\n\n    struct Bytes32ToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(Bytes32ToUintMap storage map, bytes32 key, uint256 value) internal returns (bool) {\n        return set(map._inner, key, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(Bytes32ToUintMap storage map, bytes32 key) internal returns (bool) {\n        return remove(map._inner, key);\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool) {\n        return contains(map._inner, key);\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(Bytes32ToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the map. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32ToUintMap storage map, uint256 index) internal view returns (bytes32, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (key, uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`. O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, key);\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`. O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(Bytes32ToUintMap storage map, bytes32 key) internal view returns (uint256) {\n        return uint256(get(map._inner, key));\n    }\n\n    /**\n     * @dev Return the an array containing all the keys\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function keys(Bytes32ToUintMap storage map) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = keys(map._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 175,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 179,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 183,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 189,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bec6e6bc0e54600d1963cf86837a5ca170a786b479a6592b700803baafc3363d64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bec6e6bc0e54600d1963cf86837a5ca170a786b479a6592b700803baafc3363d64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xC6 0xE6 0xBC 0xE SLOAD PUSH1 0xD NOT PUSH4 0xCF86837A TLOAD LOG1 PUSH17 0xA786B479A6592B700803BAAFC3363D6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "251:2847:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;251:2847:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bec6e6bc0e54600d1963cf86837a5ca170a786b479a6592b700803baafc3363d64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xC6 0xE6 0xBC 0xE SLOAD PUSH1 0xD NOT PUSH4 0xCF86837A TLOAD LOG1 PUSH17 0xA786B479A6592B700803BAAFC3363D6473 PUSH16 0x6C634300081900330000000000000000 ",
							"sourceMap": "251:2847:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bec6e6bc0e54600d1963cf86837a5ca170a786b479a6592b700803baafc3363d64736f6c63430008190033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"Contracts/ERC721/CreoEvoltBlockchain.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200305b2217d8b4fefe310f3ba770d7c407e8aefb52200e261e53f4b0ce9c3132264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200305b2217d8b4fefe310f3ba770d7c407e8aefb52200e261e53f4b0ce9c3132264736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB SDIV 0xB2 0x21 PUSH30 0x8B4FEFE310F3BA770D7C407E8AEFB52200E261E53F4B0CE9C3132264736F PUSH13 0x63430008190033000000000000 ",
							"sourceMap": "203:14914:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;203:14914:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212200305b2217d8b4fefe310f3ba770d7c407e8aefb52200e261e53f4b0ce9c3132264736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB SDIV 0xB2 0x21 PUSH30 0x8B4FEFE310F3BA770D7C407E8AEFB52200E261E53F4B0CE9C3132264736F PUSH13 0x63430008190033000000000000 ",
							"sourceMap": "203:14914:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200305b2217d8b4fefe310f3ba770d7c407e8aefb52200e261e53f4b0ce9c3132264736f6c63430008190033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"Contracts/ERC721/CreoEvoltBlockchain.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122079d67ec5f0269e00933469fd8bac804e50ccd0f45f359861bfb31c9b9d6c7ab464736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122079d67ec5f0269e00933469fd8bac804e50ccd0f45f359861bfb31c9b9d6c7ab464736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD67EC5F0269E00933469FD8BAC804E50CCD0F45F359861BFB31C SWAP12 SWAP14 PUSH13 0x7AB464736F6C63430008190033 ",
							"sourceMap": "216:1047:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;216:1047:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122079d67ec5f0269e00933469fd8bac804e50ccd0f45f359861bfb31c9b9d6c7ab464736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xD67EC5F0269E00933469FD8BAC804E50CCD0F45F359861BFB31C SWAP12 SWAP14 PUSH13 0x7AB464736F6C63430008190033 ",
							"sourceMap": "216:1047:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122079d67ec5f0269e00933469fd8bac804e50ccd0f45f359861bfb31c9b9d6c7ab464736f6c63430008190033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"Contracts/ERC721/CreoEvoltBlockchain.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/structs/EnumerableMap.sol": {
				"EnumerableMap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "EnumerableMapNonexistentKey",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ``` The following map types are supported: - `uint256 -> address` (`UintToAddressMap`) since v3.0.0 - `address -> uint256` (`AddressToUintMap`) since v4.6.0 - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0 - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0 - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0 [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap. ====",
						"errors": {
							"EnumerableMapNonexistentKey(bytes32)": [
								{
									"details": "Query for a nonexistent map key."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":1651:18900  library EnumerableMap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":1651:18900  library EnumerableMap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f6e029ebbc8734c2800e89cf5cafcd53e346127dfbe3dd13518a32ded155acb664736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f6e029ebbc8734c2800e89cf5cafcd53e346127dfbe3dd13518a32ded155acb664736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0xE0 0x29 0xEB 0xBC DUP8 CALLVALUE 0xC2 DUP1 0xE DUP10 0xCF TLOAD 0xAF 0xCD MSTORE8 0xE3 CHAINID SLT PUSH30 0xFBE3DD13518A32DED155ACB664736F6C6343000819003300000000000000 ",
							"sourceMap": "1651:17249:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1651:17249:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f6e029ebbc8734c2800e89cf5cafcd53e346127dfbe3dd13518a32ded155acb664736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 0xE0 0x29 0xEB 0xBC DUP8 CALLVALUE 0xC2 DUP1 0xE DUP10 0xCF TLOAD 0xAF 0xCD MSTORE8 0xE3 CHAINID SLT PUSH30 0xFBE3DD13518A32DED155ACB664736F6C6343000819003300000000000000 ",
							"sourceMap": "1651:17249:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"at(struct EnumerableMap.AddressToUintMap storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.Bytes32ToUintMap storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"at(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"contains(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"contains(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"contains(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"get(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"get(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"get(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"get(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"get(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"keys(struct EnumerableMap.AddressToUintMap storage pointer)": "infinite",
								"keys(struct EnumerableMap.Bytes32ToBytes32Map storage pointer)": "infinite",
								"keys(struct EnumerableMap.Bytes32ToUintMap storage pointer)": "infinite",
								"keys(struct EnumerableMap.UintToAddressMap storage pointer)": "infinite",
								"keys(struct EnumerableMap.UintToUintMap storage pointer)": "infinite",
								"length(struct EnumerableMap.AddressToUintMap storage pointer)": "infinite",
								"length(struct EnumerableMap.Bytes32ToBytes32Map storage pointer)": "infinite",
								"length(struct EnumerableMap.Bytes32ToUintMap storage pointer)": "infinite",
								"length(struct EnumerableMap.UintToAddressMap storage pointer)": "infinite",
								"length(struct EnumerableMap.UintToUintMap storage pointer)": "infinite",
								"remove(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"remove(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"remove(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite",
								"set(struct EnumerableMap.AddressToUintMap storage pointer,address,uint256)": "infinite",
								"set(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32)": "infinite",
								"set(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32,uint256)": "infinite",
								"set(struct EnumerableMap.UintToAddressMap storage pointer,uint256,address)": "infinite",
								"set(struct EnumerableMap.UintToUintMap storage pointer,uint256,uint256)": "infinite",
								"tryGet(struct EnumerableMap.AddressToUintMap storage pointer,address)": "infinite",
								"tryGet(struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32)": "infinite",
								"tryGet(struct EnumerableMap.Bytes32ToUintMap storage pointer,bytes32)": "infinite",
								"tryGet(struct EnumerableMap.UintToAddressMap storage pointer,uint256)": "infinite",
								"tryGet(struct EnumerableMap.UintToUintMap storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1651,
									"end": 18900,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f6e029ebbc8734c2800e89cf5cafcd53e346127dfbe3dd13518a32ded155acb664736f6c63430008190033",
									".code": [
										{
											"begin": 1651,
											"end": 18900,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 1651,
											"end": 18900,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1651,
											"end": 18900,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1651,
											"end": 18900,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1651,
											"end": 18900,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1651,
											"end": 18900,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1651,
											"end": 18900,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 18900,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1651,
											"end": 18900,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"Contracts/ERC721/CreoEvoltBlockchain.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"EnumerableMapNonexistentKey\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ``` The following map types are supported: - `uint256 -> address` (`UintToAddressMap`) since v3.0.0 - `address -> uint256` (`AddressToUintMap`) since v4.6.0 - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0 - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0 - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0 [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap. ====\",\"errors\":{\"EnumerableMapNonexistentKey(bytes32)\":[{\"details\":\"Query for a nonexistent map key.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":\"EnumerableMap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0xa3edd94148e931d8a37353624ea57afa1c679b6fe06b7059ccdc8da78a90c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0041d5bae8c6115c3378532d5b7cfbb1a288780279a3873334e49785b65a1b9d\",\"dweb:/ipfs/QmQTGDrQSZkzRbFZWAhysaeCvKnP7wPh2VSPkN4J323QmZ\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12970  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12970  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f145fba9bb35d99ead25fe8caea16d0a01f589c9b028ca3ded9b103f70cee38c64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f145fba9bb35d99ead25fe8caea16d0a01f589c9b028ca3ded9b103f70cee38c64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL GASLIMIT 0xFB 0xA9 0xBB CALLDATALOAD 0xD9 SWAP15 0xAD 0x25 INVALID DUP13 0xAE LOG1 PUSH14 0xA01F589C9B028CA3DED9B103F70 0xCE 0xE3 DUP13 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "1330:11640:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1330:11640:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f145fba9bb35d99ead25fe8caea16d0a01f589c9b028ca3ded9b103f70cee38c64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL GASLIMIT 0xFB 0xA9 0xBB CALLDATALOAD 0xD9 SWAP15 0xAD 0x25 INVALID DUP13 0xAE LOG1 PUSH14 0xA01F589C9B028CA3DED9B103F70 0xCE 0xE3 DUP13 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "1330:11640:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f145fba9bb35d99ead25fe8caea16d0a01f589c9b028ca3ded9b103f70cee38c64736f6c63430008190033",
									".code": [
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"Contracts/ERC721/CreoEvoltBlockchain.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Contracts/ERC721/CreoEvoltBlockchain.sol": {
				"EVTolToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getEVTOLOwnerMetadata",
							"outputs": [
								{
									"internalType": "string",
									"name": "identifier",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "inspectionHistory",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "identifier",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "inspectionHistory",
									"type": "string"
								}
							],
							"name": "mintEVTOLOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":215:1809  contract EVTolToken is ERC721 {... */\n  mstore(0x40, 0x80)\n    /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":873:914  constructor() ERC721(\"eVTOL\", \"EVTOL\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xda, 0x19559513d3)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xda, 0x11559513d3)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  tag_7\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":215:1809  contract EVTolToken is ERC721 {... */\n  jump(tag_15)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_11:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_18:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_19:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1175   */\ntag_13:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1169   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":795:800   */\n  dup1\n    /* \"#utility.yul\":792:793   */\n  0x00\n    /* \"#utility.yul\":785:801   */\n  mstore\n    /* \"#utility.yul\":839:843   */\n  0x20\n    /* \"#utility.yul\":836:837   */\n  0x00\n    /* \"#utility.yul\":826:844   */\n  keccak256\n    /* \"#utility.yul\":909:911   */\n  0x1f\n    /* \"#utility.yul\":897:907   */\n  dup5\n    /* \"#utility.yul\":893:912   */\n  add\n    /* \"#utility.yul\":890:891   */\n  0x05\n    /* \"#utility.yul\":886:913   */\n  shr\n    /* \"#utility.yul\":880:884   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  add\n    /* \"#utility.yul\":945:949   */\n  0x20\n    /* \"#utility.yul\":933:943   */\n  dup6\n    /* \"#utility.yul\":930:950   */\n  lt\n    /* \"#utility.yul\":927:974   */\n  iszero\n  tag_23\n  jumpi\n  pop\n    /* \"#utility.yul\":968:972   */\n  dup1\n    /* \"#utility.yul\":927:974   */\ntag_23:\n    /* \"#utility.yul\":1023:1025   */\n  0x1f\n    /* \"#utility.yul\":1018:1021   */\n  dup5\n    /* \"#utility.yul\":1014:1026   */\n  add\n    /* \"#utility.yul\":1011:1012   */\n  0x05\n    /* \"#utility.yul\":1007:1027   */\n  shr\n    /* \"#utility.yul\":1001:1005   */\n  dup3\n    /* \"#utility.yul\":997:1028   */\n  add\n    /* \"#utility.yul\":987:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":1078:1159   */\ntag_24:\n    /* \"#utility.yul\":1096:1098   */\n  dup2\n    /* \"#utility.yul\":1089:1094   */\n  dup2\n    /* \"#utility.yul\":1086:1099   */\n  lt\n    /* \"#utility.yul\":1078:1159   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1141:1157   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1122:1123   */\n  0x01\n    /* \"#utility.yul\":1111:1124   */\n  add\n    /* \"#utility.yul\":1078:1159   */\n  jump(tag_24)\ntag_26:\n    /* \"#utility.yul\":1082:1085   */\n  pop\n  pop\n    /* \"#utility.yul\":748:1169   */\ntag_22:\n    /* \"#utility.yul\":657:1175   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1351:2696   */\ntag_6:\n    /* \"#utility.yul\":1471:1481   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1523   */\n  dup2\n  gt\n    /* \"#utility.yul\":1490:1546   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1526:1544   */\n  tag_30\n  tag_10\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1555:1652   */\n  tag_31\n    /* \"#utility.yul\":1645:1651   */\n  dup2\n    /* \"#utility.yul\":1605:1643   */\n  tag_32\n    /* \"#utility.yul\":1637:1641   */\n  dup5\n    /* \"#utility.yul\":1631:1642   */\n  sload\n    /* \"#utility.yul\":1605:1643   */\n  tag_11\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1599:1603   */\n  dup5\n    /* \"#utility.yul\":1555:1652   */\n  tag_13\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1707:1711   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1764:1766   */\n  0x1f\n    /* \"#utility.yul\":1753:1767   */\n  dup4\n  gt\n    /* \"#utility.yul\":1781:1782   */\n  0x01\n    /* \"#utility.yul\":1776:2439   */\n  dup2\n  eq\n  tag_34\n  jumpi\n    /* \"#utility.yul\":2483:2484   */\n  0x00\n    /* \"#utility.yul\":2500:2506   */\n  dup5\n    /* \"#utility.yul\":2497:2586   */\n  iszero\n  tag_35\n  jumpi\n  pop\n    /* \"#utility.yul\":2552:2571   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2546:2572   */\n  mload\n    /* \"#utility.yul\":2497:2586   */\ntag_35:\n  not(0x00)\n    /* \"#utility.yul\":1308:1309   */\n  0x03\n    /* \"#utility.yul\":1304:1315   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1300:1324   */\n  shr\n    /* \"#utility.yul\":1296:1325   */\n  not\n    /* \"#utility.yul\":1286:1326   */\n  and\n    /* \"#utility.yul\":1332:1333   */\n  0x01\n    /* \"#utility.yul\":1328:1339   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1283:1340   */\n  or\n    /* \"#utility.yul\":2599:2680   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1746:2690   */\n  jump(tag_33)\n    /* \"#utility.yul\":1776:2439   */\ntag_34:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1812:1832   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1930:2166   */\ntag_38:\n    /* \"#utility.yul\":1944:1951   */\n  dup3\n    /* \"#utility.yul\":1941:1942   */\n  dup2\n    /* \"#utility.yul\":1938:1952   */\n  lt\n    /* \"#utility.yul\":1930:2166   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2033:2052   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2027:2053   */\n  mload\n    /* \"#utility.yul\":2012:2054   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2125:2152   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2093:2094   */\n  0x01\n    /* \"#utility.yul\":2081:2095   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1960:1979   */\n  dup5\n  add\n    /* \"#utility.yul\":1930:2166   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":1934:1937   */\n  pop\n    /* \"#utility.yul\":2194:2200   */\n  dup6\n    /* \"#utility.yul\":2185:2192   */\n  dup3\n    /* \"#utility.yul\":2182:2201   */\n  lt\n    /* \"#utility.yul\":2179:2380   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":2255:2274   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2249:2275   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2338:2339   */\n  0x03\n    /* \"#utility.yul\":2334:2348   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2350:2353   */\n  0xf8\n    /* \"#utility.yul\":2330:2354   */\n  and\n    /* \"#utility.yul\":2326:2363   */\n  shr\n    /* \"#utility.yul\":2322:2364   */\n  not\n    /* \"#utility.yul\":2307:2365   */\n  and\n    /* \"#utility.yul\":2292:2366   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2179:2380   */\ntag_41:\n  pop\n  pop\n    /* \"#utility.yul\":2426:2427   */\n  0x01\n    /* \"#utility.yul\":2417:2423   */\n  dup5\n    /* \"#utility.yul\":2414:2415   */\n  0x01\n    /* \"#utility.yul\":2410:2424   */\n  shl\n    /* \"#utility.yul\":2406:2428   */\n  add\n    /* \"#utility.yul\":2400:2404   */\n  dup6\n    /* \"#utility.yul\":2393:2429   */\n  sstore\n    /* \"#utility.yul\":1746:2690   */\ntag_33:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1351:2696   */\n  pop\n  pop\n  jump\t// out\ntag_15:\n    /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":215:1809  contract EVTolToken is ERC721 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":215:1809  contract EVTolToken is ERC721 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5b031fb2\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x5b031fb2\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x095ea7b3\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x11ba9aae\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1482:1514   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1464:1515   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1452:1454   */\n      0x20\n        /* \"#utility.yul\":1437:1455   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      tag_25\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_37\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":960:1320  function mintEVTOLOwner(address to, uint256 tokenId, string memory identifier, string memory inspectionHistory) external {... */\n    tag_7:\n      tag_37\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_8:\n      tag_37\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_9:\n      tag_37\n      tag_50\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1368:1750  function getEVTOLOwnerMetadata(uint256 tokenId) external view returns (string memory identifier, string memory inspectionHistory) {... */\n    tag_10:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_25\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_11:\n      tag_31\n      tag_58\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_61\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n        /* \"#utility.yul\":4730:4755   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":4718:4720   */\n      0x20\n        /* \"#utility.yul\":4703:4721   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      tag_25\n        /* \"#utility.yul\":4584:4761   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_27\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_14:\n      tag_37\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_15:\n      tag_37\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_16:\n      tag_27\n      tag_79\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_17:\n      tag_21\n      tag_83\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      tag_88\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_90\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_100:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_108\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":960:1320  function mintEVTOLOwner(address to, uint256 tokenId, string memory identifier, string memory inspectionHistory) external {... */\n    tag_44:\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1091:1109  _mint(to, tokenId) */\n      tag_110\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1097:1099  to */\n      dup5\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1101:1108  tokenId */\n      dup5\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1091:1096  _mint */\n      tag_111\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1091:1109  _mint(to, tokenId) */\n      jump\t// in\n    tag_110:\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1227:1268  EVTOLOwner(identifier, inspectionHistory) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      dup4\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      0x00\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1205:1224  _eVTOLData[tokenId] */\n      dup7\n      dup2\n      mstore\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1205:1215  _eVTOLData */\n      0x06\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1205:1224  _eVTOLData[tokenId] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1205:1268  _eVTOLData[tokenId] = EVTOLOwner(identifier, inspectionHistory) */\n      dup2\n      mload\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1205:1224  _eVTOLData[tokenId] */\n      dup2\n      swap1\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1205:1268  _eVTOLData[tokenId] = EVTOLOwner(identifier, inspectionHistory) */\n      tag_112\n      swap1\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1205:1224  _eVTOLData[tokenId] */\n      dup3\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1205:1268  _eVTOLData[tokenId] = EVTOLOwner(identifier, inspectionHistory) */\n      tag_113\n      jump\t// in\n    tag_112:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      0x01\n      dup3\n      add\n      swap1\n      tag_114\n      swap1\n      dup3\n      tag_113\n      jump\t// in\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":960:1320  function mintEVTOLOwner(address to, uint256 tokenId, string memory identifier, string memory inspectionHistory) external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_116\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      shl(0xe0, 0x64283d7b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8868:8883   */\n      dup1\n      dup7\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":8850:8884   */\n      mstore\n        /* \"#utility.yul\":8900:8918   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8893:8927   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":8963:8978   */\n      dup3\n      and\n        /* \"#utility.yul\":8943:8961   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8936:8979   */\n      mstore\n        /* \"#utility.yul\":8785:8803   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      tag_117\n        /* \"#utility.yul\":8610:8985   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1368:1750  function getEVTOLOwnerMetadata(uint256 tokenId) external view returns (string memory identifier, string memory inspectionHistory) {... */\n    tag_54:\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1439:1463  string memory identifier */\n      0x60\n      dup1\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1516:1546  _tokenOwners.contains(tokenId) */\n      tag_127\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1516:1528  _tokenOwners */\n      0x07\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1538:1545  tokenId */\n      dup5\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1516:1537  _tokenOwners.contains */\n      tag_128\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1516:1546  _tokenOwners.contains(tokenId) */\n      jump\t// in\n    tag_127:\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1508:1574  require(_tokenOwners.contains(tokenId), \"Token ID does not exist\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9192:9194   */\n      0x20\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1508:1574  require(_tokenOwners.contains(tokenId), \"Token ID does not exist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9174:9195   */\n      mstore\n        /* \"#utility.yul\":9231:9233   */\n      0x17\n        /* \"#utility.yul\":9211:9229   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9204:9234   */\n      mstore\n        /* \"#utility.yul\":9270:9295   */\n      0x546f6b656e20494420646f6573206e6f74206578697374000000000000000000\n        /* \"#utility.yul\":9250:9268   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9243:9296   */\n      mstore\n        /* \"#utility.yul\":9313:9331   */\n      0x64\n      add\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1508:1574  require(_tokenOwners.contains(tokenId), \"Token ID does not exist\") */\n      tag_117\n        /* \"#utility.yul\":8990:9337   */\n      jump\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1508:1574  require(_tokenOwners.contains(tokenId), \"Token ID does not exist\") */\n    tag_129:\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1624:1643  _eVTOLData[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1624:1634  _eVTOLData */\n      0x06\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1624:1643  _eVTOLData[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1616:1694  return (_eVTOLData[tokenId].identifier, _eVTOLData[tokenId].inspectionHistory) */\n      dup1\n      sload\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1656:1693  _eVTOLData[tokenId].inspectionHistory */\n      0x01\n      dup3\n      add\n      swap1\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1624:1643  _eVTOLData[tokenId] */\n      dup3\n      swap1\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1616:1694  return (_eVTOLData[tokenId].identifier, _eVTOLData[tokenId].inspectionHistory) */\n      tag_132\n      swap1\n      tag_94\n      jump\t// in\n    tag_132:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_133\n      swap1\n      tag_94\n      jump\t// in\n    tag_133:\n      dup1\n      iszero\n      tag_134\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_135\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_134)\n    tag_135:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_136:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_136\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_134:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      dup1\n      dup1\n      sload\n      tag_137\n      swap1\n      tag_94\n      jump\t// in\n    tag_137:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_138\n      swap1\n      tag_94\n      jump\t// in\n    tag_138:\n      dup1\n      iszero\n      tag_139\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_140\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_139)\n    tag_140:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_141:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_141\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Contracts/ERC721/CreoEvoltBlockchain.sol\":1368:1750  function getEVTOLOwnerMetadata(uint256 tokenId) external view returns (string memory identifier, string memory inspectionHistory) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_145\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe2, 0x22718ad9)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      tag_117\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_145:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_105\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_48\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2741:2754  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2780:2787  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2779  _requireOwned */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2766:2788  _requireOwned(tokenId) */\n      jump\t// in\n    tag_162:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2820  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3250:3259  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3174:3266  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2823:2833  _baseURI() */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2799:2833  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2874:2875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2856:2863  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2871  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2875  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_165\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_166)\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2892:2899  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2908  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2917  tokenId.toString */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2901:2919  tokenId.toString() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2878:2920  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_169\n      swap3\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2850:2925  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2843:2925  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2677:2932  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_90\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":4730:4755   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":4703:4721   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      tag_117\n        /* \"#utility.yul\":4584:4761   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9955:10282  function _mint(address to, uint256 tokenId) internal {... */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10022:10038  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10091:10092  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10061:10094  ERC721InvalidReceiver(address(0)) */\n      tag_117\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10018:10105  if (to == address(0)) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10135  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      tag_186\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10146:10148  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10150:10157  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10167:10168  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10145  _update */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10138:10170  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10114:10170  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10184:10211  previousOwner != address(0) */\n      dup2\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10180:10276  if (previousOwner != address(0)) {... */\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x39e35637)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10262:10263  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10234:10265  ERC721InvalidSender(address(0)) */\n      tag_117\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      dup4\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      dup2\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_194\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup1\n      sload\n      not(0x00)\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_194:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      dup6\n      and\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_196\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup8\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":9813:9961  function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":9897:9901  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":9920:9954  contains(map._inner, bytes32(key)) */\n      tag_166\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":9929:9932  map */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":9949:9952  key */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":9920:9928  contains */\n      tag_199\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":9920:9954  contains(map._inner, bytes32(key)) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      shl(0xe3, 0x0b611743)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1482:1514   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      tag_117\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      dup4\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      dup5\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      tag_207\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup8\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      0x04\n      add\n      tag_208\n      jump\t// in\n    tag_207:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_209\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_210\n      swap2\n      dup2\n      add\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      0x01\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_212\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_217\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_216)\n    tag_217:\n      0x60\n      swap2\n      pop\n    tag_216:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1482:1514   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      tag_117\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_212:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      dup2\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_222\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      shl(0xe1, 0x32505749)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1482:1514   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      tag_117\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":693:706  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:756  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      tag_226\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":770:775  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:769  Math.log10 */\n      tag_227\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:776  Math.log10(value) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":779:780  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":759:780  Math.log10(value) + 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":742:780  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:814  string memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":828:834  length */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:835  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_229\n      jumpi\n      tag_229\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_231\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_231:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":794:835  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      dup2\n      dup2\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":971:973  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":955:983  add(buffer, add(32, length)) */\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n    tag_232:\n      not(0x00)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      add\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1175:1177  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1164:1178  mod(value, 10) */\n      dup7\n      mod\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1159:1191  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1041:1046  ptr-- */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1146:1192  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1236:1238  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1227:1238  value /= 10 */\n      dup6\n      div\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1010:1292  while (true) {... */\n      tag_232\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1256:1277  if (value == 0) break */\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1312:1318  buffer */\n      swap4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":637:1335  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_240\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      dup3\n      and\n      iszero\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_242\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      tag_243\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_244\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      shl(0xe0, 0xa9fbf51f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1482:1514   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1464:1515   */\n      mstore\n        /* \"#utility.yul\":1437:1455   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      tag_117\n        /* \"#utility.yul\":1318:1521   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_241:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_125\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x7e273289)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":4730:4755   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":4703:4721   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      tag_117\n        /* \"#utility.yul\":4584:4761   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x177e802f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10914:10946   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10896:10947   */\n      mstore\n        /* \"#utility.yul\":10963:10981   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":10956:10990   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":10869:10887   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      tag_117\n        /* \"#utility.yul\":10722:10996   */\n      jump\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":3237:3377  function contains(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":3324:3328  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":3347:3370  map._keys.contains(key) */\n      tag_166\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":3347:3350  map */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":3366:3369  key */\n      dup4\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":6511:6515  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4374  set._positions */\n      0x01\n      dup4\n      add\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4381  set._positions[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4360:4386  set._positions[value] != 0 */\n      iszero\n      iszero\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":6534:6562  _contains(set._inner, value) */\n      tag_166\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":4264:4393  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12267:12274  uint256 */\n      0x00\n      dup1\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12342:12359  value >= 10 ** 64 */\n      dup4\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n      tag_262\n      jumpi\n      shl(0x40, 0x184f03e93ff9f4daa797ed6e38ed64bf6a1f01)\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12379:12396  value /= 10 ** 64 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12424:12426  64 */\n      0x40\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12414:12426  result += 64 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12338:12441  if (value >= 10 ** 64) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12467:12475  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12463  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12458:12475  value >= 10 ** 32 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n      tag_265\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12504:12512  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12495:12512  value /= 10 ** 32 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12540:12542  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12530:12542  result += 32 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12454:12557  if (value >= 10 ** 32) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12583:12591  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12579  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12574:12591  value >= 10 ** 16 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12620:12628  10 ** 16 */\n      0x2386f26fc10000\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12611:12628  value /= 10 ** 16 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12656:12658  16 */\n      0x10\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12646:12658  result += 16 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12570:12673  if (value >= 10 ** 16) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12699:12706  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12695  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12690:12706  value >= 10 ** 8 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12735:12742  10 ** 8 */\n      0x05f5e100\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12726:12742  value /= 10 ** 8 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12770:12771  8 */\n      0x08\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12760:12771  result += 8 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12686:12786  if (value >= 10 ** 8) {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12812:12819  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12808  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12803:12819  value >= 10 ** 4 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12848:12855  10 ** 4 */\n      0x2710\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12839:12855  value /= 10 ** 4 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12883:12884  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12873:12884  result += 4 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12799:12899  if (value >= 10 ** 4) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12925:12932  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12921  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12916:12932  value >= 10 ** 2 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12961:12968  10 ** 2 */\n      0x64\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12952:12968  value /= 10 ** 2 */\n      dup4\n      div\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12996:12997  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12986:12997  result += 2 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12912:13012  if (value >= 10 ** 2) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13038:13045  10 ** 1 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13034  value */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13029:13045  value >= 10 ** 1 */\n      lt\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13025:13091  if (value >= 10 ** 1) {... */\n      tag_90\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13075:13076  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13065:13076  result += 1 */\n      add\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":13117:13123  result */\n      swap3\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":12214:13130  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      dup4\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      tag_285\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_284\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_284\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_285\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      swap2\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_291:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":68:139   */\n    tag_302:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:395   */\n    tag_23:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_304:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_166\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_291\n      jump\t// in\n        /* \"#utility.yul\":592:892   */\n    tag_292:\n        /* \"#utility.yul\":645:648   */\n      0x00\n        /* \"#utility.yul\":683:688   */\n      dup2\n        /* \"#utility.yul\":677:689   */\n      mload\n        /* \"#utility.yul\":710:716   */\n      dup1\n        /* \"#utility.yul\":705:708   */\n      dup5\n        /* \"#utility.yul\":698:717   */\n      mstore\n        /* \"#utility.yul\":766:772   */\n      dup1\n        /* \"#utility.yul\":759:763   */\n      0x20\n        /* \"#utility.yul\":752:757   */\n      dup5\n        /* \"#utility.yul\":748:764   */\n      add\n        /* \"#utility.yul\":741:745   */\n      0x20\n        /* \"#utility.yul\":736:739   */\n      dup7\n        /* \"#utility.yul\":732:746   */\n      add\n        /* \"#utility.yul\":726:773   */\n      mcopy\n        /* \"#utility.yul\":818:819   */\n      0x00\n        /* \"#utility.yul\":811:815   */\n      0x20\n        /* \"#utility.yul\":802:808   */\n      dup3\n        /* \"#utility.yul\":797:800   */\n      dup7\n        /* \"#utility.yul\":793:809   */\n      add\n        /* \"#utility.yul\":789:816   */\n      add\n        /* \"#utility.yul\":782:820   */\n      mstore\n        /* \"#utility.yul\":881:885   */\n      0x20\n        /* \"#utility.yul\":874:876   */\n      0x1f\n        /* \"#utility.yul\":870:877   */\n      not\n        /* \"#utility.yul\":865:867   */\n      0x1f\n        /* \"#utility.yul\":857:863   */\n      dup4\n        /* \"#utility.yul\":853:868   */\n      add\n        /* \"#utility.yul\":849:878   */\n      and\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":840:879   */\n      add\n        /* \"#utility.yul\":836:886   */\n      add\n        /* \"#utility.yul\":829:886   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":592:892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":897:1128   */\n    tag_30:\n        /* \"#utility.yul\":1046:1048   */\n      0x20\n        /* \"#utility.yul\":1035:1044   */\n      dup2\n        /* \"#utility.yul\":1028:1049   */\n      mstore\n        /* \"#utility.yul\":1009:1013   */\n      0x00\n        /* \"#utility.yul\":1066:1122   */\n      tag_166\n        /* \"#utility.yul\":1118:1120   */\n      0x20\n        /* \"#utility.yul\":1107:1116   */\n      dup4\n        /* \"#utility.yul\":1103:1121   */\n      add\n        /* \"#utility.yul\":1095:1101   */\n      dup5\n        /* \"#utility.yul\":1066:1122   */\n      tag_292\n      jump\t// in\n        /* \"#utility.yul\":1133:1313   */\n    tag_33:\n        /* \"#utility.yul\":1192:1198   */\n      0x00\n        /* \"#utility.yul\":1245:1247   */\n      0x20\n        /* \"#utility.yul\":1233:1242   */\n      dup3\n        /* \"#utility.yul\":1224:1231   */\n      dup5\n        /* \"#utility.yul\":1220:1243   */\n      sub\n        /* \"#utility.yul\":1216:1248   */\n      slt\n        /* \"#utility.yul\":1213:1265   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":1261:1262   */\n      0x00\n        /* \"#utility.yul\":1258:1259   */\n      dup1\n        /* \"#utility.yul\":1251:1263   */\n      revert\n        /* \"#utility.yul\":1213:1265   */\n    tag_311:\n      pop\n        /* \"#utility.yul\":1284:1307   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1133:1313   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1526:1699   */\n    tag_293:\n        /* \"#utility.yul\":1594:1614   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1643:1674   */\n      dup2\n      and\n        /* \"#utility.yul\":1633:1675   */\n      dup2\n      eq\n        /* \"#utility.yul\":1623:1693   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":1689:1690   */\n      0x00\n        /* \"#utility.yul\":1686:1687   */\n      dup1\n        /* \"#utility.yul\":1679:1691   */\n      revert\n        /* \"#utility.yul\":1623:1693   */\n    tag_314:\n        /* \"#utility.yul\":1526:1699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1704:1958   */\n    tag_39:\n        /* \"#utility.yul\":1772:1778   */\n      0x00\n        /* \"#utility.yul\":1780:1786   */\n      dup1\n        /* \"#utility.yul\":1833:1835   */\n      0x40\n        /* \"#utility.yul\":1821:1830   */\n      dup4\n        /* \"#utility.yul\":1812:1819   */\n      dup6\n        /* \"#utility.yul\":1808:1831   */\n      sub\n        /* \"#utility.yul\":1804:1836   */\n      slt\n        /* \"#utility.yul\":1801:1853   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":1849:1850   */\n      0x00\n        /* \"#utility.yul\":1846:1847   */\n      dup1\n        /* \"#utility.yul\":1839:1851   */\n      revert\n        /* \"#utility.yul\":1801:1853   */\n    tag_316:\n        /* \"#utility.yul\":1872:1901   */\n      tag_317\n        /* \"#utility.yul\":1891:1900   */\n      dup4\n        /* \"#utility.yul\":1872:1901   */\n      tag_293\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1862:1901   */\n      swap5\n        /* \"#utility.yul\":1948:1950   */\n      0x20\n        /* \"#utility.yul\":1933:1951   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1920:1952   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1704:1958   */\n      jump\t// out\n        /* \"#utility.yul\":1963:2090   */\n    tag_230:\n        /* \"#utility.yul\":2024:2034   */\n      0x4e487b71\n        /* \"#utility.yul\":2019:2022   */\n      0xe0\n        /* \"#utility.yul\":2015:2035   */\n      shl\n        /* \"#utility.yul\":2012:2013   */\n      0x00\n        /* \"#utility.yul\":2005:2036   */\n      mstore\n        /* \"#utility.yul\":2055:2059   */\n      0x41\n        /* \"#utility.yul\":2052:2053   */\n      0x04\n        /* \"#utility.yul\":2045:2060   */\n      mstore\n        /* \"#utility.yul\":2079:2083   */\n      0x24\n        /* \"#utility.yul\":2076:2077   */\n      0x00\n        /* \"#utility.yul\":2069:2084   */\n      revert\n        /* \"#utility.yul\":2095:2727   */\n    tag_294:\n        /* \"#utility.yul\":2160:2165   */\n      0x00\n        /* \"#utility.yul\":2190:2208   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2231:2233   */\n      dup1\n        /* \"#utility.yul\":2223:2229   */\n      dup5\n        /* \"#utility.yul\":2220:2234   */\n      gt\n        /* \"#utility.yul\":2217:2257   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":2237:2255   */\n      tag_321\n      tag_230\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":2312:2314   */\n      0x40\n        /* \"#utility.yul\":2306:2315   */\n      mload\n        /* \"#utility.yul\":2280:2282   */\n      0x1f\n        /* \"#utility.yul\":2366:2381   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2362:2386   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2388:2390   */\n      0x3f\n        /* \"#utility.yul\":2358:2391   */\n      add\n        /* \"#utility.yul\":2354:2396   */\n      and\n        /* \"#utility.yul\":2342:2397   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2412:2430   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":2432:2454   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2409:2455   */\n      or\n        /* \"#utility.yul\":2406:2478   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":2458:2476   */\n      tag_323\n      tag_230\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2498:2508   */\n      dup2\n        /* \"#utility.yul\":2494:2496   */\n      0x40\n        /* \"#utility.yul\":2487:2509   */\n      mstore\n        /* \"#utility.yul\":2527:2533   */\n      dup1\n        /* \"#utility.yul\":2518:2533   */\n      swap4\n      pop\n        /* \"#utility.yul\":2557:2563   */\n      dup6\n        /* \"#utility.yul\":2549:2555   */\n      dup2\n        /* \"#utility.yul\":2542:2564   */\n      mstore\n        /* \"#utility.yul\":2597:2600   */\n      dup7\n        /* \"#utility.yul\":2588:2594   */\n      dup7\n        /* \"#utility.yul\":2583:2586   */\n      dup7\n        /* \"#utility.yul\":2579:2595   */\n      add\n        /* \"#utility.yul\":2576:2601   */\n      gt\n        /* \"#utility.yul\":2573:2618   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":2614:2615   */\n      0x00\n        /* \"#utility.yul\":2611:2612   */\n      dup1\n        /* \"#utility.yul\":2604:2616   */\n      revert\n        /* \"#utility.yul\":2573:2618   */\n    tag_324:\n        /* \"#utility.yul\":2664:2670   */\n      dup6\n        /* \"#utility.yul\":2659:2662   */\n      dup6\n        /* \"#utility.yul\":2652:2656   */\n      0x20\n        /* \"#utility.yul\":2644:2650   */\n      dup4\n        /* \"#utility.yul\":2640:2657   */\n      add\n        /* \"#utility.yul\":2627:2671   */\n      calldatacopy\n        /* \"#utility.yul\":2719:2720   */\n      0x00\n        /* \"#utility.yul\":2712:2716   */\n      0x20\n        /* \"#utility.yul\":2703:2709   */\n      dup8\n        /* \"#utility.yul\":2695:2701   */\n      dup4\n        /* \"#utility.yul\":2691:2710   */\n      add\n        /* \"#utility.yul\":2687:2717   */\n      add\n        /* \"#utility.yul\":2680:2721   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2095:2727   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2732:2954   */\n    tag_295:\n        /* \"#utility.yul\":2775:2780   */\n      0x00\n        /* \"#utility.yul\":2828:2831   */\n      dup3\n        /* \"#utility.yul\":2821:2825   */\n      0x1f\n        /* \"#utility.yul\":2813:2819   */\n      dup4\n        /* \"#utility.yul\":2809:2826   */\n      add\n        /* \"#utility.yul\":2805:2832   */\n      slt\n        /* \"#utility.yul\":2795:2850   */\n      tag_326\n      jumpi\n        /* \"#utility.yul\":2846:2847   */\n      0x00\n        /* \"#utility.yul\":2843:2844   */\n      dup1\n        /* \"#utility.yul\":2836:2848   */\n      revert\n        /* \"#utility.yul\":2795:2850   */\n    tag_326:\n        /* \"#utility.yul\":2868:2948   */\n      tag_166\n        /* \"#utility.yul\":2944:2947   */\n      dup4\n        /* \"#utility.yul\":2935:2941   */\n      dup4\n        /* \"#utility.yul\":2922:2942   */\n      calldataload\n        /* \"#utility.yul\":2915:2919   */\n      0x20\n        /* \"#utility.yul\":2907:2913   */\n      dup6\n        /* \"#utility.yul\":2903:2920   */\n      add\n        /* \"#utility.yul\":2868:2948   */\n      tag_294\n      jump\t// in\n        /* \"#utility.yul\":2959:3645   */\n    tag_43:\n        /* \"#utility.yul\":3065:3071   */\n      0x00\n        /* \"#utility.yul\":3073:3079   */\n      dup1\n        /* \"#utility.yul\":3081:3087   */\n      0x00\n        /* \"#utility.yul\":3089:3095   */\n      dup1\n        /* \"#utility.yul\":3142:3145   */\n      0x80\n        /* \"#utility.yul\":3130:3139   */\n      dup6\n        /* \"#utility.yul\":3121:3128   */\n      dup8\n        /* \"#utility.yul\":3117:3140   */\n      sub\n        /* \"#utility.yul\":3113:3146   */\n      slt\n        /* \"#utility.yul\":3110:3163   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":3159:3160   */\n      0x00\n        /* \"#utility.yul\":3156:3157   */\n      dup1\n        /* \"#utility.yul\":3149:3161   */\n      revert\n        /* \"#utility.yul\":3110:3163   */\n    tag_329:\n        /* \"#utility.yul\":3182:3211   */\n      tag_330\n        /* \"#utility.yul\":3201:3210   */\n      dup6\n        /* \"#utility.yul\":3182:3211   */\n      tag_293\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":3172:3211   */\n      swap4\n      pop\n        /* \"#utility.yul\":3258:3260   */\n      0x20\n        /* \"#utility.yul\":3247:3256   */\n      dup6\n        /* \"#utility.yul\":3243:3261   */\n      add\n        /* \"#utility.yul\":3230:3262   */\n      calldataload\n        /* \"#utility.yul\":3220:3262   */\n      swap3\n      pop\n        /* \"#utility.yul\":3313:3315   */\n      0x40\n        /* \"#utility.yul\":3302:3311   */\n      dup6\n        /* \"#utility.yul\":3298:3316   */\n      add\n        /* \"#utility.yul\":3285:3317   */\n      calldataload\n        /* \"#utility.yul\":3336:3354   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3377:3379   */\n      dup1\n        /* \"#utility.yul\":3369:3375   */\n      dup3\n        /* \"#utility.yul\":3366:3380   */\n      gt\n        /* \"#utility.yul\":3363:3397   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":3393:3394   */\n      0x00\n        /* \"#utility.yul\":3390:3391   */\n      dup1\n        /* \"#utility.yul\":3383:3395   */\n      revert\n        /* \"#utility.yul\":3363:3397   */\n    tag_331:\n        /* \"#utility.yul\":3416:3466   */\n      tag_332\n        /* \"#utility.yul\":3458:3465   */\n      dup9\n        /* \"#utility.yul\":3449:3455   */\n      dup4\n        /* \"#utility.yul\":3438:3447   */\n      dup10\n        /* \"#utility.yul\":3434:3456   */\n      add\n        /* \"#utility.yul\":3416:3466   */\n      tag_295\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":3406:3466   */\n      swap4\n      pop\n        /* \"#utility.yul\":3519:3521   */\n      0x60\n        /* \"#utility.yul\":3508:3517   */\n      dup8\n        /* \"#utility.yul\":3504:3522   */\n      add\n        /* \"#utility.yul\":3491:3523   */\n      calldataload\n        /* \"#utility.yul\":3475:3523   */\n      swap2\n      pop\n        /* \"#utility.yul\":3548:3550   */\n      dup1\n        /* \"#utility.yul\":3538:3546   */\n      dup3\n        /* \"#utility.yul\":3535:3551   */\n      gt\n        /* \"#utility.yul\":3532:3568   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":3564:3565   */\n      0x00\n        /* \"#utility.yul\":3561:3562   */\n      dup1\n        /* \"#utility.yul\":3554:3566   */\n      revert\n        /* \"#utility.yul\":3532:3568   */\n    tag_333:\n      pop\n        /* \"#utility.yul\":3587:3639   */\n      tag_334\n        /* \"#utility.yul\":3631:3638   */\n      dup8\n        /* \"#utility.yul\":3620:3628   */\n      dup3\n        /* \"#utility.yul\":3609:3618   */\n      dup9\n        /* \"#utility.yul\":3605:3629   */\n      add\n        /* \"#utility.yul\":3587:3639   */\n      tag_295\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":3577:3639   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2959:3645   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3650:3978   */\n    tag_47:\n        /* \"#utility.yul\":3727:3733   */\n      0x00\n        /* \"#utility.yul\":3735:3741   */\n      dup1\n        /* \"#utility.yul\":3743:3749   */\n      0x00\n        /* \"#utility.yul\":3796:3798   */\n      0x60\n        /* \"#utility.yul\":3784:3793   */\n      dup5\n        /* \"#utility.yul\":3775:3782   */\n      dup7\n        /* \"#utility.yul\":3771:3794   */\n      sub\n        /* \"#utility.yul\":3767:3799   */\n      slt\n        /* \"#utility.yul\":3764:3816   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":3812:3813   */\n      0x00\n        /* \"#utility.yul\":3809:3810   */\n      dup1\n        /* \"#utility.yul\":3802:3814   */\n      revert\n        /* \"#utility.yul\":3764:3816   */\n    tag_336:\n        /* \"#utility.yul\":3835:3864   */\n      tag_337\n        /* \"#utility.yul\":3854:3863   */\n      dup5\n        /* \"#utility.yul\":3835:3864   */\n      tag_293\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":3825:3864   */\n      swap3\n      pop\n        /* \"#utility.yul\":3883:3921   */\n      tag_338\n        /* \"#utility.yul\":3917:3919   */\n      0x20\n        /* \"#utility.yul\":3906:3915   */\n      dup6\n        /* \"#utility.yul\":3902:3920   */\n      add\n        /* \"#utility.yul\":3883:3921   */\n      tag_293\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3873:3921   */\n      swap2\n      pop\n        /* \"#utility.yul\":3968:3970   */\n      0x40\n        /* \"#utility.yul\":3957:3966   */\n      dup5\n        /* \"#utility.yul\":3953:3971   */\n      add\n        /* \"#utility.yul\":3940:3972   */\n      calldataload\n        /* \"#utility.yul\":3930:3972   */\n      swap1\n      pop\n        /* \"#utility.yul\":3650:3978   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3983:4388   */\n    tag_56:\n        /* \"#utility.yul\":4180:4182   */\n      0x40\n        /* \"#utility.yul\":4169:4178   */\n      dup2\n        /* \"#utility.yul\":4162:4183   */\n      mstore\n        /* \"#utility.yul\":4143:4147   */\n      0x00\n        /* \"#utility.yul\":4206:4262   */\n      tag_340\n        /* \"#utility.yul\":4258:4260   */\n      0x40\n        /* \"#utility.yul\":4247:4256   */\n      dup4\n        /* \"#utility.yul\":4243:4261   */\n      add\n        /* \"#utility.yul\":4235:4241   */\n      dup6\n        /* \"#utility.yul\":4206:4262   */\n      tag_292\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":4310:4319   */\n      dup3\n        /* \"#utility.yul\":4302:4308   */\n      dup2\n        /* \"#utility.yul\":4298:4320   */\n      sub\n        /* \"#utility.yul\":4293:4295   */\n      0x20\n        /* \"#utility.yul\":4282:4291   */\n      dup5\n        /* \"#utility.yul\":4278:4296   */\n      add\n        /* \"#utility.yul\":4271:4321   */\n      mstore\n        /* \"#utility.yul\":4338:4382   */\n      tag_341\n        /* \"#utility.yul\":4375:4381   */\n      dup2\n        /* \"#utility.yul\":4367:4373   */\n      dup6\n        /* \"#utility.yul\":4338:4382   */\n      tag_292\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":4330:4382   */\n      swap6\n        /* \"#utility.yul\":3983:4388   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4393:4579   */\n    tag_63:\n        /* \"#utility.yul\":4452:4458   */\n      0x00\n        /* \"#utility.yul\":4505:4507   */\n      0x20\n        /* \"#utility.yul\":4493:4502   */\n      dup3\n        /* \"#utility.yul\":4484:4491   */\n      dup5\n        /* \"#utility.yul\":4480:4503   */\n      sub\n        /* \"#utility.yul\":4476:4508   */\n      slt\n        /* \"#utility.yul\":4473:4525   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":4521:4522   */\n      0x00\n        /* \"#utility.yul\":4518:4519   */\n      dup1\n        /* \"#utility.yul\":4511:4523   */\n      revert\n        /* \"#utility.yul\":4473:4525   */\n    tag_343:\n        /* \"#utility.yul\":4544:4573   */\n      tag_166\n        /* \"#utility.yul\":4563:4572   */\n      dup3\n        /* \"#utility.yul\":4544:4573   */\n      tag_293\n      jump\t// in\n        /* \"#utility.yul\":4766:5113   */\n    tag_72:\n        /* \"#utility.yul\":4831:4837   */\n      0x00\n        /* \"#utility.yul\":4839:4845   */\n      dup1\n        /* \"#utility.yul\":4892:4894   */\n      0x40\n        /* \"#utility.yul\":4880:4889   */\n      dup4\n        /* \"#utility.yul\":4871:4878   */\n      dup6\n        /* \"#utility.yul\":4867:4890   */\n      sub\n        /* \"#utility.yul\":4863:4895   */\n      slt\n        /* \"#utility.yul\":4860:4912   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":4908:4909   */\n      0x00\n        /* \"#utility.yul\":4905:4906   */\n      dup1\n        /* \"#utility.yul\":4898:4910   */\n      revert\n        /* \"#utility.yul\":4860:4912   */\n    tag_347:\n        /* \"#utility.yul\":4931:4960   */\n      tag_348\n        /* \"#utility.yul\":4950:4959   */\n      dup4\n        /* \"#utility.yul\":4931:4960   */\n      tag_293\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":4921:4960   */\n      swap2\n      pop\n        /* \"#utility.yul\":5010:5012   */\n      0x20\n        /* \"#utility.yul\":4999:5008   */\n      dup4\n        /* \"#utility.yul\":4995:5013   */\n      add\n        /* \"#utility.yul\":4982:5014   */\n      calldataload\n        /* \"#utility.yul\":5057:5062   */\n      dup1\n        /* \"#utility.yul\":5050:5063   */\n      iszero\n        /* \"#utility.yul\":5043:5064   */\n      iszero\n        /* \"#utility.yul\":5036:5041   */\n      dup2\n        /* \"#utility.yul\":5033:5065   */\n      eq\n        /* \"#utility.yul\":5023:5083   */\n      tag_349\n      jumpi\n        /* \"#utility.yul\":5079:5080   */\n      0x00\n        /* \"#utility.yul\":5076:5077   */\n      dup1\n        /* \"#utility.yul\":5069:5081   */\n      revert\n        /* \"#utility.yul\":5023:5083   */\n    tag_349:\n        /* \"#utility.yul\":5102:5107   */\n      dup1\n        /* \"#utility.yul\":5092:5107   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4766:5113   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5118:5785   */\n    tag_76:\n        /* \"#utility.yul\":5213:5219   */\n      0x00\n        /* \"#utility.yul\":5221:5227   */\n      dup1\n        /* \"#utility.yul\":5229:5235   */\n      0x00\n        /* \"#utility.yul\":5237:5243   */\n      dup1\n        /* \"#utility.yul\":5290:5293   */\n      0x80\n        /* \"#utility.yul\":5278:5287   */\n      dup6\n        /* \"#utility.yul\":5269:5276   */\n      dup8\n        /* \"#utility.yul\":5265:5288   */\n      sub\n        /* \"#utility.yul\":5261:5294   */\n      slt\n        /* \"#utility.yul\":5258:5311   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":5307:5308   */\n      0x00\n        /* \"#utility.yul\":5304:5305   */\n      dup1\n        /* \"#utility.yul\":5297:5309   */\n      revert\n        /* \"#utility.yul\":5258:5311   */\n    tag_351:\n        /* \"#utility.yul\":5330:5359   */\n      tag_352\n        /* \"#utility.yul\":5349:5358   */\n      dup6\n        /* \"#utility.yul\":5330:5359   */\n      tag_293\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":5320:5359   */\n      swap4\n      pop\n        /* \"#utility.yul\":5378:5416   */\n      tag_353\n        /* \"#utility.yul\":5412:5414   */\n      0x20\n        /* \"#utility.yul\":5401:5410   */\n      dup7\n        /* \"#utility.yul\":5397:5415   */\n      add\n        /* \"#utility.yul\":5378:5416   */\n      tag_293\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":5368:5416   */\n      swap3\n      pop\n        /* \"#utility.yul\":5463:5465   */\n      0x40\n        /* \"#utility.yul\":5452:5461   */\n      dup6\n        /* \"#utility.yul\":5448:5466   */\n      add\n        /* \"#utility.yul\":5435:5467   */\n      calldataload\n        /* \"#utility.yul\":5425:5467   */\n      swap2\n      pop\n        /* \"#utility.yul\":5518:5520   */\n      0x60\n        /* \"#utility.yul\":5507:5516   */\n      dup6\n        /* \"#utility.yul\":5503:5521   */\n      add\n        /* \"#utility.yul\":5490:5522   */\n      calldataload\n        /* \"#utility.yul\":5545:5563   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5537:5543   */\n      dup2\n        /* \"#utility.yul\":5534:5564   */\n      gt\n        /* \"#utility.yul\":5531:5581   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":5577:5578   */\n      0x00\n        /* \"#utility.yul\":5574:5575   */\n      dup1\n        /* \"#utility.yul\":5567:5579   */\n      revert\n        /* \"#utility.yul\":5531:5581   */\n    tag_354:\n        /* \"#utility.yul\":5600:5622   */\n      dup6\n      add\n        /* \"#utility.yul\":5653:5657   */\n      0x1f\n        /* \"#utility.yul\":5645:5658   */\n      dup2\n      add\n        /* \"#utility.yul\":5641:5668   */\n      dup8\n      sgt\n        /* \"#utility.yul\":5631:5686   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":5682:5683   */\n      0x00\n        /* \"#utility.yul\":5679:5680   */\n      dup1\n        /* \"#utility.yul\":5672:5684   */\n      revert\n        /* \"#utility.yul\":5631:5686   */\n    tag_355:\n        /* \"#utility.yul\":5705:5779   */\n      tag_334\n        /* \"#utility.yul\":5771:5778   */\n      dup8\n        /* \"#utility.yul\":5766:5768   */\n      dup3\n        /* \"#utility.yul\":5753:5769   */\n      calldataload\n        /* \"#utility.yul\":5748:5750   */\n      0x20\n        /* \"#utility.yul\":5744:5746   */\n      dup5\n        /* \"#utility.yul\":5740:5751   */\n      add\n        /* \"#utility.yul\":5705:5779   */\n      tag_294\n      jump\t// in\n        /* \"#utility.yul\":5790:6050   */\n    tag_84:\n        /* \"#utility.yul\":5858:5864   */\n      0x00\n        /* \"#utility.yul\":5866:5872   */\n      dup1\n        /* \"#utility.yul\":5919:5921   */\n      0x40\n        /* \"#utility.yul\":5907:5916   */\n      dup4\n        /* \"#utility.yul\":5898:5905   */\n      dup6\n        /* \"#utility.yul\":5894:5917   */\n      sub\n        /* \"#utility.yul\":5890:5922   */\n      slt\n        /* \"#utility.yul\":5887:5939   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":5935:5936   */\n      0x00\n        /* \"#utility.yul\":5932:5933   */\n      dup1\n        /* \"#utility.yul\":5925:5937   */\n      revert\n        /* \"#utility.yul\":5887:5939   */\n    tag_358:\n        /* \"#utility.yul\":5958:5987   */\n      tag_359\n        /* \"#utility.yul\":5977:5986   */\n      dup4\n        /* \"#utility.yul\":5958:5987   */\n      tag_293\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5948:5987   */\n      swap2\n      pop\n        /* \"#utility.yul\":6006:6044   */\n      tag_360\n        /* \"#utility.yul\":6040:6042   */\n      0x20\n        /* \"#utility.yul\":6029:6038   */\n      dup5\n        /* \"#utility.yul\":6025:6043   */\n      add\n        /* \"#utility.yul\":6006:6044   */\n      tag_293\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":5996:6044   */\n      swap1\n      pop\n        /* \"#utility.yul\":5790:6050   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6055:6435   */\n    tag_94:\n        /* \"#utility.yul\":6134:6135   */\n      0x01\n        /* \"#utility.yul\":6130:6142   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6177:6189   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6198:6259   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":6252:6256   */\n      0x7f\n        /* \"#utility.yul\":6244:6250   */\n      dup3\n        /* \"#utility.yul\":6240:6257   */\n      and\n        /* \"#utility.yul\":6230:6257   */\n      swap2\n      pop\n        /* \"#utility.yul\":6198:6259   */\n    tag_362:\n        /* \"#utility.yul\":6305:6307   */\n      0x20\n        /* \"#utility.yul\":6297:6303   */\n      dup3\n        /* \"#utility.yul\":6294:6308   */\n      lt\n        /* \"#utility.yul\":6274:6292   */\n      dup2\n        /* \"#utility.yul\":6271:6309   */\n      sub\n        /* \"#utility.yul\":6268:6429   */\n      tag_363\n      jumpi\n        /* \"#utility.yul\":6351:6361   */\n      0x4e487b71\n        /* \"#utility.yul\":6346:6349   */\n      0xe0\n        /* \"#utility.yul\":6342:6362   */\n      shl\n        /* \"#utility.yul\":6339:6340   */\n      0x00\n        /* \"#utility.yul\":6332:6363   */\n      mstore\n        /* \"#utility.yul\":6386:6390   */\n      0x22\n        /* \"#utility.yul\":6383:6384   */\n      0x04\n        /* \"#utility.yul\":6376:6391   */\n      mstore\n        /* \"#utility.yul\":6414:6418   */\n      0x24\n        /* \"#utility.yul\":6411:6412   */\n      0x00\n        /* \"#utility.yul\":6404:6419   */\n      revert\n        /* \"#utility.yul\":6268:6429   */\n    tag_363:\n      pop\n        /* \"#utility.yul\":6055:6435   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6566:7084   */\n    tag_297:\n        /* \"#utility.yul\":6668:6670   */\n      0x1f\n        /* \"#utility.yul\":6663:6666   */\n      dup3\n        /* \"#utility.yul\":6660:6671   */\n      gt\n        /* \"#utility.yul\":6657:7078   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":6704:6709   */\n      dup1\n        /* \"#utility.yul\":6701:6702   */\n      0x00\n        /* \"#utility.yul\":6694:6710   */\n      mstore\n        /* \"#utility.yul\":6748:6752   */\n      0x20\n        /* \"#utility.yul\":6745:6746   */\n      0x00\n        /* \"#utility.yul\":6735:6753   */\n      keccak256\n        /* \"#utility.yul\":6818:6820   */\n      0x1f\n        /* \"#utility.yul\":6806:6816   */\n      dup5\n        /* \"#utility.yul\":6802:6821   */\n      add\n        /* \"#utility.yul\":6799:6800   */\n      0x05\n        /* \"#utility.yul\":6795:6822   */\n      shr\n        /* \"#utility.yul\":6789:6793   */\n      dup2\n        /* \"#utility.yul\":6785:6823   */\n      add\n        /* \"#utility.yul\":6854:6858   */\n      0x20\n        /* \"#utility.yul\":6842:6852   */\n      dup6\n        /* \"#utility.yul\":6839:6859   */\n      lt\n        /* \"#utility.yul\":6836:6883   */\n      iszero\n      tag_367\n      jumpi\n      pop\n        /* \"#utility.yul\":6877:6881   */\n      dup1\n        /* \"#utility.yul\":6836:6883   */\n    tag_367:\n        /* \"#utility.yul\":6932:6934   */\n      0x1f\n        /* \"#utility.yul\":6927:6930   */\n      dup5\n        /* \"#utility.yul\":6923:6935   */\n      add\n        /* \"#utility.yul\":6920:6921   */\n      0x05\n        /* \"#utility.yul\":6916:6936   */\n      shr\n        /* \"#utility.yul\":6910:6914   */\n      dup3\n        /* \"#utility.yul\":6906:6937   */\n      add\n        /* \"#utility.yul\":6896:6937   */\n      swap2\n      pop\n        /* \"#utility.yul\":6987:7068   */\n    tag_368:\n        /* \"#utility.yul\":7005:7007   */\n      dup2\n        /* \"#utility.yul\":6998:7003   */\n      dup2\n        /* \"#utility.yul\":6995:7008   */\n      lt\n        /* \"#utility.yul\":6987:7068   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":7064:7065   */\n      0x00\n        /* \"#utility.yul\":7050:7066   */\n      dup2\n      sstore\n        /* \"#utility.yul\":7031:7032   */\n      0x01\n        /* \"#utility.yul\":7020:7033   */\n      add\n        /* \"#utility.yul\":6987:7068   */\n      jump(tag_368)\n        /* \"#utility.yul\":7260:8605   */\n    tag_113:\n        /* \"#utility.yul\":7386:7389   */\n      dup2\n        /* \"#utility.yul\":7380:7390   */\n      mload\n        /* \"#utility.yul\":7413:7431   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7405:7411   */\n      dup2\n        /* \"#utility.yul\":7402:7432   */\n      gt\n        /* \"#utility.yul\":7399:7455   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":7435:7453   */\n      tag_374\n      tag_230\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7464:7561   */\n      tag_375\n        /* \"#utility.yul\":7554:7560   */\n      dup2\n        /* \"#utility.yul\":7514:7552   */\n      tag_376\n        /* \"#utility.yul\":7546:7550   */\n      dup5\n        /* \"#utility.yul\":7540:7551   */\n      sload\n        /* \"#utility.yul\":7514:7552   */\n      tag_94\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":7508:7512   */\n      dup5\n        /* \"#utility.yul\":7464:7561   */\n      tag_297\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":7616:7620   */\n      0x20\n      dup1\n        /* \"#utility.yul\":7673:7675   */\n      0x1f\n        /* \"#utility.yul\":7662:7676   */\n      dup4\n      gt\n        /* \"#utility.yul\":7690:7691   */\n      0x01\n        /* \"#utility.yul\":7685:8348   */\n      dup2\n      eq\n      tag_378\n      jumpi\n        /* \"#utility.yul\":8392:8393   */\n      0x00\n        /* \"#utility.yul\":8409:8415   */\n      dup5\n        /* \"#utility.yul\":8406:8495   */\n      iszero\n      tag_379\n      jumpi\n      pop\n        /* \"#utility.yul\":8461:8480   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":8455:8481   */\n      mload\n        /* \"#utility.yul\":8406:8495   */\n    tag_379:\n      not(0x00)\n        /* \"#utility.yul\":7217:7218   */\n      0x03\n        /* \"#utility.yul\":7213:7224   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":7209:7233   */\n      shr\n        /* \"#utility.yul\":7205:7234   */\n      not\n        /* \"#utility.yul\":7195:7235   */\n      and\n        /* \"#utility.yul\":7241:7242   */\n      0x01\n        /* \"#utility.yul\":7237:7248   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":7192:7249   */\n      or\n        /* \"#utility.yul\":8508:8589   */\n      dup6\n      sstore\n        /* \"#utility.yul\":7655:8599   */\n      jump(tag_377)\n        /* \"#utility.yul\":7685:8348   */\n    tag_378:\n        /* \"#utility.yul\":6513:6514   */\n      0x00\n        /* \"#utility.yul\":6506:6520   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":6550:6554   */\n      0x20\n        /* \"#utility.yul\":6537:6555   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":7721:7741   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":7839:8075   */\n    tag_382:\n        /* \"#utility.yul\":7853:7860   */\n      dup3\n        /* \"#utility.yul\":7850:7851   */\n      dup2\n        /* \"#utility.yul\":7847:7861   */\n      lt\n        /* \"#utility.yul\":7839:8075   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":7942:7961   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":7936:7962   */\n      mload\n        /* \"#utility.yul\":7921:7963   */\n      dup3\n      sstore\n        /* \"#utility.yul\":8034:8061   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":8002:8003   */\n      0x01\n        /* \"#utility.yul\":7990:8004   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":7869:7888   */\n      dup5\n      add\n        /* \"#utility.yul\":7839:8075   */\n      jump(tag_382)\n    tag_384:\n        /* \"#utility.yul\":7843:7846   */\n      pop\n        /* \"#utility.yul\":8103:8109   */\n      dup6\n        /* \"#utility.yul\":8094:8101   */\n      dup3\n        /* \"#utility.yul\":8091:8110   */\n      lt\n        /* \"#utility.yul\":8088:8289   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":8164:8183   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":8158:8184   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":8247:8248   */\n      0x03\n        /* \"#utility.yul\":8243:8257   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":8259:8262   */\n      0xf8\n        /* \"#utility.yul\":8239:8263   */\n      and\n        /* \"#utility.yul\":8235:8272   */\n      shr\n        /* \"#utility.yul\":8231:8273   */\n      not\n        /* \"#utility.yul\":8216:8274   */\n      and\n        /* \"#utility.yul\":8201:8275   */\n      dup2\n      sstore\n        /* \"#utility.yul\":8088:8289   */\n    tag_385:\n      pop\n      pop\n        /* \"#utility.yul\":8335:8336   */\n      0x01\n        /* \"#utility.yul\":8326:8332   */\n      dup5\n        /* \"#utility.yul\":8323:8324   */\n      0x01\n        /* \"#utility.yul\":8319:8333   */\n      shl\n        /* \"#utility.yul\":8315:8337   */\n      add\n        /* \"#utility.yul\":8309:8313   */\n      dup6\n        /* \"#utility.yul\":8302:8338   */\n      sstore\n        /* \"#utility.yul\":7655:8599   */\n    tag_377:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7260:8605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9342:9554   */\n    tag_299:\n        /* \"#utility.yul\":9384:9387   */\n      0x00\n        /* \"#utility.yul\":9422:9427   */\n      dup2\n        /* \"#utility.yul\":9416:9428   */\n      mload\n        /* \"#utility.yul\":9466:9472   */\n      dup1\n        /* \"#utility.yul\":9459:9463   */\n      0x20\n        /* \"#utility.yul\":9452:9457   */\n      dup5\n        /* \"#utility.yul\":9448:9464   */\n      add\n        /* \"#utility.yul\":9443:9446   */\n      dup6\n        /* \"#utility.yul\":9437:9473   */\n      mcopy\n        /* \"#utility.yul\":9528:9529   */\n      0x00\n        /* \"#utility.yul\":9492:9508   */\n      swap4\n      add\n        /* \"#utility.yul\":9517:9530   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":9492:9508   */\n      swap1\n      swap2\n        /* \"#utility.yul\":9342:9554   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9559:9826   */\n    tag_170:\n        /* \"#utility.yul\":9738:9741   */\n      0x00\n        /* \"#utility.yul\":9763:9820   */\n      tag_285\n        /* \"#utility.yul\":9789:9819   */\n      tag_391\n        /* \"#utility.yul\":9815:9818   */\n      dup4\n        /* \"#utility.yul\":9807:9813   */\n      dup7\n        /* \"#utility.yul\":9789:9819   */\n      tag_299\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":9781:9787   */\n      dup5\n        /* \"#utility.yul\":9763:9820   */\n      tag_299\n      jump\t// in\n        /* \"#utility.yul\":9831:10331   */\n    tag_208:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10100:10115   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":10082:10116   */\n      dup3\n      mstore\n        /* \"#utility.yul\":10152:10167   */\n      dup5\n      and\n        /* \"#utility.yul\":10147:10149   */\n      0x20\n        /* \"#utility.yul\":10132:10150   */\n      dup3\n      add\n        /* \"#utility.yul\":10125:10168   */\n      mstore\n        /* \"#utility.yul\":10199:10201   */\n      0x40\n        /* \"#utility.yul\":10184:10202   */\n      dup2\n      add\n        /* \"#utility.yul\":10177:10211   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":10247:10250   */\n      0x80\n        /* \"#utility.yul\":10242:10244   */\n      0x60\n        /* \"#utility.yul\":10227:10245   */\n      dup3\n      add\n        /* \"#utility.yul\":10220:10251   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10025:10029   */\n      0x00\n      swap1\n        /* \"#utility.yul\":10268:10325   */\n      tag_393\n      swap1\n        /* \"#utility.yul\":10305:10324   */\n      dup4\n      add\n        /* \"#utility.yul\":10297:10303   */\n      dup5\n        /* \"#utility.yul\":10268:10325   */\n      tag_292\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":10260:10325   */\n      swap7\n        /* \"#utility.yul\":9831:10331   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10336:10585   */\n    tag_211:\n        /* \"#utility.yul\":10405:10411   */\n      0x00\n        /* \"#utility.yul\":10458:10460   */\n      0x20\n        /* \"#utility.yul\":10446:10455   */\n      dup3\n        /* \"#utility.yul\":10437:10444   */\n      dup5\n        /* \"#utility.yul\":10433:10456   */\n      sub\n        /* \"#utility.yul\":10429:10461   */\n      slt\n        /* \"#utility.yul\":10426:10478   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":10474:10475   */\n      0x00\n        /* \"#utility.yul\":10471:10472   */\n      dup1\n        /* \"#utility.yul\":10464:10476   */\n      revert\n        /* \"#utility.yul\":10426:10478   */\n    tag_395:\n        /* \"#utility.yul\":10506:10515   */\n      dup2\n        /* \"#utility.yul\":10500:10516   */\n      mload\n        /* \"#utility.yul\":10525:10555   */\n      tag_166\n        /* \"#utility.yul\":10549:10554   */\n      dup2\n        /* \"#utility.yul\":10525:10555   */\n      tag_291\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220a8d92a996298d9123c937872b79af072f53426f6c13f4c4ceb3557cd71c0a8d164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_206": {
									"entryPoint": null,
									"id": 206,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_4547": {
									"entryPoint": null,
									"id": 4547,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 111,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2698:14",
										"nodeType": "YulBlock",
										"src": "0:2698:14",
										"statements": [
											{
												"nativeSrc": "6:3:14",
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:14",
													"nodeType": "YulBlock",
													"src": "46:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:14",
																		"nodeType": "YulLiteral",
																		"src": "63:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:14",
																				"nodeType": "YulLiteral",
																				"src": "70:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:14",
																				"nodeType": "YulLiteral",
																				"src": "75:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:14"
																		},
																		"nativeSrc": "66:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:14"
																},
																"nativeSrc": "56:31:14",
																"nodeType": "YulFunctionCall",
																"src": "56:31:14"
															},
															"nativeSrc": "56:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:14",
																		"nodeType": "YulLiteral",
																		"src": "103:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:14",
																		"nodeType": "YulLiteral",
																		"src": "106:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:14"
																},
																"nativeSrc": "96:15:14",
																"nodeType": "YulFunctionCall",
																"src": "96:15:14"
															},
															"nativeSrc": "96:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:14",
																		"nodeType": "YulLiteral",
																		"src": "127:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:14",
																		"nodeType": "YulLiteral",
																		"src": "130:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:14"
																},
																"nativeSrc": "120:15:14",
																"nodeType": "YulFunctionCall",
																"src": "120:15:14"
															},
															"nativeSrc": "120:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:14"
											},
											{
												"body": {
													"nativeSrc": "201:325:14",
													"nodeType": "YulBlock",
													"src": "201:325:14",
													"statements": [
														{
															"nativeSrc": "211:22:14",
															"nodeType": "YulAssignment",
															"src": "211:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:14",
																		"nodeType": "YulLiteral",
																		"src": "225:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:14"
																},
																"nativeSrc": "221:12:14",
																"nodeType": "YulFunctionCall",
																"src": "221:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:14"
																}
															]
														},
														{
															"nativeSrc": "242:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:14",
																		"nodeType": "YulLiteral",
																		"src": "278:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:14"
																},
																"nativeSrc": "268:12:14",
																"nodeType": "YulFunctionCall",
																"src": "268:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:14",
																	"nodeType": "YulTypedName",
																	"src": "246:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:14",
																"nodeType": "YulBlock",
																"src": "319:31:14",
																"statements": [
																	{
																		"nativeSrc": "321:27:14",
																		"nodeType": "YulAssignment",
																		"src": "321:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:14",
																					"nodeType": "YulLiteral",
																					"src": "343:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:14"
																			},
																			"nativeSrc": "331:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:14"
																},
																"nativeSrc": "292:26:14",
																"nodeType": "YulFunctionCall",
																"src": "292:26:14"
															},
															"nativeSrc": "289:61:14",
															"nodeType": "YulIf",
															"src": "289:61:14"
														},
														{
															"body": {
																"nativeSrc": "409:111:14",
																"nodeType": "YulBlock",
																"src": "409:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:14",
																					"nodeType": "YulLiteral",
																					"src": "430:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:14",
																							"nodeType": "YulLiteral",
																							"src": "437:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:14",
																							"nodeType": "YulLiteral",
																							"src": "442:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:14"
																					},
																					"nativeSrc": "433:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:14"
																			},
																			"nativeSrc": "423:31:14",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:14"
																		},
																		"nativeSrc": "423:31:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:14",
																					"nodeType": "YulLiteral",
																					"src": "474:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:14",
																					"nodeType": "YulLiteral",
																					"src": "477:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:14"
																			},
																			"nativeSrc": "467:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:14"
																		},
																		"nativeSrc": "467:15:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:14",
																					"nodeType": "YulLiteral",
																					"src": "502:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:14",
																					"nodeType": "YulLiteral",
																					"src": "505:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:14"
																			},
																			"nativeSrc": "495:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:14"
																		},
																		"nativeSrc": "495:15:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:14",
																				"nodeType": "YulLiteral",
																				"src": "396:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:14"
																		},
																		"nativeSrc": "385:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:14"
																},
																"nativeSrc": "362:38:14",
																"nodeType": "YulFunctionCall",
																"src": "362:38:14"
															},
															"nativeSrc": "359:161:14",
															"nodeType": "YulIf",
															"src": "359:161:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:14",
														"nodeType": "YulTypedName",
														"src": "181:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:14",
														"nodeType": "YulTypedName",
														"src": "190:6:14",
														"type": ""
													}
												],
												"src": "146:380:14"
											},
											{
												"body": {
													"nativeSrc": "587:65:14",
													"nodeType": "YulBlock",
													"src": "587:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:14",
																		"nodeType": "YulLiteral",
																		"src": "604:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:14"
																},
																"nativeSrc": "597:14:14",
																"nodeType": "YulFunctionCall",
																"src": "597:14:14"
															},
															"nativeSrc": "597:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:14"
														},
														{
															"nativeSrc": "620:26:14",
															"nodeType": "YulAssignment",
															"src": "620:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:14",
																		"nodeType": "YulLiteral",
																		"src": "638:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:14",
																		"nodeType": "YulLiteral",
																		"src": "641:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:14"
																},
																"nativeSrc": "628:18:14",
																"nodeType": "YulFunctionCall",
																"src": "628:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:14",
														"nodeType": "YulTypedName",
														"src": "570:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:14",
														"nodeType": "YulTypedName",
														"src": "578:4:14",
														"type": ""
													}
												],
												"src": "531:121:14"
											},
											{
												"body": {
													"nativeSrc": "738:437:14",
													"nodeType": "YulBlock",
													"src": "738:437:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:398:14",
																"nodeType": "YulBlock",
																"src": "771:398:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "792:1:14",
																					"nodeType": "YulLiteral",
																					"src": "792:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "795:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "795:5:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "785:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "785:6:14"
																			},
																			"nativeSrc": "785:16:14",
																			"nodeType": "YulFunctionCall",
																			"src": "785:16:14"
																		},
																		"nativeSrc": "785:16:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "785:16:14"
																	},
																	{
																		"nativeSrc": "814:30:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "814:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "836:1:14",
																					"nodeType": "YulLiteral",
																					"src": "836:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "839:4:14",
																					"nodeType": "YulLiteral",
																					"src": "839:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "826:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:14"
																			},
																			"nativeSrc": "826:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "826:18:14"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "818:4:14",
																				"nodeType": "YulTypedName",
																				"src": "818:4:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "857:57:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "857:57:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "880:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "880:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "890:1:14",
																							"nodeType": "YulLiteral",
																							"src": "890:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "897:10:14",
																									"nodeType": "YulIdentifier",
																									"src": "897:10:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "909:2:14",
																									"nodeType": "YulLiteral",
																									"src": "909:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "893:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "893:3:14"
																							},
																							"nativeSrc": "893:19:14",
																							"nodeType": "YulFunctionCall",
																							"src": "893:19:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "886:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "886:3:14"
																					},
																					"nativeSrc": "886:27:14",
																					"nodeType": "YulFunctionCall",
																					"src": "886:27:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "876:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "876:3:14"
																			},
																			"nativeSrc": "876:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "876:38:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "861:11:14",
																				"nodeType": "YulTypedName",
																				"src": "861:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "951:23:14",
																			"nodeType": "YulBlock",
																			"src": "951:23:14",
																			"statements": [
																				{
																					"nativeSrc": "953:19:14",
																					"nodeType": "YulAssignment",
																					"src": "953:19:14",
																					"value": {
																						"name": "data",
																						"nativeSrc": "968:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "968:4:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "953:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "953:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "933:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "933:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "945:4:14",
																					"nodeType": "YulLiteral",
																					"src": "945:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "930:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "930:2:14"
																			},
																			"nativeSrc": "930:20:14",
																			"nodeType": "YulFunctionCall",
																			"src": "930:20:14"
																		},
																		"nativeSrc": "927:47:14",
																		"nodeType": "YulIf",
																		"src": "927:47:14"
																	},
																	{
																		"nativeSrc": "987:41:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "987:41:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1001:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "1001:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1011:1:14",
																							"nodeType": "YulLiteral",
																							"src": "1011:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1018:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "1018:3:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1023:2:14",
																									"nodeType": "YulLiteral",
																									"src": "1023:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1014:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "1014:3:14"
																							},
																							"nativeSrc": "1014:12:14",
																							"nodeType": "YulFunctionCall",
																							"src": "1014:12:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1007:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "1007:3:14"
																					},
																					"nativeSrc": "1007:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1007:20:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "997:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "997:3:14"
																			},
																			"nativeSrc": "997:31:14",
																			"nodeType": "YulFunctionCall",
																			"src": "997:31:14"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "991:2:14",
																				"nodeType": "YulTypedName",
																				"src": "991:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1041:24:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1041:24:14",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1054:11:14",
																			"nodeType": "YulIdentifier",
																			"src": "1054:11:14"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1045:5:14",
																				"nodeType": "YulTypedName",
																				"src": "1045:5:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1139:20:14",
																			"nodeType": "YulBlock",
																			"src": "1139:20:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1148:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "1148:5:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1155:1:14",
																								"nodeType": "YulLiteral",
																								"src": "1155:1:14",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1141:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "1141:6:14"
																						},
																						"nativeSrc": "1141:16:14",
																						"nodeType": "YulFunctionCall",
																						"src": "1141:16:14"
																					},
																					"nativeSrc": "1141:16:14",
																					"nodeType": "YulExpressionStatement",
																					"src": "1141:16:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1089:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "1089:5:14"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1096:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "1096:2:14"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1086:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "1086:2:14"
																			},
																			"nativeSrc": "1086:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1086:13:14"
																		},
																		"nativeSrc": "1078:81:14",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1100:26:14",
																			"nodeType": "YulBlock",
																			"src": "1100:26:14",
																			"statements": [
																				{
																					"nativeSrc": "1102:22:14",
																					"nodeType": "YulAssignment",
																					"src": "1102:22:14",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1115:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "1115:5:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1122:1:14",
																								"nodeType": "YulLiteral",
																								"src": "1122:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1111:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1111:3:14"
																						},
																						"nativeSrc": "1111:13:14",
																						"nodeType": "YulFunctionCall",
																						"src": "1111:13:14"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1102:5:14",
																							"nodeType": "YulIdentifier",
																							"src": "1102:5:14"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1082:3:14",
																			"nodeType": "YulBlock",
																			"src": "1082:3:14",
																			"statements": []
																		},
																		"src": "1078:81:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:14",
																		"nodeType": "YulLiteral",
																		"src": "759:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:14"
																},
																"nativeSrc": "751:11:14",
																"nodeType": "YulFunctionCall",
																"src": "751:11:14"
															},
															"nativeSrc": "748:421:14",
															"nodeType": "YulIf",
															"src": "748:421:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:518:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:14",
														"nodeType": "YulTypedName",
														"src": "710:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:14",
														"nodeType": "YulTypedName",
														"src": "717:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:14",
														"nodeType": "YulTypedName",
														"src": "722:10:14",
														"type": ""
													}
												],
												"src": "657:518:14"
											},
											{
												"body": {
													"nativeSrc": "1265:81:14",
													"nodeType": "YulBlock",
													"src": "1265:81:14",
													"statements": [
														{
															"nativeSrc": "1275:65:14",
															"nodeType": "YulAssignment",
															"src": "1275:65:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1290:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "1290:4:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1308:1:14",
																										"nodeType": "YulLiteral",
																										"src": "1308:1:14",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1311:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "1311:3:14"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1304:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "1304:3:14"
																								},
																								"nativeSrc": "1304:11:14",
																								"nodeType": "YulFunctionCall",
																								"src": "1304:11:14"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1321:1:14",
																										"nodeType": "YulLiteral",
																										"src": "1321:1:14",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1317:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "1317:3:14"
																								},
																								"nativeSrc": "1317:6:14",
																								"nodeType": "YulFunctionCall",
																								"src": "1317:6:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1300:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1300:3:14"
																						},
																						"nativeSrc": "1300:24:14",
																						"nodeType": "YulFunctionCall",
																						"src": "1300:24:14"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1296:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:14"
																				},
																				"nativeSrc": "1296:29:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1296:29:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1286:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1286:3:14"
																		},
																		"nativeSrc": "1286:40:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1286:40:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1332:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1332:1:14",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1335:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1335:3:14"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1328:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1328:3:14"
																		},
																		"nativeSrc": "1328:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1328:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1283:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1283:2:14"
																},
																"nativeSrc": "1283:57:14",
																"nodeType": "YulFunctionCall",
																"src": "1283:57:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1275:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1275:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1180:166:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1242:4:14",
														"nodeType": "YulTypedName",
														"src": "1242:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1248:3:14",
														"nodeType": "YulTypedName",
														"src": "1248:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1256:4:14",
														"nodeType": "YulTypedName",
														"src": "1256:4:14",
														"type": ""
													}
												],
												"src": "1180:166:14"
											},
											{
												"body": {
													"nativeSrc": "1447:1249:14",
													"nodeType": "YulBlock",
													"src": "1447:1249:14",
													"statements": [
														{
															"nativeSrc": "1457:24:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1457:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1477:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1471:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1471:5:14"
																},
																"nativeSrc": "1471:10:14",
																"nodeType": "YulFunctionCall",
																"src": "1471:10:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1461:6:14",
																	"nodeType": "YulTypedName",
																	"src": "1461:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1524:22:14",
																"nodeType": "YulBlock",
																"src": "1524:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1526:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "1526:16:14"
																			},
																			"nativeSrc": "1526:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1526:18:14"
																		},
																		"nativeSrc": "1526:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1526:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1496:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1512:2:14",
																						"nodeType": "YulLiteral",
																						"src": "1512:2:14",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1516:1:14",
																						"nodeType": "YulLiteral",
																						"src": "1516:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1508:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1508:3:14"
																				},
																				"nativeSrc": "1508:10:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1508:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1520:1:14",
																				"nodeType": "YulLiteral",
																				"src": "1520:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1504:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1504:3:14"
																		},
																		"nativeSrc": "1504:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1504:18:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1493:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:14"
																},
																"nativeSrc": "1493:30:14",
																"nodeType": "YulFunctionCall",
																"src": "1493:30:14"
															},
															"nativeSrc": "1490:56:14",
															"nodeType": "YulIf",
															"src": "1490:56:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1599:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "1599:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1637:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "1637:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1631:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "1631:5:14"
																				},
																				"nativeSrc": "1631:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1631:11:14"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1605:25:14",
																			"nodeType": "YulIdentifier",
																			"src": "1605:25:14"
																		},
																		"nativeSrc": "1605:38:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1605:38:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1645:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1645:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1555:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "1555:43:14"
																},
																"nativeSrc": "1555:97:14",
																"nodeType": "YulFunctionCall",
																"src": "1555:97:14"
															},
															"nativeSrc": "1555:97:14",
															"nodeType": "YulExpressionStatement",
															"src": "1555:97:14"
														},
														{
															"nativeSrc": "1661:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1661:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "1678:1:14",
																"nodeType": "YulLiteral",
																"src": "1678:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1665:9:14",
																	"nodeType": "YulTypedName",
																	"src": "1665:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1688:23:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1688:23:14",
															"value": {
																"kind": "number",
																"nativeSrc": "1707:4:14",
																"nodeType": "YulLiteral",
																"src": "1707:4:14",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1692:11:14",
																	"nodeType": "YulTypedName",
																	"src": "1692:11:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1720:17:14",
															"nodeType": "YulAssignment",
															"src": "1720:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "1733:4:14",
																"nodeType": "YulLiteral",
																"src": "1733:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1720:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "1720:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1783:656:14",
																		"nodeType": "YulBlock",
																		"src": "1783:656:14",
																		"statements": [
																			{
																				"nativeSrc": "1797:35:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1797:35:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1816:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "1816:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1828:2:14",
																									"nodeType": "YulLiteral",
																									"src": "1828:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1824:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "1824:3:14"
																							},
																							"nativeSrc": "1824:7:14",
																							"nodeType": "YulFunctionCall",
																							"src": "1824:7:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1812:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "1812:3:14"
																					},
																					"nativeSrc": "1812:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1812:20:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1801:7:14",
																						"nodeType": "YulTypedName",
																						"src": "1801:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1845:49:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1845:49:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1889:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "1889:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1859:29:14",
																						"nodeType": "YulIdentifier",
																						"src": "1859:29:14"
																					},
																					"nativeSrc": "1859:35:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1859:35:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1849:6:14",
																						"nodeType": "YulTypedName",
																						"src": "1849:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1907:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1907:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1916:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1916:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1911:1:14",
																						"nodeType": "YulTypedName",
																						"src": "1911:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "1994:172:14",
																					"nodeType": "YulBlock",
																					"src": "1994:172:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2019:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "2019:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2037:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "2037:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2042:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "2042:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2033:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "2033:3:14"
																												},
																												"nativeSrc": "2033:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "2033:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2027:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "2027:5:14"
																										},
																										"nativeSrc": "2027:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "2027:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2012:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "2012:6:14"
																								},
																								"nativeSrc": "2012:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "2012:42:14"
																							},
																							"nativeSrc": "2012:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "2012:42:14"
																						},
																						{
																							"nativeSrc": "2071:24:14",
																							"nodeType": "YulAssignment",
																							"src": "2071:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2085:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "2085:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2093:1:14",
																										"nodeType": "YulLiteral",
																										"src": "2093:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2081:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "2081:3:14"
																								},
																								"nativeSrc": "2081:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "2081:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2071:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "2071:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2112:40:14",
																							"nodeType": "YulAssignment",
																							"src": "2112:40:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2129:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "2129:9:14"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2140:11:14",
																										"nodeType": "YulIdentifier",
																										"src": "2140:11:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2125:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "2125:3:14"
																								},
																								"nativeSrc": "2125:27:14",
																								"nodeType": "YulFunctionCall",
																								"src": "2125:27:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2112:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "2112:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1941:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "1941:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1944:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "1944:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1938:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "1938:2:14"
																					},
																					"nativeSrc": "1938:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "1938:14:14"
																				},
																				"nativeSrc": "1930:236:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1953:28:14",
																					"nodeType": "YulBlock",
																					"src": "1953:28:14",
																					"statements": [
																						{
																							"nativeSrc": "1955:24:14",
																							"nodeType": "YulAssignment",
																							"src": "1955:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1964:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "1964:1:14"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "1967:11:14",
																										"nodeType": "YulIdentifier",
																										"src": "1967:11:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1960:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "1960:3:14"
																								},
																								"nativeSrc": "1960:19:14",
																								"nodeType": "YulFunctionCall",
																								"src": "1960:19:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1955:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "1955:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1934:3:14",
																					"nodeType": "YulBlock",
																					"src": "1934:3:14",
																					"statements": []
																				},
																				"src": "1930:236:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "2214:166:14",
																					"nodeType": "YulBlock",
																					"src": "2214:166:14",
																					"statements": [
																						{
																							"nativeSrc": "2232:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2232:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2259:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "2259:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2264:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "2264:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2255:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "2255:3:14"
																										},
																										"nativeSrc": "2255:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "2255:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2249:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "2249:5:14"
																								},
																								"nativeSrc": "2249:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "2249:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2236:9:14",
																									"nodeType": "YulTypedName",
																									"src": "2236:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2299:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "2299:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2311:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "2311:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2338:1:14",
																																				"nodeType": "YulLiteral",
																																				"src": "2338:1:14",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2341:6:14",
																																				"nodeType": "YulIdentifier",
																																				"src": "2341:6:14"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2334:3:14",
																																			"nodeType": "YulIdentifier",
																																			"src": "2334:3:14"
																																		},
																																		"nativeSrc": "2334:14:14",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2334:14:14"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2350:3:14",
																																		"nodeType": "YulLiteral",
																																		"src": "2350:3:14",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2330:3:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "2330:3:14"
																																},
																																"nativeSrc": "2330:24:14",
																																"nodeType": "YulFunctionCall",
																																"src": "2330:24:14"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2360:1:14",
																																		"nodeType": "YulLiteral",
																																		"src": "2360:1:14",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2356:3:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "2356:3:14"
																																},
																																"nativeSrc": "2356:6:14",
																																"nodeType": "YulFunctionCall",
																																"src": "2356:6:14"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2326:3:14",
																															"nodeType": "YulIdentifier",
																															"src": "2326:3:14"
																														},
																														"nativeSrc": "2326:37:14",
																														"nodeType": "YulFunctionCall",
																														"src": "2326:37:14"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2322:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "2322:3:14"
																												},
																												"nativeSrc": "2322:42:14",
																												"nodeType": "YulFunctionCall",
																												"src": "2322:42:14"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2307:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "2307:3:14"
																										},
																										"nativeSrc": "2307:58:14",
																										"nodeType": "YulFunctionCall",
																										"src": "2307:58:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2292:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "2292:6:14"
																								},
																								"nativeSrc": "2292:74:14",
																								"nodeType": "YulFunctionCall",
																								"src": "2292:74:14"
																							},
																							"nativeSrc": "2292:74:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "2292:74:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2185:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "2185:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2194:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "2194:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2182:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "2182:2:14"
																					},
																					"nativeSrc": "2182:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "2182:19:14"
																				},
																				"nativeSrc": "2179:201:14",
																				"nodeType": "YulIf",
																				"src": "2179:201:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2400:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "2400:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2414:1:14",
																											"nodeType": "YulLiteral",
																											"src": "2414:1:14",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2417:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "2417:6:14"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2410:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "2410:3:14"
																									},
																									"nativeSrc": "2410:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "2410:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2426:1:14",
																									"nodeType": "YulLiteral",
																									"src": "2426:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2406:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "2406:3:14"
																							},
																							"nativeSrc": "2406:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "2406:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2393:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2393:6:14"
																					},
																					"nativeSrc": "2393:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "2393:36:14"
																				},
																				"nativeSrc": "2393:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "2393:36:14"
																			}
																		]
																	},
																	"nativeSrc": "1776:663:14",
																	"nodeType": "YulCase",
																	"src": "1776:663:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1781:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1781:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2456:234:14",
																		"nodeType": "YulBlock",
																		"src": "2456:234:14",
																		"statements": [
																			{
																				"nativeSrc": "2470:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2470:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2483:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2483:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2474:5:14",
																						"nodeType": "YulTypedName",
																						"src": "2474:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2519:67:14",
																					"nodeType": "YulBlock",
																					"src": "2519:67:14",
																					"statements": [
																						{
																							"nativeSrc": "2537:35:14",
																							"nodeType": "YulAssignment",
																							"src": "2537:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2556:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "2556:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2561:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "2561:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2552:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "2552:3:14"
																										},
																										"nativeSrc": "2552:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "2552:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2546:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "2546:5:14"
																								},
																								"nativeSrc": "2546:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "2546:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2537:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "2537:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2500:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "2500:6:14"
																				},
																				"nativeSrc": "2497:89:14",
																				"nodeType": "YulIf",
																				"src": "2497:89:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2606:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "2606:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2665:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "2665:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2672:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "2672:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2612:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "2612:52:14"
																							},
																							"nativeSrc": "2612:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "2612:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2599:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2599:6:14"
																					},
																					"nativeSrc": "2599:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "2599:81:14"
																				},
																				"nativeSrc": "2599:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "2599:81:14"
																			}
																		]
																	},
																	"nativeSrc": "2448:242:14",
																	"nodeType": "YulCase",
																	"src": "2448:242:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1756:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1756:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1764:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1764:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1753:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1753:2:14"
																},
																"nativeSrc": "1753:14:14",
																"nodeType": "YulFunctionCall",
																"src": "1753:14:14"
															},
															"nativeSrc": "1746:944:14",
															"nodeType": "YulSwitch",
															"src": "1746:944:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1351:1345:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1432:4:14",
														"nodeType": "YulTypedName",
														"src": "1432:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1438:3:14",
														"nodeType": "YulTypedName",
														"src": "1438:3:14",
														"type": ""
													}
												],
												"src": "1351:1345:14"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040518060400160405280600581526020016419559513d360da1b8152506040518060400160405280600581526020016411559513d360da1b815250815f908161005a9190610107565b5060016100678282610107565b5050506101c6565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061009757607f821691505b6020821081036100b557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561010257805f5260205f20601f840160051c810160208510156100e05750805b601f840160051c820191505b818110156100ff575f81556001016100ec565b50505b505050565b81516001600160401b038111156101205761012061006f565b6101348161012e8454610083565b846100bb565b602080601f831160018114610167575f84156101505750858301515b5f19600386901b1c1916600185901b1785556101be565b5f85815260208120601f198616915b8281101561019557888601518255948401946001909101908401610176565b50858210156101b257878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b6112ff806101d35f395ff3fe608060405234801561000f575f80fd5b50600436106100f0575f3560e01c80635b031fb211610093578063a22cb46511610063578063a22cb46514610207578063b88d4fde1461021a578063c87b56dd1461022d578063e985e9c514610240575f80fd5b80635b031fb2146101aa5780636352211e146101cb57806370a08231146101de57806395d89b41146101ff575f80fd5b8063095ea7b3116100ce578063095ea7b31461015c57806311ba9aae1461017157806323b872dd1461018457806342842e0e14610197575f80fd5b806301ffc9a7146100f457806306fdde031461011c578063081812fc14610131575b5f80fd5b610107610102366004610de4565b610253565b60405190151581526020015b60405180910390f35b6101246102a4565b6040516101139190610e2d565b61014461013f366004610e3f565b610333565b6040516001600160a01b039091168152602001610113565b61016f61016a366004610e71565b61035a565b005b61016f61017f366004610f3e565b610369565b61016f610192366004610fb7565b6103c0565b61016f6101a5366004610fb7565b61044e565b6101bd6101b8366004610e3f565b61046d565b604051610113929190610ff0565b6101446101d9366004610e3f565b6105f7565b6101f16101ec36600461101d565b610601565b604051908152602001610113565b610124610646565b61016f610215366004611036565b610655565b61016f61022836600461106f565b610660565b61012461023b366004610e3f565b610677565b61010761024e3660046110da565b6106e8565b5f6001600160e01b031982166380ac58cd60e01b148061028357506001600160e01b03198216635b5e139f60e01b145b8061029e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60605f80546102b29061110b565b80601f01602080910402602001604051908101604052809291908181526020018280546102de9061110b565b80156103295780601f1061030057610100808354040283529160200191610329565b820191905f5260205f20905b81548152906001019060200180831161030c57829003601f168201915b5050505050905090565b5f61033d82610715565b505f828152600460205260409020546001600160a01b031661029e565b61036582823361074d565b5050565b610373848461075a565b60408051808201825283815260208082018490525f868152600690915291909120815181906103a29082611187565b50602082015160018201906103b79082611187565b50505050505050565b6001600160a01b0382166103ee57604051633250574960e11b81525f60048201526024015b60405180910390fd5b5f6103fa8383336107bb565b9050836001600160a01b0316816001600160a01b031614610448576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103e5565b50505050565b61046883838360405180602001604052805f815250610660565b505050565b60608061047b6007846108ad565b6104c75760405162461bcd60e51b815260206004820152601760248201527f546f6b656e20494420646f6573206e6f7420657869737400000000000000000060448201526064016103e5565b5f8381526006602052604090208054600182019082906104e69061110b565b80601f01602080910402602001604051908101604052809291908181526020018280546105129061110b565b801561055d5780601f106105345761010080835404028352916020019161055d565b820191905f5260205f20905b81548152906001019060200180831161054057829003601f168201915b505050505091508080546105709061110b565b80601f016020809104026020016040519081016040528092919081815260200182805461059c9061110b565b80156105e75780601f106105be576101008083540402835291602001916105e7565b820191905f5260205f20905b8154815290600101906020018083116105ca57829003601f168201915b5050505050905091509150915091565b5f61029e82610715565b5f6001600160a01b03821661062b576040516322718ad960e21b81525f60048201526024016103e5565b506001600160a01b03165f9081526003602052604090205490565b6060600180546102b29061110b565b6103653383836108b8565b61066b8484846103c0565b61044884848484610956565b606061068282610715565b505f61069860408051602081019091525f815290565b90505f8151116106b65760405180602001604052805f8152506106e1565b806106c084610a7c565b6040516020016106d192919061125e565b6040516020818303038152906040525b9392505050565b6001600160a01b039182165f90815260056020908152604080832093909416825291909152205460ff1690565b5f818152600260205260408120546001600160a01b03168061029e57604051637e27328960e01b8152600481018490526024016103e5565b6104688383836001610b0c565b6001600160a01b03821661078357604051633250574960e11b81525f60048201526024016103e5565b5f61078f83835f6107bb565b90506001600160a01b03811615610468576040516339e3563760e11b81525f60048201526024016103e5565b5f828152600260205260408120546001600160a01b03908116908316156107e7576107e7818486610c10565b6001600160a01b03811615610821576108025f855f80610b0c565b6001600160a01b0381165f90815260036020526040902080545f190190555b6001600160a01b0385161561084f576001600160a01b0385165f908152600360205260409020805460010190555b5f8481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b5f6106e18383610c74565b6001600160a01b0382166108ea57604051630b61174360e31b81526001600160a01b03831660048201526024016103e5565b6001600160a01b038381165f81815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561044857604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610998903390889087908790600401611272565b6020604051808303815f875af19250505080156109d2575060408051601f3d908101601f191682019092526109cf918101906112ae565b60015b610a39573d8080156109ff576040519150601f19603f3d011682016040523d82523d5f602084013e610a04565b606091505b5080515f03610a3157604051633250574960e11b81526001600160a01b03851660048201526024016103e5565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b14610a7557604051633250574960e11b81526001600160a01b03851660048201526024016103e5565b5050505050565b60605f610a8883610c91565b60010190505f8167ffffffffffffffff811115610aa757610aa7610e99565b6040519080825280601f01601f191660200182016040528015610ad1576020820181803683370190505b5090508181016020015b5f19016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610adb57509392505050565b8080610b2057506001600160a01b03821615155b15610be1575f610b2f84610715565b90506001600160a01b03831615801590610b5b5750826001600160a01b0316816001600160a01b031614155b8015610b6e5750610b6c81846106e8565b155b15610b975760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016103e5565b8115610bdf5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b50505f90815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610c1b838383610d68565b610468576001600160a01b038316610c4957604051637e27328960e01b8152600481018290526024016103e5565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103e5565b5f6106e183835f81815260018301602052604081205415156106e1565b5f8072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610ccf5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610cfb576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610d1957662386f26fc10000830492506010015b6305f5e1008310610d31576305f5e100830492506008015b6127108310610d4557612710830492506004015b60648310610d57576064830492506002015b600a831061029e5760010192915050565b5f6001600160a01b03831615801590610dc45750826001600160a01b0316846001600160a01b03161480610da15750610da184846106e8565b80610dc457505f828152600460205260409020546001600160a01b038481169116145b949350505050565b6001600160e01b031981168114610de1575f80fd5b50565b5f60208284031215610df4575f80fd5b81356106e181610dcc565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f6106e16020830184610dff565b5f60208284031215610e4f575f80fd5b5035919050565b80356001600160a01b0381168114610e6c575f80fd5b919050565b5f8060408385031215610e82575f80fd5b610e8b83610e56565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b5f67ffffffffffffffff80841115610ec757610ec7610e99565b604051601f8501601f19908116603f01168101908282118183101715610eef57610eef610e99565b81604052809350858152868686011115610f07575f80fd5b858560208301375f602087830101525050509392505050565b5f82601f830112610f2f575f80fd5b6106e183833560208501610ead565b5f805f8060808587031215610f51575f80fd5b610f5a85610e56565b935060208501359250604085013567ffffffffffffffff80821115610f7d575f80fd5b610f8988838901610f20565b93506060870135915080821115610f9e575f80fd5b50610fab87828801610f20565b91505092959194509250565b5f805f60608486031215610fc9575f80fd5b610fd284610e56565b9250610fe060208501610e56565b9150604084013590509250925092565b604081525f6110026040830185610dff565b82810360208401526110148185610dff565b95945050505050565b5f6020828403121561102d575f80fd5b6106e182610e56565b5f8060408385031215611047575f80fd5b61105083610e56565b915060208301358015158114611064575f80fd5b809150509250929050565b5f805f8060808587031215611082575f80fd5b61108b85610e56565b935061109960208601610e56565b925060408501359150606085013567ffffffffffffffff8111156110bb575f80fd5b8501601f810187136110cb575f80fd5b610fab87823560208401610ead565b5f80604083850312156110eb575f80fd5b6110f483610e56565b915061110260208401610e56565b90509250929050565b600181811c9082168061111f57607f821691505b60208210810361113d57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561046857805f5260205f20601f840160051c810160208510156111685750805b601f840160051c820191505b81811015610a75575f8155600101611174565b815167ffffffffffffffff8111156111a1576111a1610e99565b6111b5816111af845461110b565b84611143565b602080601f8311600181146111e8575f84156111d15750858301515b5f19600386901b1c1916600185901b17855561123f565b5f85815260208120601f198616915b82811015611216578886015182559484019460019091019084016111f7565b508582101561123357878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f81518060208401855e5f93019283525090919050565b5f610dc461126c8386611247565b84611247565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f906112a490830184610dff565b9695505050505050565b5f602082840312156112be575f80fd5b81516106e181610dcc56fea2646970667358221220a8d92a996298d9123c937872b79af072f53426f6c13f4c4ceb3557cd71c0a8d164736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x19559513D3 PUSH1 0xDA SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x11559513D3 PUSH1 0xDA SHL DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x107 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x67 DUP3 DUP3 PUSH2 0x107 JUMP JUMPDEST POP POP POP PUSH2 0x1C6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x97 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x102 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0xE0 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xFF JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xEC JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x120 JUMPI PUSH2 0x120 PUSH2 0x6F JUMP JUMPDEST PUSH2 0x134 DUP2 PUSH2 0x12E DUP5 SLOAD PUSH2 0x83 JUMP JUMPDEST DUP5 PUSH2 0xBB JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x167 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x150 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1BE JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x195 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x176 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1B2 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x12FF DUP1 PUSH2 0x1D3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B031FB2 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x240 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5B031FB2 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x11BA9AAE EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x197 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x131 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x107 PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE4 JUMP JUMPDEST PUSH2 0x253 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0xE2D JUMP JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x113 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16F PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB7 JUMP JUMPDEST PUSH2 0x3C0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB7 JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x46D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP3 SWAP2 SWAP1 PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x101D JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x113 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x646 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x106F JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x10DA JUMP JUMPDEST PUSH2 0x6E8 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x283 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x29E JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x2B2 SWAP1 PUSH2 0x110B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2DE SWAP1 PUSH2 0x110B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x329 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x300 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x329 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x33D DUP3 PUSH2 0x715 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29E JUMP JUMPDEST PUSH2 0x365 DUP3 DUP3 CALLER PUSH2 0x74D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x373 DUP5 DUP5 PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE PUSH0 DUP7 DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x3A2 SWAP1 DUP3 PUSH2 0x1187 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x3B7 SWAP1 DUP3 PUSH2 0x1187 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3FA DUP4 DUP4 CALLER PUSH2 0x7BB JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x448 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x468 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x660 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x47B PUSH1 0x7 DUP5 PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x4C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20494420646F6573206E6F74206578697374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E5 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SWAP1 DUP3 SWAP1 PUSH2 0x4E6 SWAP1 PUSH2 0x110B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x512 SWAP1 PUSH2 0x110B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x55D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x534 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x55D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x540 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP DUP1 DUP1 SLOAD PUSH2 0x570 SWAP1 PUSH2 0x110B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x59C SWAP1 PUSH2 0x110B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0x29E DUP3 PUSH2 0x715 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3E5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2B2 SWAP1 PUSH2 0x110B JUMP JUMPDEST PUSH2 0x365 CALLER DUP4 DUP4 PUSH2 0x8B8 JUMP JUMPDEST PUSH2 0x66B DUP5 DUP5 DUP5 PUSH2 0x3C0 JUMP JUMPDEST PUSH2 0x448 DUP5 DUP5 DUP5 DUP5 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x682 DUP3 PUSH2 0x715 JUMP JUMPDEST POP PUSH0 PUSH2 0x698 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x6E1 JUMP JUMPDEST DUP1 PUSH2 0x6C0 DUP5 PUSH2 0xA7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6D1 SWAP3 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x29E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3E5 JUMP JUMPDEST PUSH2 0x468 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x783 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3E5 JUMP JUMPDEST PUSH0 PUSH2 0x78F DUP4 DUP4 PUSH0 PUSH2 0x7BB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3E5 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x7E7 JUMPI PUSH2 0x7E7 DUP2 DUP5 DUP7 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x821 JUMPI PUSH2 0x802 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x84F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6E1 DUP4 DUP4 PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x448 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x998 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9D2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9CF SWAP2 DUP2 ADD SWAP1 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA39 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x9FF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xA31 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3E5 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xA75 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3E5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xA88 DUP4 PUSH2 0xC91 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAA7 JUMPI PUSH2 0xAA7 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAD1 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xADB JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xB20 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xBE1 JUMPI PUSH0 PUSH2 0xB2F DUP5 PUSH2 0x715 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xB5B JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xB6E JUMPI POP PUSH2 0xB6C DUP2 DUP5 PUSH2 0x6E8 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xB97 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3E5 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xBDF JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC1B DUP4 DUP4 DUP4 PUSH2 0xD68 JUMP JUMPDEST PUSH2 0x468 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC49 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3E5 JUMP JUMPDEST PUSH0 PUSH2 0x6E1 DUP4 DUP4 PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x6E1 JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xCCF JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xCFB JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xD19 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xD31 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xD45 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xD57 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x29E JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xDC4 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xDA1 JUMPI POP PUSH2 0xDA1 DUP5 DUP5 PUSH2 0x6E8 JUMP JUMPDEST DUP1 PUSH2 0xDC4 JUMPI POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xDE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6E1 DUP2 PUSH2 0xDCC JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x6E1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDFF JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE4F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE6C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE82 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE8B DUP4 PUSH2 0xE56 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0xEC7 JUMPI PUSH2 0xEC7 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xEEF JUMPI PUSH2 0xEEF PUSH2 0xE99 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0xF07 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF2F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6E1 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0xEAD JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF51 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF5A DUP6 PUSH2 0xE56 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF7D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF89 DUP9 DUP4 DUP10 ADD PUSH2 0xF20 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xF9E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFAB DUP8 DUP3 DUP9 ADD PUSH2 0xF20 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFD2 DUP5 PUSH2 0xE56 JUMP JUMPDEST SWAP3 POP PUSH2 0xFE0 PUSH1 0x20 DUP6 ADD PUSH2 0xE56 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x1002 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xDFF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1014 DUP2 DUP6 PUSH2 0xDFF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x102D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6E1 DUP3 PUSH2 0xE56 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1047 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1050 DUP4 PUSH2 0xE56 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1064 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1082 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x108B DUP6 PUSH2 0xE56 JUMP JUMPDEST SWAP4 POP PUSH2 0x1099 PUSH1 0x20 DUP7 ADD PUSH2 0xE56 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x10CB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFAB DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0xEAD JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10EB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10F4 DUP4 PUSH2 0xE56 JUMP JUMPDEST SWAP2 POP PUSH2 0x1102 PUSH1 0x20 DUP5 ADD PUSH2 0xE56 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x111F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x113D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x468 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1168 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA75 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1174 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11A1 JUMPI PUSH2 0x11A1 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x11B5 DUP2 PUSH2 0x11AF DUP5 SLOAD PUSH2 0x110B JUMP JUMPDEST DUP5 PUSH2 0x1143 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x11E8 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x11D1 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x123F JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1216 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x11F7 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1233 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDC4 PUSH2 0x126C DUP4 DUP7 PUSH2 0x1247 JUMP JUMPDEST DUP5 PUSH2 0x1247 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x12A4 SWAP1 DUP4 ADD DUP5 PUSH2 0xDFF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12BE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6E1 DUP2 PUSH2 0xDCC JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xD9 0x2A SWAP10 PUSH3 0x98D912 EXTCODECOPY SWAP4 PUSH25 0x72B79AF072F53426F6C13F4C4CEB3557CD71C0A8D164736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "215:1594:13:-:0;;;873:41;;;;;;;;;;1381:113:1;;;;;;;;;;;;;-1:-1:-1;;;1381:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1381:113:1;;;1455:5;1447;:13;;;;;;:::i;:::-;-1:-1:-1;1470:7:1;:17;1480:7;1470;:17;:::i;:::-;;1381:113;;215:1594:13;;14:127:14;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:518::-;759:2;754:3;751:11;748:421;;;795:5;792:1;785:16;839:4;836:1;826:18;909:2;897:10;893:19;890:1;886:27;880:4;876:38;945:4;933:10;930:20;927:47;;;-1:-1:-1;968:4:14;927:47;1023:2;1018:3;1014:12;1011:1;1007:20;1001:4;997:31;987:41;;1078:81;1096:2;1089:5;1086:13;1078:81;;;1155:1;1141:16;;1122:1;1111:13;1078:81;;;1082:3;;748:421;657:518;;;:::o;1351:1345::-;1471:10;;-1:-1:-1;;;;;1493:30:14;;1490:56;;;1526:18;;:::i;:::-;1555:97;1645:6;1605:38;1637:4;1631:11;1605:38;:::i;:::-;1599:4;1555:97;:::i;:::-;1707:4;;1764:2;1753:14;;1781:1;1776:663;;;;2483:1;2500:6;2497:89;;;-1:-1:-1;2552:19:14;;;2546:26;2497:89;-1:-1:-1;;1308:1:14;1304:11;;;1300:24;1296:29;1286:40;1332:1;1328:11;;;1283:57;2599:81;;1746:944;;1776:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1812:20:14;;;1930:236;1944:7;1941:1;1938:14;1930:236;;;2033:19;;;2027:26;2012:42;;2125:27;;;;2093:1;2081:14;;;;1960:19;;1930:236;;;1934:3;2194:6;2185:7;2182:19;2179:201;;;2255:19;;;2249:26;-1:-1:-1;;2338:1:14;2334:14;;;2350:3;2330:24;2326:37;2322:42;2307:58;2292:74;;2179:201;;;2426:1;2417:6;2414:1;2410:14;2406:22;2400:4;2393:36;1746:944;;;;;1351:1345;;:::o;:::-;215:1594:13;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1014": {
									"entryPoint": 2828,
									"id": 1014,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_948": {
									"entryPoint": 1869,
									"id": 948,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_341": {
									"entryPoint": null,
									"id": 341,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_596": {
									"entryPoint": 3088,
									"id": 596,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1144": {
									"entryPoint": 2390,
									"id": 1144,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_contains_4059": {
									"entryPoint": null,
									"id": 4059,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_getApproved_523": {
									"entryPoint": null,
									"id": 523,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_559": {
									"entryPoint": 3432,
									"id": 559,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_752": {
									"entryPoint": 1882,
									"id": 752,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1320": {
									"entryPoint": null,
									"id": 1320,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_510": {
									"entryPoint": null,
									"id": 510,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1080": {
									"entryPoint": 1813,
									"id": 1080,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1051": {
									"entryPoint": 2232,
									"id": 1051,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_702": {
									"entryPoint": 1979,
									"id": 702,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_357": {
									"entryPoint": 858,
									"id": 357,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_265": {
									"entryPoint": 1537,
									"id": 265,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@contains_2880": {
									"entryPoint": 3188,
									"id": 2880,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@contains_3309": {
									"entryPoint": 2221,
									"id": 3309,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@contains_4162": {
									"entryPoint": null,
									"id": 4162,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getApproved_374": {
									"entryPoint": 819,
									"id": 374,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getEVTOLOwnerMetadata_4601": {
									"entryPoint": 1133,
									"id": 4601,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@isApprovedForAll_407": {
									"entryPoint": 1768,
									"id": 407,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2503": {
									"entryPoint": 3217,
									"id": 2503,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintEVTOLOwner_4573": {
									"entryPoint": 873,
									"id": 4573,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@name_287": {
									"entryPoint": 676,
									"id": 287,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_278": {
									"entryPoint": 1527,
									"id": 278,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_471": {
									"entryPoint": 1102,
									"id": 471,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_497": {
									"entryPoint": 1632,
									"id": 497,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_390": {
									"entryPoint": 1621,
									"id": 390,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1616": {
									"entryPoint": null,
									"id": 1616,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_237": {
									"entryPoint": 595,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_296": {
									"entryPoint": 1606,
									"id": 296,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1406": {
									"entryPoint": 2684,
									"id": 1406,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_332": {
									"entryPoint": 1655,
									"id": 332,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_453": {
									"entryPoint": 960,
									"id": 453,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3670,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 3757,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 3872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 4207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 4150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 3902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3647,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 4679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 3583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4702,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4722,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4080,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 4419,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 4487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3737,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10998:14",
										"nodeType": "YulBlock",
										"src": "0:10998:14",
										"statements": [
											{
												"nativeSrc": "6:3:14",
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:87:14",
													"nodeType": "YulBlock",
													"src": "58:87:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "123:16:14",
																"nodeType": "YulBlock",
																"src": "123:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "132:1:14",
																					"nodeType": "YulLiteral",
																					"src": "132:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "135:1:14",
																					"nodeType": "YulLiteral",
																					"src": "135:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "125:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:14"
																			},
																			"nativeSrc": "125:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:14"
																		},
																		"nativeSrc": "125:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "103:3:14",
																								"nodeType": "YulLiteral",
																								"src": "103:3:14",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "108:10:14",
																								"nodeType": "YulLiteral",
																								"src": "108:10:14",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "99:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:14"
																						},
																						"nativeSrc": "99:20:14",
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:14"
																				},
																				"nativeSrc": "88:32:14",
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:14"
																		},
																		"nativeSrc": "78:43:14",
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:14"
																},
																"nativeSrc": "71:51:14",
																"nodeType": "YulFunctionCall",
																"src": "71:51:14"
															},
															"nativeSrc": "68:71:14",
															"nodeType": "YulIf",
															"src": "68:71:14"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:131:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:14",
														"nodeType": "YulTypedName",
														"src": "47:5:14",
														"type": ""
													}
												],
												"src": "14:131:14"
											},
											{
												"body": {
													"nativeSrc": "219:176:14",
													"nodeType": "YulBlock",
													"src": "219:176:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "265:16:14",
																"nodeType": "YulBlock",
																"src": "265:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "274:1:14",
																					"nodeType": "YulLiteral",
																					"src": "274:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "277:1:14",
																					"nodeType": "YulLiteral",
																					"src": "277:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "267:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:14"
																			},
																			"nativeSrc": "267:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:14"
																		},
																		"nativeSrc": "267:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "240:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "249:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "236:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:14"
																		},
																		"nativeSrc": "236:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "261:2:14",
																		"nodeType": "YulLiteral",
																		"src": "261:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "232:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:14"
																},
																"nativeSrc": "232:32:14",
																"nodeType": "YulFunctionCall",
																"src": "232:32:14"
															},
															"nativeSrc": "229:52:14",
															"nodeType": "YulIf",
															"src": "229:52:14"
														},
														{
															"nativeSrc": "290:36:14",
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "316:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "303:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:14"
																},
																"nativeSrc": "303:23:14",
																"nodeType": "YulFunctionCall",
																"src": "303:23:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "294:5:14",
																	"nodeType": "YulTypedName",
																	"src": "294:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "359:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "335:23:14",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:14"
																},
																"nativeSrc": "335:30:14",
																"nodeType": "YulFunctionCall",
																"src": "335:30:14"
															},
															"nativeSrc": "335:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "335:30:14"
														},
														{
															"nativeSrc": "374:15:14",
															"nodeType": "YulAssignment",
															"src": "374:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "384:5:14",
																"nodeType": "YulIdentifier",
																"src": "384:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "374:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "150:245:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "185:9:14",
														"nodeType": "YulTypedName",
														"src": "185:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "196:7:14",
														"nodeType": "YulTypedName",
														"src": "196:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "208:6:14",
														"nodeType": "YulTypedName",
														"src": "208:6:14",
														"type": ""
													}
												],
												"src": "150:245:14"
											},
											{
												"body": {
													"nativeSrc": "495:92:14",
													"nodeType": "YulBlock",
													"src": "495:92:14",
													"statements": [
														{
															"nativeSrc": "505:26:14",
															"nodeType": "YulAssignment",
															"src": "505:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "517:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "528:2:14",
																		"nodeType": "YulLiteral",
																		"src": "528:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "513:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:14"
																},
																"nativeSrc": "513:18:14",
																"nodeType": "YulFunctionCall",
																"src": "513:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "505:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "547:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "572:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "565:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:14"
																				},
																				"nativeSrc": "565:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "558:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:14"
																		},
																		"nativeSrc": "558:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "540:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:14"
																},
																"nativeSrc": "540:41:14",
																"nodeType": "YulFunctionCall",
																"src": "540:41:14"
															},
															"nativeSrc": "540:41:14",
															"nodeType": "YulExpressionStatement",
															"src": "540:41:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "400:187:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "464:9:14",
														"nodeType": "YulTypedName",
														"src": "464:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "475:6:14",
														"nodeType": "YulTypedName",
														"src": "475:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "486:4:14",
														"nodeType": "YulTypedName",
														"src": "486:4:14",
														"type": ""
													}
												],
												"src": "400:187:14"
											},
											{
												"body": {
													"nativeSrc": "653:239:14",
													"nodeType": "YulBlock",
													"src": "653:239:14",
													"statements": [
														{
															"nativeSrc": "663:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "663:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "683:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "683:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "677:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "677:5:14"
																},
																"nativeSrc": "677:12:14",
																"nodeType": "YulFunctionCall",
																"src": "677:12:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "667:6:14",
																	"nodeType": "YulTypedName",
																	"src": "667:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "705:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "705:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "710:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "710:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "698:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "698:6:14"
																},
																"nativeSrc": "698:19:14",
																"nodeType": "YulFunctionCall",
																"src": "698:19:14"
															},
															"nativeSrc": "698:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "698:19:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "736:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "736:3:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "741:4:14",
																				"nodeType": "YulLiteral",
																				"src": "741:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "732:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:14"
																		},
																		"nativeSrc": "732:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "732:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "752:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "752:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "759:4:14",
																				"nodeType": "YulLiteral",
																				"src": "759:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "748:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "748:3:14"
																		},
																		"nativeSrc": "748:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "748:16:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "766:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "766:6:14"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "726:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "726:5:14"
																},
																"nativeSrc": "726:47:14",
																"nodeType": "YulFunctionCall",
																"src": "726:47:14"
															},
															"nativeSrc": "726:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "726:47:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "797:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "797:3:14"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "802:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "802:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "793:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "793:3:14"
																				},
																				"nativeSrc": "793:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "793:16:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "811:4:14",
																				"nodeType": "YulLiteral",
																				"src": "811:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "789:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:14"
																		},
																		"nativeSrc": "789:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "789:27:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "818:1:14",
																		"nodeType": "YulLiteral",
																		"src": "818:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "782:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "782:6:14"
																},
																"nativeSrc": "782:38:14",
																"nodeType": "YulFunctionCall",
																"src": "782:38:14"
															},
															"nativeSrc": "782:38:14",
															"nodeType": "YulExpressionStatement",
															"src": "782:38:14"
														},
														{
															"nativeSrc": "829:57:14",
															"nodeType": "YulAssignment",
															"src": "829:57:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "844:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "844:3:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "857:6:14",
																								"nodeType": "YulIdentifier",
																								"src": "857:6:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "865:2:14",
																								"nodeType": "YulLiteral",
																								"src": "865:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "853:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "853:3:14"
																						},
																						"nativeSrc": "853:15:14",
																						"nodeType": "YulFunctionCall",
																						"src": "853:15:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "874:2:14",
																								"nodeType": "YulLiteral",
																								"src": "874:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "870:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "870:3:14"
																						},
																						"nativeSrc": "870:7:14",
																						"nodeType": "YulFunctionCall",
																						"src": "870:7:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "849:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "849:3:14"
																				},
																				"nativeSrc": "849:29:14",
																				"nodeType": "YulFunctionCall",
																				"src": "849:29:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "840:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:14"
																		},
																		"nativeSrc": "840:39:14",
																		"nodeType": "YulFunctionCall",
																		"src": "840:39:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "881:4:14",
																		"nodeType": "YulLiteral",
																		"src": "881:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "836:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:14"
																},
																"nativeSrc": "836:50:14",
																"nodeType": "YulFunctionCall",
																"src": "836:50:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "829:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "829:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_memory_ptr",
												"nativeSrc": "592:300:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "630:5:14",
														"nodeType": "YulTypedName",
														"src": "630:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "637:3:14",
														"nodeType": "YulTypedName",
														"src": "637:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "645:3:14",
														"nodeType": "YulTypedName",
														"src": "645:3:14",
														"type": ""
													}
												],
												"src": "592:300:14"
											},
											{
												"body": {
													"nativeSrc": "1018:110:14",
													"nodeType": "YulBlock",
													"src": "1018:110:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1035:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1035:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1046:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1046:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1028:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1028:6:14"
																},
																"nativeSrc": "1028:21:14",
																"nodeType": "YulFunctionCall",
																"src": "1028:21:14"
															},
															"nativeSrc": "1028:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "1028:21:14"
														},
														{
															"nativeSrc": "1058:64:14",
															"nodeType": "YulAssignment",
															"src": "1058:64:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1095:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1095:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1107:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1107:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1118:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1118:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1103:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1103:3:14"
																		},
																		"nativeSrc": "1103:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1103:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "1066:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "1066:28:14"
																},
																"nativeSrc": "1066:56:14",
																"nodeType": "YulFunctionCall",
																"src": "1066:56:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1058:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1058:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "897:231:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "987:9:14",
														"nodeType": "YulTypedName",
														"src": "987:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "998:6:14",
														"nodeType": "YulTypedName",
														"src": "998:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1009:4:14",
														"nodeType": "YulTypedName",
														"src": "1009:4:14",
														"type": ""
													}
												],
												"src": "897:231:14"
											},
											{
												"body": {
													"nativeSrc": "1203:110:14",
													"nodeType": "YulBlock",
													"src": "1203:110:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1249:16:14",
																"nodeType": "YulBlock",
																"src": "1249:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1258:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1258:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1261:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1261:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1251:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1251:6:14"
																			},
																			"nativeSrc": "1251:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1251:12:14"
																		},
																		"nativeSrc": "1251:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1251:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1224:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1224:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1233:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1233:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:14"
																		},
																		"nativeSrc": "1220:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1245:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1216:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1216:3:14"
																},
																"nativeSrc": "1216:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1216:32:14"
															},
															"nativeSrc": "1213:52:14",
															"nodeType": "YulIf",
															"src": "1213:52:14"
														},
														{
															"nativeSrc": "1274:33:14",
															"nodeType": "YulAssignment",
															"src": "1274:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1297:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1297:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1284:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1284:12:14"
																},
																"nativeSrc": "1284:23:14",
																"nodeType": "YulFunctionCall",
																"src": "1284:23:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1274:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1274:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1133:180:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1169:9:14",
														"nodeType": "YulTypedName",
														"src": "1169:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1180:7:14",
														"nodeType": "YulTypedName",
														"src": "1180:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1192:6:14",
														"nodeType": "YulTypedName",
														"src": "1192:6:14",
														"type": ""
													}
												],
												"src": "1133:180:14"
											},
											{
												"body": {
													"nativeSrc": "1419:102:14",
													"nodeType": "YulBlock",
													"src": "1419:102:14",
													"statements": [
														{
															"nativeSrc": "1429:26:14",
															"nodeType": "YulAssignment",
															"src": "1429:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1441:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1441:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1452:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1437:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1437:3:14"
																},
																"nativeSrc": "1437:18:14",
																"nodeType": "YulFunctionCall",
																"src": "1437:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1429:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "1429:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1471:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1471:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1486:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1486:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1502:3:14",
																								"nodeType": "YulLiteral",
																								"src": "1502:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1507:1:14",
																								"nodeType": "YulLiteral",
																								"src": "1507:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1498:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1498:3:14"
																						},
																						"nativeSrc": "1498:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "1498:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1511:1:14",
																						"nodeType": "YulLiteral",
																						"src": "1511:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1494:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:14"
																				},
																				"nativeSrc": "1494:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1482:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1482:3:14"
																		},
																		"nativeSrc": "1482:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1482:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1464:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1464:6:14"
																},
																"nativeSrc": "1464:51:14",
																"nodeType": "YulFunctionCall",
																"src": "1464:51:14"
															},
															"nativeSrc": "1464:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "1464:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1318:203:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1388:9:14",
														"nodeType": "YulTypedName",
														"src": "1388:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1399:6:14",
														"nodeType": "YulTypedName",
														"src": "1399:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1410:4:14",
														"nodeType": "YulTypedName",
														"src": "1410:4:14",
														"type": ""
													}
												],
												"src": "1318:203:14"
											},
											{
												"body": {
													"nativeSrc": "1575:124:14",
													"nodeType": "YulBlock",
													"src": "1575:124:14",
													"statements": [
														{
															"nativeSrc": "1585:29:14",
															"nodeType": "YulAssignment",
															"src": "1585:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1607:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1607:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1594:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1594:12:14"
																},
																"nativeSrc": "1594:20:14",
																"nodeType": "YulFunctionCall",
																"src": "1594:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1585:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1585:5:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1677:16:14",
																"nodeType": "YulBlock",
																"src": "1677:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1686:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1686:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1689:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1689:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1679:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1679:6:14"
																			},
																			"nativeSrc": "1679:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1679:12:14"
																		},
																		"nativeSrc": "1679:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1679:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1636:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1636:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1647:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1647:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1662:3:14",
																										"nodeType": "YulLiteral",
																										"src": "1662:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1667:1:14",
																										"nodeType": "YulLiteral",
																										"src": "1667:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1658:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "1658:3:14"
																								},
																								"nativeSrc": "1658:11:14",
																								"nodeType": "YulFunctionCall",
																								"src": "1658:11:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1671:1:14",
																								"nodeType": "YulLiteral",
																								"src": "1671:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1654:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1654:3:14"
																						},
																						"nativeSrc": "1654:19:14",
																						"nodeType": "YulFunctionCall",
																						"src": "1654:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1643:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1643:3:14"
																				},
																				"nativeSrc": "1643:31:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1643:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1633:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1633:2:14"
																		},
																		"nativeSrc": "1633:42:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1633:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1626:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1626:6:14"
																},
																"nativeSrc": "1626:50:14",
																"nodeType": "YulFunctionCall",
																"src": "1626:50:14"
															},
															"nativeSrc": "1623:70:14",
															"nodeType": "YulIf",
															"src": "1623:70:14"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1526:173:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1554:6:14",
														"nodeType": "YulTypedName",
														"src": "1554:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1565:5:14",
														"nodeType": "YulTypedName",
														"src": "1565:5:14",
														"type": ""
													}
												],
												"src": "1526:173:14"
											},
											{
												"body": {
													"nativeSrc": "1791:167:14",
													"nodeType": "YulBlock",
													"src": "1791:167:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1837:16:14",
																"nodeType": "YulBlock",
																"src": "1837:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1846:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1846:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1849:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1849:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1839:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:14"
																			},
																			"nativeSrc": "1839:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1839:12:14"
																		},
																		"nativeSrc": "1839:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1839:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1812:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1812:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1821:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1821:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1808:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1808:3:14"
																		},
																		"nativeSrc": "1808:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1808:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1833:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1833:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1804:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1804:3:14"
																},
																"nativeSrc": "1804:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1804:32:14"
															},
															"nativeSrc": "1801:52:14",
															"nodeType": "YulIf",
															"src": "1801:52:14"
														},
														{
															"nativeSrc": "1862:39:14",
															"nodeType": "YulAssignment",
															"src": "1862:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1891:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1891:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1872:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "1872:18:14"
																},
																"nativeSrc": "1872:29:14",
																"nodeType": "YulFunctionCall",
																"src": "1872:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1862:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1862:6:14"
																}
															]
														},
														{
															"nativeSrc": "1910:42:14",
															"nodeType": "YulAssignment",
															"src": "1910:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1937:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1937:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1948:2:14",
																				"nodeType": "YulLiteral",
																				"src": "1948:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1933:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1933:3:14"
																		},
																		"nativeSrc": "1933:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1933:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1920:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1920:12:14"
																},
																"nativeSrc": "1920:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1920:32:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1910:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1910:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1704:254:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1749:9:14",
														"nodeType": "YulTypedName",
														"src": "1749:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1760:7:14",
														"nodeType": "YulTypedName",
														"src": "1760:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1772:6:14",
														"nodeType": "YulTypedName",
														"src": "1772:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1780:6:14",
														"nodeType": "YulTypedName",
														"src": "1780:6:14",
														"type": ""
													}
												],
												"src": "1704:254:14"
											},
											{
												"body": {
													"nativeSrc": "1995:95:14",
													"nodeType": "YulBlock",
													"src": "1995:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2012:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2012:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2019:3:14",
																				"nodeType": "YulLiteral",
																				"src": "2019:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2024:10:14",
																				"nodeType": "YulLiteral",
																				"src": "2024:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2015:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:14"
																		},
																		"nativeSrc": "2015:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2005:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2005:6:14"
																},
																"nativeSrc": "2005:31:14",
																"nodeType": "YulFunctionCall",
																"src": "2005:31:14"
															},
															"nativeSrc": "2005:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "2005:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2052:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2052:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2055:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2055:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2045:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2045:6:14"
																},
																"nativeSrc": "2045:15:14",
																"nodeType": "YulFunctionCall",
																"src": "2045:15:14"
															},
															"nativeSrc": "2045:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "2045:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2076:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2076:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2079:4:14",
																		"nodeType": "YulLiteral",
																		"src": "2079:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2069:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2069:6:14"
																},
																"nativeSrc": "2069:15:14",
																"nodeType": "YulFunctionCall",
																"src": "2069:15:14"
															},
															"nativeSrc": "2069:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "2069:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1963:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "1963:127:14"
											},
											{
												"body": {
													"nativeSrc": "2170:557:14",
													"nodeType": "YulBlock",
													"src": "2170:557:14",
													"statements": [
														{
															"nativeSrc": "2180:28:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2180:28:14",
															"value": {
																"kind": "number",
																"nativeSrc": "2190:18:14",
																"nodeType": "YulLiteral",
																"src": "2190:18:14",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2184:2:14",
																	"nodeType": "YulTypedName",
																	"src": "2184:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2235:22:14",
																"nodeType": "YulBlock",
																"src": "2235:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2237:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "2237:16:14"
																			},
																			"nativeSrc": "2237:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2237:18:14"
																		},
																		"nativeSrc": "2237:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2237:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2223:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2223:6:14"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2231:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "2231:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2220:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2220:2:14"
																},
																"nativeSrc": "2220:14:14",
																"nodeType": "YulFunctionCall",
																"src": "2220:14:14"
															},
															"nativeSrc": "2217:40:14",
															"nodeType": "YulIf",
															"src": "2217:40:14"
														},
														{
															"nativeSrc": "2266:17:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2266:17:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2280:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2280:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "2276:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2276:3:14"
																},
																"nativeSrc": "2276:7:14",
																"nodeType": "YulFunctionCall",
																"src": "2276:7:14"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "2270:2:14",
																	"nodeType": "YulTypedName",
																	"src": "2270:2:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2292:23:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2292:23:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2312:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2312:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2306:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2306:5:14"
																},
																"nativeSrc": "2306:9:14",
																"nodeType": "YulFunctionCall",
																"src": "2306:9:14"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2296:6:14",
																	"nodeType": "YulTypedName",
																	"src": "2296:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2324:73:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2324:73:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2346:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2346:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "2370:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "2370:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2378:2:14",
																										"nodeType": "YulLiteral",
																										"src": "2378:2:14",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2366:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "2366:3:14"
																								},
																								"nativeSrc": "2366:15:14",
																								"nodeType": "YulFunctionCall",
																								"src": "2366:15:14"
																							},
																							{
																								"name": "_2",
																								"nativeSrc": "2383:2:14",
																								"nodeType": "YulIdentifier",
																								"src": "2383:2:14"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "2362:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "2362:3:14"
																						},
																						"nativeSrc": "2362:24:14",
																						"nodeType": "YulFunctionCall",
																						"src": "2362:24:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2388:2:14",
																						"nodeType": "YulLiteral",
																						"src": "2388:2:14",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2358:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2358:3:14"
																				},
																				"nativeSrc": "2358:33:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2358:33:14"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "2393:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "2393:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2354:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2354:3:14"
																		},
																		"nativeSrc": "2354:42:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2354:42:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2342:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2342:3:14"
																},
																"nativeSrc": "2342:55:14",
																"nodeType": "YulFunctionCall",
																"src": "2342:55:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2328:10:14",
																	"nodeType": "YulTypedName",
																	"src": "2328:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2456:22:14",
																"nodeType": "YulBlock",
																"src": "2456:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2458:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "2458:16:14"
																			},
																			"nativeSrc": "2458:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2458:18:14"
																		},
																		"nativeSrc": "2458:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2458:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2415:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "2415:10:14"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "2427:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "2427:2:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2412:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2412:2:14"
																		},
																		"nativeSrc": "2412:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2412:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2435:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "2435:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2447:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2447:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2432:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2432:2:14"
																		},
																		"nativeSrc": "2432:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2432:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2409:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2409:2:14"
																},
																"nativeSrc": "2409:46:14",
																"nodeType": "YulFunctionCall",
																"src": "2409:46:14"
															},
															"nativeSrc": "2406:72:14",
															"nodeType": "YulIf",
															"src": "2406:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2494:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2494:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2498:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "2498:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2487:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2487:6:14"
																},
																"nativeSrc": "2487:22:14",
																"nodeType": "YulFunctionCall",
																"src": "2487:22:14"
															},
															"nativeSrc": "2487:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "2487:22:14"
														},
														{
															"nativeSrc": "2518:15:14",
															"nodeType": "YulAssignment",
															"src": "2518:15:14",
															"value": {
																"name": "memPtr",
																"nativeSrc": "2527:6:14",
																"nodeType": "YulIdentifier",
																"src": "2527:6:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2518:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2518:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2549:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2549:6:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2557:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2557:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2542:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2542:6:14"
																},
																"nativeSrc": "2542:22:14",
																"nodeType": "YulFunctionCall",
																"src": "2542:22:14"
															},
															"nativeSrc": "2542:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "2542:22:14"
														},
														{
															"body": {
																"nativeSrc": "2602:16:14",
																"nodeType": "YulBlock",
																"src": "2602:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2611:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2611:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2614:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2614:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2604:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2604:6:14"
																			},
																			"nativeSrc": "2604:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2604:12:14"
																		},
																		"nativeSrc": "2604:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2604:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2583:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2583:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2588:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2588:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2579:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2579:3:14"
																		},
																		"nativeSrc": "2579:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2579:16:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2597:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2597:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2576:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2576:2:14"
																},
																"nativeSrc": "2576:25:14",
																"nodeType": "YulFunctionCall",
																"src": "2576:25:14"
															},
															"nativeSrc": "2573:45:14",
															"nodeType": "YulIf",
															"src": "2573:45:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2644:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2644:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2652:4:14",
																				"nodeType": "YulLiteral",
																				"src": "2652:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2640:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2640:3:14"
																		},
																		"nativeSrc": "2640:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2640:17:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2659:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2659:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2664:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2664:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2627:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2627:12:14"
																},
																"nativeSrc": "2627:44:14",
																"nodeType": "YulFunctionCall",
																"src": "2627:44:14"
															},
															"nativeSrc": "2627:44:14",
															"nodeType": "YulExpressionStatement",
															"src": "2627:44:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "2695:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2695:6:14"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2703:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2703:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2691:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2691:3:14"
																				},
																				"nativeSrc": "2691:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2691:19:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2712:4:14",
																				"nodeType": "YulLiteral",
																				"src": "2712:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2687:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:14"
																		},
																		"nativeSrc": "2687:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2687:30:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2719:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2719:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2680:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2680:6:14"
																},
																"nativeSrc": "2680:41:14",
																"nodeType": "YulFunctionCall",
																"src": "2680:41:14"
															},
															"nativeSrc": "2680:41:14",
															"nodeType": "YulExpressionStatement",
															"src": "2680:41:14"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nativeSrc": "2095:632:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2139:3:14",
														"nodeType": "YulTypedName",
														"src": "2139:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2144:6:14",
														"nodeType": "YulTypedName",
														"src": "2144:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2152:3:14",
														"nodeType": "YulTypedName",
														"src": "2152:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2160:5:14",
														"nodeType": "YulTypedName",
														"src": "2160:5:14",
														"type": ""
													}
												],
												"src": "2095:632:14"
											},
											{
												"body": {
													"nativeSrc": "2785:169:14",
													"nodeType": "YulBlock",
													"src": "2785:169:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2834:16:14",
																"nodeType": "YulBlock",
																"src": "2834:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2843:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2843:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2846:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2846:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2836:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2836:6:14"
																			},
																			"nativeSrc": "2836:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2836:12:14"
																		},
																		"nativeSrc": "2836:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2836:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2813:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "2813:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2821:4:14",
																						"nodeType": "YulLiteral",
																						"src": "2821:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2809:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2809:3:14"
																				},
																				"nativeSrc": "2809:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2809:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2828:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "2828:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2805:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2805:3:14"
																		},
																		"nativeSrc": "2805:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2805:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2798:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2798:6:14"
																},
																"nativeSrc": "2798:35:14",
																"nodeType": "YulFunctionCall",
																"src": "2798:35:14"
															},
															"nativeSrc": "2795:55:14",
															"nodeType": "YulIf",
															"src": "2795:55:14"
														},
														{
															"nativeSrc": "2859:89:14",
															"nodeType": "YulAssignment",
															"src": "2859:89:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2907:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2907:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2915:4:14",
																				"nodeType": "YulLiteral",
																				"src": "2915:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2903:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2903:3:14"
																		},
																		"nativeSrc": "2903:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2903:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2935:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2935:6:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "2922:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "2922:12:14"
																		},
																		"nativeSrc": "2922:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2922:20:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2944:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2944:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nativeSrc": "2868:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "2868:34:14"
																},
																"nativeSrc": "2868:80:14",
																"nodeType": "YulFunctionCall",
																"src": "2868:80:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2859:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2859:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "2732:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2759:6:14",
														"nodeType": "YulTypedName",
														"src": "2759:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2767:3:14",
														"nodeType": "YulTypedName",
														"src": "2767:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2775:5:14",
														"nodeType": "YulTypedName",
														"src": "2775:5:14",
														"type": ""
													}
												],
												"src": "2732:222:14"
											},
											{
												"body": {
													"nativeSrc": "3100:545:14",
													"nodeType": "YulBlock",
													"src": "3100:545:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3147:16:14",
																"nodeType": "YulBlock",
																"src": "3147:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3156:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3156:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3159:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3159:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3149:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3149:6:14"
																			},
																			"nativeSrc": "3149:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3149:12:14"
																		},
																		"nativeSrc": "3149:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3149:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3121:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3121:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3130:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3130:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3117:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3117:3:14"
																		},
																		"nativeSrc": "3117:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3117:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3142:3:14",
																		"nodeType": "YulLiteral",
																		"src": "3142:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3113:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3113:3:14"
																},
																"nativeSrc": "3113:33:14",
																"nodeType": "YulFunctionCall",
																"src": "3113:33:14"
															},
															"nativeSrc": "3110:53:14",
															"nodeType": "YulIf",
															"src": "3110:53:14"
														},
														{
															"nativeSrc": "3172:39:14",
															"nodeType": "YulAssignment",
															"src": "3172:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3201:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3201:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3182:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "3182:18:14"
																},
																"nativeSrc": "3182:29:14",
																"nodeType": "YulFunctionCall",
																"src": "3182:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3172:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3172:6:14"
																}
															]
														},
														{
															"nativeSrc": "3220:42:14",
															"nodeType": "YulAssignment",
															"src": "3220:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3247:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3247:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3258:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3258:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3243:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3243:3:14"
																		},
																		"nativeSrc": "3243:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3243:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3230:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3230:12:14"
																},
																"nativeSrc": "3230:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3230:32:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3220:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3220:6:14"
																}
															]
														},
														{
															"nativeSrc": "3271:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3271:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3302:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3302:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3313:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3313:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3298:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3298:3:14"
																		},
																		"nativeSrc": "3298:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3298:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3285:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3285:12:14"
																},
																"nativeSrc": "3285:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3285:32:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3275:6:14",
																	"nodeType": "YulTypedName",
																	"src": "3275:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3326:28:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3326:28:14",
															"value": {
																"kind": "number",
																"nativeSrc": "3336:18:14",
																"nodeType": "YulLiteral",
																"src": "3336:18:14",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3330:2:14",
																	"nodeType": "YulTypedName",
																	"src": "3330:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3381:16:14",
																"nodeType": "YulBlock",
																"src": "3381:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3390:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3390:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3393:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3393:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3383:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3383:6:14"
																			},
																			"nativeSrc": "3383:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3383:12:14"
																		},
																		"nativeSrc": "3383:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3383:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3369:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3369:6:14"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3377:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "3377:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3366:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3366:2:14"
																},
																"nativeSrc": "3366:14:14",
																"nodeType": "YulFunctionCall",
																"src": "3366:14:14"
															},
															"nativeSrc": "3363:34:14",
															"nodeType": "YulIf",
															"src": "3363:34:14"
														},
														{
															"nativeSrc": "3406:60:14",
															"nodeType": "YulAssignment",
															"src": "3406:60:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3438:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3438:9:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3449:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3449:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3434:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3434:3:14"
																		},
																		"nativeSrc": "3434:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3434:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3458:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "3458:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "3416:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "3416:17:14"
																},
																"nativeSrc": "3416:50:14",
																"nodeType": "YulFunctionCall",
																"src": "3416:50:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3406:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3406:6:14"
																}
															]
														},
														{
															"nativeSrc": "3475:48:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3475:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3508:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3508:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3519:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3519:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3504:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3504:3:14"
																		},
																		"nativeSrc": "3504:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3504:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3491:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3491:12:14"
																},
																"nativeSrc": "3491:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3491:32:14"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "3479:8:14",
																	"nodeType": "YulTypedName",
																	"src": "3479:8:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3552:16:14",
																"nodeType": "YulBlock",
																"src": "3552:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3561:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3561:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3564:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3564:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3554:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3554:6:14"
																			},
																			"nativeSrc": "3554:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3554:12:14"
																		},
																		"nativeSrc": "3554:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3554:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "3538:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "3538:8:14"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3548:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "3548:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3535:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3535:2:14"
																},
																"nativeSrc": "3535:16:14",
																"nodeType": "YulFunctionCall",
																"src": "3535:16:14"
															},
															"nativeSrc": "3532:36:14",
															"nodeType": "YulIf",
															"src": "3532:36:14"
														},
														{
															"nativeSrc": "3577:62:14",
															"nodeType": "YulAssignment",
															"src": "3577:62:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3609:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3609:9:14"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "3620:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "3620:8:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3605:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3605:3:14"
																		},
																		"nativeSrc": "3605:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3605:24:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3631:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "3631:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "3587:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "3587:17:14"
																},
																"nativeSrc": "3587:52:14",
																"nodeType": "YulFunctionCall",
																"src": "3587:52:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3577:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3577:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_string_memory_ptrt_string_memory_ptr",
												"nativeSrc": "2959:686:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3042:9:14",
														"nodeType": "YulTypedName",
														"src": "3042:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3053:7:14",
														"nodeType": "YulTypedName",
														"src": "3053:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3065:6:14",
														"nodeType": "YulTypedName",
														"src": "3065:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3073:6:14",
														"nodeType": "YulTypedName",
														"src": "3073:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3081:6:14",
														"nodeType": "YulTypedName",
														"src": "3081:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3089:6:14",
														"nodeType": "YulTypedName",
														"src": "3089:6:14",
														"type": ""
													}
												],
												"src": "2959:686:14"
											},
											{
												"body": {
													"nativeSrc": "3754:224:14",
													"nodeType": "YulBlock",
													"src": "3754:224:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3800:16:14",
																"nodeType": "YulBlock",
																"src": "3800:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3809:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3809:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3812:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3812:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3802:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3802:6:14"
																			},
																			"nativeSrc": "3802:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3802:12:14"
																		},
																		"nativeSrc": "3802:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3802:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3775:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3775:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3784:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3784:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3771:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3771:3:14"
																		},
																		"nativeSrc": "3771:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3771:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3796:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3796:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3767:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3767:3:14"
																},
																"nativeSrc": "3767:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3767:32:14"
															},
															"nativeSrc": "3764:52:14",
															"nodeType": "YulIf",
															"src": "3764:52:14"
														},
														{
															"nativeSrc": "3825:39:14",
															"nodeType": "YulAssignment",
															"src": "3825:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3854:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3854:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3835:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "3835:18:14"
																},
																"nativeSrc": "3835:29:14",
																"nodeType": "YulFunctionCall",
																"src": "3835:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3825:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3825:6:14"
																}
															]
														},
														{
															"nativeSrc": "3873:48:14",
															"nodeType": "YulAssignment",
															"src": "3873:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3906:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3906:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3917:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3917:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3902:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3902:3:14"
																		},
																		"nativeSrc": "3902:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3902:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3883:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "3883:18:14"
																},
																"nativeSrc": "3883:38:14",
																"nodeType": "YulFunctionCall",
																"src": "3883:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3873:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3873:6:14"
																}
															]
														},
														{
															"nativeSrc": "3930:42:14",
															"nodeType": "YulAssignment",
															"src": "3930:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3957:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3957:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3968:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3968:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3953:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3953:3:14"
																		},
																		"nativeSrc": "3953:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3953:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3940:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3940:12:14"
																},
																"nativeSrc": "3940:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3940:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3930:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3930:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3650:328:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3704:9:14",
														"nodeType": "YulTypedName",
														"src": "3704:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3715:7:14",
														"nodeType": "YulTypedName",
														"src": "3715:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3727:6:14",
														"nodeType": "YulTypedName",
														"src": "3727:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3735:6:14",
														"nodeType": "YulTypedName",
														"src": "3735:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3743:6:14",
														"nodeType": "YulTypedName",
														"src": "3743:6:14",
														"type": ""
													}
												],
												"src": "3650:328:14"
											},
											{
												"body": {
													"nativeSrc": "4152:236:14",
													"nodeType": "YulBlock",
													"src": "4152:236:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4169:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4169:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4180:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4180:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4162:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4162:6:14"
																},
																"nativeSrc": "4162:21:14",
																"nodeType": "YulFunctionCall",
																"src": "4162:21:14"
															},
															"nativeSrc": "4162:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "4162:21:14"
														},
														{
															"nativeSrc": "4192:70:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4192:70:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4235:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4235:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4247:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4247:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4258:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4258:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4243:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4243:3:14"
																		},
																		"nativeSrc": "4243:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4243:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "4206:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "4206:28:14"
																},
																"nativeSrc": "4206:56:14",
																"nodeType": "YulFunctionCall",
																"src": "4206:56:14"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "4196:6:14",
																	"nodeType": "YulTypedName",
																	"src": "4196:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4282:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4282:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4293:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4293:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4278:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4278:3:14"
																		},
																		"nativeSrc": "4278:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4278:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "4302:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4302:6:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4310:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4310:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4298:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4298:3:14"
																		},
																		"nativeSrc": "4298:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4298:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4271:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4271:6:14"
																},
																"nativeSrc": "4271:50:14",
																"nodeType": "YulFunctionCall",
																"src": "4271:50:14"
															},
															"nativeSrc": "4271:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "4271:50:14"
														},
														{
															"nativeSrc": "4330:52:14",
															"nodeType": "YulAssignment",
															"src": "4330:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4367:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4367:6:14"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "4375:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4375:6:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "4338:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "4338:28:14"
																},
																"nativeSrc": "4338:44:14",
																"nodeType": "YulFunctionCall",
																"src": "4338:44:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4330:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4330:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3983:405:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4113:9:14",
														"nodeType": "YulTypedName",
														"src": "4113:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4124:6:14",
														"nodeType": "YulTypedName",
														"src": "4124:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4132:6:14",
														"nodeType": "YulTypedName",
														"src": "4132:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4143:4:14",
														"nodeType": "YulTypedName",
														"src": "4143:4:14",
														"type": ""
													}
												],
												"src": "3983:405:14"
											},
											{
												"body": {
													"nativeSrc": "4463:116:14",
													"nodeType": "YulBlock",
													"src": "4463:116:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4509:16:14",
																"nodeType": "YulBlock",
																"src": "4509:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4518:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4518:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4521:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4521:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4511:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4511:6:14"
																			},
																			"nativeSrc": "4511:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4511:12:14"
																		},
																		"nativeSrc": "4511:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4511:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4484:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4484:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4493:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4493:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4480:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4480:3:14"
																		},
																		"nativeSrc": "4480:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4480:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4505:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4505:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4476:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4476:3:14"
																},
																"nativeSrc": "4476:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4476:32:14"
															},
															"nativeSrc": "4473:52:14",
															"nodeType": "YulIf",
															"src": "4473:52:14"
														},
														{
															"nativeSrc": "4534:39:14",
															"nodeType": "YulAssignment",
															"src": "4534:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4563:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4563:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4544:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "4544:18:14"
																},
																"nativeSrc": "4544:29:14",
																"nodeType": "YulFunctionCall",
																"src": "4544:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4534:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4534:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4393:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4429:9:14",
														"nodeType": "YulTypedName",
														"src": "4429:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4440:7:14",
														"nodeType": "YulTypedName",
														"src": "4440:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4452:6:14",
														"nodeType": "YulTypedName",
														"src": "4452:6:14",
														"type": ""
													}
												],
												"src": "4393:186:14"
											},
											{
												"body": {
													"nativeSrc": "4685:76:14",
													"nodeType": "YulBlock",
													"src": "4685:76:14",
													"statements": [
														{
															"nativeSrc": "4695:26:14",
															"nodeType": "YulAssignment",
															"src": "4695:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4707:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4707:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4718:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4718:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4703:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4703:3:14"
																},
																"nativeSrc": "4703:18:14",
																"nodeType": "YulFunctionCall",
																"src": "4703:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4695:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "4695:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4737:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4737:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4748:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4748:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4730:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4730:6:14"
																},
																"nativeSrc": "4730:25:14",
																"nodeType": "YulFunctionCall",
																"src": "4730:25:14"
															},
															"nativeSrc": "4730:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "4730:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4584:177:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4654:9:14",
														"nodeType": "YulTypedName",
														"src": "4654:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4665:6:14",
														"nodeType": "YulTypedName",
														"src": "4665:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4676:4:14",
														"nodeType": "YulTypedName",
														"src": "4676:4:14",
														"type": ""
													}
												],
												"src": "4584:177:14"
											},
											{
												"body": {
													"nativeSrc": "4850:263:14",
													"nodeType": "YulBlock",
													"src": "4850:263:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4896:16:14",
																"nodeType": "YulBlock",
																"src": "4896:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4905:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4905:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4908:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4908:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4898:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4898:6:14"
																			},
																			"nativeSrc": "4898:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4898:12:14"
																		},
																		"nativeSrc": "4898:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4898:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4871:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4871:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4880:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4880:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4867:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4867:3:14"
																		},
																		"nativeSrc": "4867:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4867:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4892:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4892:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4863:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4863:3:14"
																},
																"nativeSrc": "4863:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4863:32:14"
															},
															"nativeSrc": "4860:52:14",
															"nodeType": "YulIf",
															"src": "4860:52:14"
														},
														{
															"nativeSrc": "4921:39:14",
															"nodeType": "YulAssignment",
															"src": "4921:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4950:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4950:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4931:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "4931:18:14"
																},
																"nativeSrc": "4931:29:14",
																"nodeType": "YulFunctionCall",
																"src": "4931:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4921:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4921:6:14"
																}
															]
														},
														{
															"nativeSrc": "4969:45:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4969:45:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4999:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4999:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5010:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5010:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4995:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4995:3:14"
																		},
																		"nativeSrc": "4995:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4995:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4982:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "4982:12:14"
																},
																"nativeSrc": "4982:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4982:32:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4973:5:14",
																	"nodeType": "YulTypedName",
																	"src": "4973:5:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5067:16:14",
																"nodeType": "YulBlock",
																"src": "5067:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5076:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5076:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5079:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5079:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5069:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5069:6:14"
																			},
																			"nativeSrc": "5069:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5069:12:14"
																		},
																		"nativeSrc": "5069:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5069:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5036:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5036:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "5057:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "5057:5:14"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "5050:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "5050:6:14"
																						},
																						"nativeSrc": "5050:13:14",
																						"nodeType": "YulFunctionCall",
																						"src": "5050:13:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5043:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "5043:6:14"
																				},
																				"nativeSrc": "5043:21:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5043:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5033:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "5033:2:14"
																		},
																		"nativeSrc": "5033:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5033:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5026:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5026:6:14"
																},
																"nativeSrc": "5026:40:14",
																"nodeType": "YulFunctionCall",
																"src": "5026:40:14"
															},
															"nativeSrc": "5023:60:14",
															"nodeType": "YulIf",
															"src": "5023:60:14"
														},
														{
															"nativeSrc": "5092:15:14",
															"nodeType": "YulAssignment",
															"src": "5092:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "5102:5:14",
																"nodeType": "YulIdentifier",
																"src": "5102:5:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5092:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5092:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "4766:347:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4808:9:14",
														"nodeType": "YulTypedName",
														"src": "4808:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4819:7:14",
														"nodeType": "YulTypedName",
														"src": "4819:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4831:6:14",
														"nodeType": "YulTypedName",
														"src": "4831:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4839:6:14",
														"nodeType": "YulTypedName",
														"src": "4839:6:14",
														"type": ""
													}
												],
												"src": "4766:347:14"
											},
											{
												"body": {
													"nativeSrc": "5248:537:14",
													"nodeType": "YulBlock",
													"src": "5248:537:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5295:16:14",
																"nodeType": "YulBlock",
																"src": "5295:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5304:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5304:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5307:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5307:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5297:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5297:6:14"
																			},
																			"nativeSrc": "5297:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5297:12:14"
																		},
																		"nativeSrc": "5297:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5297:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5269:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5269:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5278:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5278:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5265:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5265:3:14"
																		},
																		"nativeSrc": "5265:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5265:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5290:3:14",
																		"nodeType": "YulLiteral",
																		"src": "5290:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5261:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5261:3:14"
																},
																"nativeSrc": "5261:33:14",
																"nodeType": "YulFunctionCall",
																"src": "5261:33:14"
															},
															"nativeSrc": "5258:53:14",
															"nodeType": "YulIf",
															"src": "5258:53:14"
														},
														{
															"nativeSrc": "5320:39:14",
															"nodeType": "YulAssignment",
															"src": "5320:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5349:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5349:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5330:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "5330:18:14"
																},
																"nativeSrc": "5330:29:14",
																"nodeType": "YulFunctionCall",
																"src": "5330:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5320:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5320:6:14"
																}
															]
														},
														{
															"nativeSrc": "5368:48:14",
															"nodeType": "YulAssignment",
															"src": "5368:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5401:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5401:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5412:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5412:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5397:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5397:3:14"
																		},
																		"nativeSrc": "5397:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5397:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5378:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "5378:18:14"
																},
																"nativeSrc": "5378:38:14",
																"nodeType": "YulFunctionCall",
																"src": "5378:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5368:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5368:6:14"
																}
															]
														},
														{
															"nativeSrc": "5425:42:14",
															"nodeType": "YulAssignment",
															"src": "5425:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5452:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5452:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5463:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5463:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5448:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5448:3:14"
																		},
																		"nativeSrc": "5448:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5448:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5435:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "5435:12:14"
																},
																"nativeSrc": "5435:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5435:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5425:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5425:6:14"
																}
															]
														},
														{
															"nativeSrc": "5476:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5476:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5507:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5507:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5518:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5518:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5503:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5503:3:14"
																		},
																		"nativeSrc": "5503:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5503:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5490:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "5490:12:14"
																},
																"nativeSrc": "5490:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5490:32:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5480:6:14",
																	"nodeType": "YulTypedName",
																	"src": "5480:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5565:16:14",
																"nodeType": "YulBlock",
																"src": "5565:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5574:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5574:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5577:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5577:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5567:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5567:6:14"
																			},
																			"nativeSrc": "5567:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5567:12:14"
																		},
																		"nativeSrc": "5567:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5567:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5537:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5537:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5545:18:14",
																		"nodeType": "YulLiteral",
																		"src": "5545:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5534:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "5534:2:14"
																},
																"nativeSrc": "5534:30:14",
																"nodeType": "YulFunctionCall",
																"src": "5534:30:14"
															},
															"nativeSrc": "5531:50:14",
															"nodeType": "YulIf",
															"src": "5531:50:14"
														},
														{
															"nativeSrc": "5590:32:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5590:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5604:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5604:9:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5615:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5615:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5600:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:14"
																},
																"nativeSrc": "5600:22:14",
																"nodeType": "YulFunctionCall",
																"src": "5600:22:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5594:2:14",
																	"nodeType": "YulTypedName",
																	"src": "5594:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5670:16:14",
																"nodeType": "YulBlock",
																"src": "5670:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5679:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5679:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5682:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5682:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5672:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5672:6:14"
																			},
																			"nativeSrc": "5672:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5672:12:14"
																		},
																		"nativeSrc": "5672:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5672:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "5649:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "5649:2:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5653:4:14",
																						"nodeType": "YulLiteral",
																						"src": "5653:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5645:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5645:3:14"
																				},
																				"nativeSrc": "5645:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5645:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5660:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5660:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5641:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5641:3:14"
																		},
																		"nativeSrc": "5641:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5641:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5634:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5634:6:14"
																},
																"nativeSrc": "5634:35:14",
																"nodeType": "YulFunctionCall",
																"src": "5634:35:14"
															},
															"nativeSrc": "5631:55:14",
															"nodeType": "YulIf",
															"src": "5631:55:14"
														},
														{
															"nativeSrc": "5695:84:14",
															"nodeType": "YulAssignment",
															"src": "5695:84:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "5744:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "5744:2:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5748:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5740:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5740:3:14"
																		},
																		"nativeSrc": "5740:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5740:11:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "5766:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "5766:2:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5753:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "5753:12:14"
																		},
																		"nativeSrc": "5753:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5753:16:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5771:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "5771:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nativeSrc": "5705:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "5705:34:14"
																},
																"nativeSrc": "5705:74:14",
																"nodeType": "YulFunctionCall",
																"src": "5705:74:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5695:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5695:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "5118:667:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5190:9:14",
														"nodeType": "YulTypedName",
														"src": "5190:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5201:7:14",
														"nodeType": "YulTypedName",
														"src": "5201:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5213:6:14",
														"nodeType": "YulTypedName",
														"src": "5213:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5221:6:14",
														"nodeType": "YulTypedName",
														"src": "5221:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5229:6:14",
														"nodeType": "YulTypedName",
														"src": "5229:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5237:6:14",
														"nodeType": "YulTypedName",
														"src": "5237:6:14",
														"type": ""
													}
												],
												"src": "5118:667:14"
											},
											{
												"body": {
													"nativeSrc": "5877:173:14",
													"nodeType": "YulBlock",
													"src": "5877:173:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5923:16:14",
																"nodeType": "YulBlock",
																"src": "5923:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5932:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5932:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5935:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5935:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5925:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5925:6:14"
																			},
																			"nativeSrc": "5925:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5925:12:14"
																		},
																		"nativeSrc": "5925:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5925:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5898:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5898:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5907:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5907:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5894:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5894:3:14"
																		},
																		"nativeSrc": "5894:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5894:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5919:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5919:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5890:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5890:3:14"
																},
																"nativeSrc": "5890:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5890:32:14"
															},
															"nativeSrc": "5887:52:14",
															"nodeType": "YulIf",
															"src": "5887:52:14"
														},
														{
															"nativeSrc": "5948:39:14",
															"nodeType": "YulAssignment",
															"src": "5948:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5977:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5977:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5958:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "5958:18:14"
																},
																"nativeSrc": "5958:29:14",
																"nodeType": "YulFunctionCall",
																"src": "5958:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5948:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5948:6:14"
																}
															]
														},
														{
															"nativeSrc": "5996:48:14",
															"nodeType": "YulAssignment",
															"src": "5996:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6029:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6029:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6040:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6040:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6025:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6025:3:14"
																		},
																		"nativeSrc": "6025:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6025:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6006:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "6006:18:14"
																},
																"nativeSrc": "6006:38:14",
																"nodeType": "YulFunctionCall",
																"src": "6006:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5996:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5790:260:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5835:9:14",
														"nodeType": "YulTypedName",
														"src": "5835:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5846:7:14",
														"nodeType": "YulTypedName",
														"src": "5846:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5858:6:14",
														"nodeType": "YulTypedName",
														"src": "5858:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5866:6:14",
														"nodeType": "YulTypedName",
														"src": "5866:6:14",
														"type": ""
													}
												],
												"src": "5790:260:14"
											},
											{
												"body": {
													"nativeSrc": "6110:325:14",
													"nodeType": "YulBlock",
													"src": "6110:325:14",
													"statements": [
														{
															"nativeSrc": "6120:22:14",
															"nodeType": "YulAssignment",
															"src": "6120:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6134:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6134:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "6137:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6137:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6130:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6130:3:14"
																},
																"nativeSrc": "6130:12:14",
																"nodeType": "YulFunctionCall",
																"src": "6130:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6120:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6120:6:14"
																}
															]
														},
														{
															"nativeSrc": "6151:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6151:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6181:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "6181:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6187:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6187:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6177:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6177:3:14"
																},
																"nativeSrc": "6177:12:14",
																"nodeType": "YulFunctionCall",
																"src": "6177:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6155:18:14",
																	"nodeType": "YulTypedName",
																	"src": "6155:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6228:31:14",
																"nodeType": "YulBlock",
																"src": "6228:31:14",
																"statements": [
																	{
																		"nativeSrc": "6230:27:14",
																		"nodeType": "YulAssignment",
																		"src": "6230:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6244:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "6244:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6252:4:14",
																					"nodeType": "YulLiteral",
																					"src": "6252:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6240:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6240:3:14"
																			},
																			"nativeSrc": "6240:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6240:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6230:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6230:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6208:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "6208:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6201:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6201:6:14"
																},
																"nativeSrc": "6201:26:14",
																"nodeType": "YulFunctionCall",
																"src": "6201:26:14"
															},
															"nativeSrc": "6198:61:14",
															"nodeType": "YulIf",
															"src": "6198:61:14"
														},
														{
															"body": {
																"nativeSrc": "6318:111:14",
																"nodeType": "YulBlock",
																"src": "6318:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6339:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6339:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6346:3:14",
																							"nodeType": "YulLiteral",
																							"src": "6346:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6351:10:14",
																							"nodeType": "YulLiteral",
																							"src": "6351:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6342:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "6342:3:14"
																					},
																					"nativeSrc": "6342:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6342:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6332:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6332:6:14"
																			},
																			"nativeSrc": "6332:31:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6332:31:14"
																		},
																		"nativeSrc": "6332:31:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6332:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6383:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6383:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6386:4:14",
																					"nodeType": "YulLiteral",
																					"src": "6386:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6376:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6376:6:14"
																			},
																			"nativeSrc": "6376:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6376:15:14"
																		},
																		"nativeSrc": "6376:15:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6376:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6411:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6411:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6414:4:14",
																					"nodeType": "YulLiteral",
																					"src": "6414:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6404:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6404:6:14"
																			},
																			"nativeSrc": "6404:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6404:15:14"
																		},
																		"nativeSrc": "6404:15:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6404:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6274:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "6274:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6297:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6297:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6305:2:14",
																				"nodeType": "YulLiteral",
																				"src": "6305:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6294:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "6294:2:14"
																		},
																		"nativeSrc": "6294:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6294:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6271:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6271:2:14"
																},
																"nativeSrc": "6271:38:14",
																"nodeType": "YulFunctionCall",
																"src": "6271:38:14"
															},
															"nativeSrc": "6268:161:14",
															"nodeType": "YulIf",
															"src": "6268:161:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6055:380:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6090:4:14",
														"nodeType": "YulTypedName",
														"src": "6090:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6099:6:14",
														"nodeType": "YulTypedName",
														"src": "6099:6:14",
														"type": ""
													}
												],
												"src": "6055:380:14"
											},
											{
												"body": {
													"nativeSrc": "6496:65:14",
													"nodeType": "YulBlock",
													"src": "6496:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6513:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6513:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "6516:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6516:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6506:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6506:6:14"
																},
																"nativeSrc": "6506:14:14",
																"nodeType": "YulFunctionCall",
																"src": "6506:14:14"
															},
															"nativeSrc": "6506:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "6506:14:14"
														},
														{
															"nativeSrc": "6529:26:14",
															"nodeType": "YulAssignment",
															"src": "6529:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6547:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6547:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6550:4:14",
																		"nodeType": "YulLiteral",
																		"src": "6550:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "6537:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "6537:9:14"
																},
																"nativeSrc": "6537:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6537:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6529:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6529:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "6440:121:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "6479:3:14",
														"nodeType": "YulTypedName",
														"src": "6479:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "6487:4:14",
														"nodeType": "YulTypedName",
														"src": "6487:4:14",
														"type": ""
													}
												],
												"src": "6440:121:14"
											},
											{
												"body": {
													"nativeSrc": "6647:437:14",
													"nodeType": "YulBlock",
													"src": "6647:437:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6680:398:14",
																"nodeType": "YulBlock",
																"src": "6680:398:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6701:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6701:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "6704:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "6704:5:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6694:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6694:6:14"
																			},
																			"nativeSrc": "6694:16:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6694:16:14"
																		},
																		"nativeSrc": "6694:16:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6694:16:14"
																	},
																	{
																		"nativeSrc": "6723:30:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6723:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6745:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6745:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6748:4:14",
																					"nodeType": "YulLiteral",
																					"src": "6748:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "6735:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6735:9:14"
																			},
																			"nativeSrc": "6735:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6735:18:14"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "6727:4:14",
																				"nodeType": "YulTypedName",
																				"src": "6727:4:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6766:57:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6766:57:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "6789:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "6789:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6799:1:14",
																							"nodeType": "YulLiteral",
																							"src": "6799:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "6806:10:14",
																									"nodeType": "YulIdentifier",
																									"src": "6806:10:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6818:2:14",
																									"nodeType": "YulLiteral",
																									"src": "6818:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6802:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "6802:3:14"
																							},
																							"nativeSrc": "6802:19:14",
																							"nodeType": "YulFunctionCall",
																							"src": "6802:19:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "6795:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "6795:3:14"
																					},
																					"nativeSrc": "6795:27:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6795:27:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6785:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6785:3:14"
																			},
																			"nativeSrc": "6785:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6785:38:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6770:11:14",
																				"nodeType": "YulTypedName",
																				"src": "6770:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6860:23:14",
																			"nodeType": "YulBlock",
																			"src": "6860:23:14",
																			"statements": [
																				{
																					"nativeSrc": "6862:19:14",
																					"nodeType": "YulAssignment",
																					"src": "6862:19:14",
																					"value": {
																						"name": "data",
																						"nativeSrc": "6877:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "6877:4:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6862:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "6862:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6842:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "6842:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6854:4:14",
																					"nodeType": "YulLiteral",
																					"src": "6854:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6839:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "6839:2:14"
																			},
																			"nativeSrc": "6839:20:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6839:20:14"
																		},
																		"nativeSrc": "6836:47:14",
																		"nodeType": "YulIf",
																		"src": "6836:47:14"
																	},
																	{
																		"nativeSrc": "6896:41:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6896:41:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "6910:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "6910:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6920:1:14",
																							"nodeType": "YulLiteral",
																							"src": "6920:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6927:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "6927:3:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6932:2:14",
																									"nodeType": "YulLiteral",
																									"src": "6932:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6923:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "6923:3:14"
																							},
																							"nativeSrc": "6923:12:14",
																							"nodeType": "YulFunctionCall",
																							"src": "6923:12:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "6916:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "6916:3:14"
																					},
																					"nativeSrc": "6916:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6916:20:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6906:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6906:3:14"
																			},
																			"nativeSrc": "6906:31:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6906:31:14"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "6900:2:14",
																				"nodeType": "YulTypedName",
																				"src": "6900:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6950:24:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6950:24:14",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "6963:11:14",
																			"nodeType": "YulIdentifier",
																			"src": "6963:11:14"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "6954:5:14",
																				"nodeType": "YulTypedName",
																				"src": "6954:5:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7048:20:14",
																			"nodeType": "YulBlock",
																			"src": "7048:20:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "7057:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "7057:5:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7064:1:14",
																								"nodeType": "YulLiteral",
																								"src": "7064:1:14",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "7050:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "7050:6:14"
																						},
																						"nativeSrc": "7050:16:14",
																						"nodeType": "YulFunctionCall",
																						"src": "7050:16:14"
																					},
																					"nativeSrc": "7050:16:14",
																					"nodeType": "YulExpressionStatement",
																					"src": "7050:16:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6998:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "6998:5:14"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "7005:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "7005:2:14"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6995:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "6995:2:14"
																			},
																			"nativeSrc": "6995:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6995:13:14"
																		},
																		"nativeSrc": "6987:81:14",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "7009:26:14",
																			"nodeType": "YulBlock",
																			"src": "7009:26:14",
																			"statements": [
																				{
																					"nativeSrc": "7011:22:14",
																					"nodeType": "YulAssignment",
																					"src": "7011:22:14",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "7024:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "7024:5:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7031:1:14",
																								"nodeType": "YulLiteral",
																								"src": "7031:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "7020:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "7020:3:14"
																						},
																						"nativeSrc": "7020:13:14",
																						"nodeType": "YulFunctionCall",
																						"src": "7020:13:14"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "7011:5:14",
																							"nodeType": "YulIdentifier",
																							"src": "7011:5:14"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "6991:3:14",
																			"nodeType": "YulBlock",
																			"src": "6991:3:14",
																			"statements": []
																		},
																		"src": "6987:81:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6663:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6663:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6668:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6668:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6660:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6660:2:14"
																},
																"nativeSrc": "6660:11:14",
																"nodeType": "YulFunctionCall",
																"src": "6660:11:14"
															},
															"nativeSrc": "6657:421:14",
															"nodeType": "YulIf",
															"src": "6657:421:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "6566:518:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6619:5:14",
														"nodeType": "YulTypedName",
														"src": "6619:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6626:3:14",
														"nodeType": "YulTypedName",
														"src": "6626:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6631:10:14",
														"nodeType": "YulTypedName",
														"src": "6631:10:14",
														"type": ""
													}
												],
												"src": "6566:518:14"
											},
											{
												"body": {
													"nativeSrc": "7174:81:14",
													"nodeType": "YulBlock",
													"src": "7174:81:14",
													"statements": [
														{
															"nativeSrc": "7184:65:14",
															"nodeType": "YulAssignment",
															"src": "7184:65:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7199:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "7199:4:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "7217:1:14",
																										"nodeType": "YulLiteral",
																										"src": "7217:1:14",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "7220:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "7220:3:14"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "7213:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "7213:3:14"
																								},
																								"nativeSrc": "7213:11:14",
																								"nodeType": "YulFunctionCall",
																								"src": "7213:11:14"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "7230:1:14",
																										"nodeType": "YulLiteral",
																										"src": "7230:1:14",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "7226:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "7226:3:14"
																								},
																								"nativeSrc": "7226:6:14",
																								"nodeType": "YulFunctionCall",
																								"src": "7226:6:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "7209:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "7209:3:14"
																						},
																						"nativeSrc": "7209:24:14",
																						"nodeType": "YulFunctionCall",
																						"src": "7209:24:14"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7205:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7205:3:14"
																				},
																				"nativeSrc": "7205:29:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7205:29:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7195:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7195:3:14"
																		},
																		"nativeSrc": "7195:40:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7195:40:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7241:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7241:1:14",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7244:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "7244:3:14"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7237:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7237:3:14"
																		},
																		"nativeSrc": "7237:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7237:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7192:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7192:2:14"
																},
																"nativeSrc": "7192:57:14",
																"nodeType": "YulFunctionCall",
																"src": "7192:57:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7184:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7184:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7089:166:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7151:4:14",
														"nodeType": "YulTypedName",
														"src": "7151:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7157:3:14",
														"nodeType": "YulTypedName",
														"src": "7157:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7165:4:14",
														"nodeType": "YulTypedName",
														"src": "7165:4:14",
														"type": ""
													}
												],
												"src": "7089:166:14"
											},
											{
												"body": {
													"nativeSrc": "7356:1249:14",
													"nodeType": "YulBlock",
													"src": "7356:1249:14",
													"statements": [
														{
															"nativeSrc": "7366:24:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7366:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7386:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "7386:3:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7380:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7380:5:14"
																},
																"nativeSrc": "7380:10:14",
																"nodeType": "YulFunctionCall",
																"src": "7380:10:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7370:6:14",
																	"nodeType": "YulTypedName",
																	"src": "7370:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7433:22:14",
																"nodeType": "YulBlock",
																"src": "7433:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7435:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "7435:16:14"
																			},
																			"nativeSrc": "7435:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7435:18:14"
																		},
																		"nativeSrc": "7435:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7435:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7405:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7405:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7413:18:14",
																		"nodeType": "YulLiteral",
																		"src": "7413:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7402:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7402:2:14"
																},
																"nativeSrc": "7402:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7402:30:14"
															},
															"nativeSrc": "7399:56:14",
															"nodeType": "YulIf",
															"src": "7399:56:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7508:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "7508:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "7546:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "7546:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "7540:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "7540:5:14"
																				},
																				"nativeSrc": "7540:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7540:11:14"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "7514:25:14",
																			"nodeType": "YulIdentifier",
																			"src": "7514:25:14"
																		},
																		"nativeSrc": "7514:38:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7514:38:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7554:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7554:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "7464:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "7464:43:14"
																},
																"nativeSrc": "7464:97:14",
																"nodeType": "YulFunctionCall",
																"src": "7464:97:14"
															},
															"nativeSrc": "7464:97:14",
															"nodeType": "YulExpressionStatement",
															"src": "7464:97:14"
														},
														{
															"nativeSrc": "7570:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7570:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "7587:1:14",
																"nodeType": "YulLiteral",
																"src": "7587:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7574:9:14",
																	"nodeType": "YulTypedName",
																	"src": "7574:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7597:23:14",
															"nodeType": "YulVariableDeclaration",
															"src": "7597:23:14",
															"value": {
																"kind": "number",
																"nativeSrc": "7616:4:14",
																"nodeType": "YulLiteral",
																"src": "7616:4:14",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "7601:11:14",
																	"nodeType": "YulTypedName",
																	"src": "7601:11:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7629:17:14",
															"nodeType": "YulAssignment",
															"src": "7629:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "7642:4:14",
																"nodeType": "YulLiteral",
																"src": "7642:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7629:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "7629:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7692:656:14",
																		"nodeType": "YulBlock",
																		"src": "7692:656:14",
																		"statements": [
																			{
																				"nativeSrc": "7706:35:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7706:35:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7725:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "7725:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7737:2:14",
																									"nodeType": "YulLiteral",
																									"src": "7737:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7733:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "7733:3:14"
																							},
																							"nativeSrc": "7733:7:14",
																							"nodeType": "YulFunctionCall",
																							"src": "7733:7:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7721:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "7721:3:14"
																					},
																					"nativeSrc": "7721:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "7721:20:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7710:7:14",
																						"nodeType": "YulTypedName",
																						"src": "7710:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7754:49:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7754:49:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7798:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "7798:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "7768:29:14",
																						"nodeType": "YulIdentifier",
																						"src": "7768:29:14"
																					},
																					"nativeSrc": "7768:35:14",
																					"nodeType": "YulFunctionCall",
																					"src": "7768:35:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7758:6:14",
																						"nodeType": "YulTypedName",
																						"src": "7758:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7816:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7816:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7825:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7825:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7820:1:14",
																						"nodeType": "YulTypedName",
																						"src": "7820:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7903:172:14",
																					"nodeType": "YulBlock",
																					"src": "7903:172:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7928:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "7928:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7946:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "7946:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7951:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "7951:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7942:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "7942:3:14"
																												},
																												"nativeSrc": "7942:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "7942:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7936:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "7936:5:14"
																										},
																										"nativeSrc": "7936:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "7936:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7921:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "7921:6:14"
																								},
																								"nativeSrc": "7921:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "7921:42:14"
																							},
																							"nativeSrc": "7921:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "7921:42:14"
																						},
																						{
																							"nativeSrc": "7980:24:14",
																							"nodeType": "YulAssignment",
																							"src": "7980:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7994:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "7994:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8002:1:14",
																										"nodeType": "YulLiteral",
																										"src": "8002:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7990:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "7990:3:14"
																								},
																								"nativeSrc": "7990:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "7990:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7980:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "7980:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8021:40:14",
																							"nodeType": "YulAssignment",
																							"src": "8021:40:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8038:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "8038:9:14"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "8049:11:14",
																										"nodeType": "YulIdentifier",
																										"src": "8049:11:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8034:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "8034:3:14"
																								},
																								"nativeSrc": "8034:27:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8034:27:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8021:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "8021:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7850:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "7850:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7853:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "7853:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7847:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "7847:2:14"
																					},
																					"nativeSrc": "7847:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "7847:14:14"
																				},
																				"nativeSrc": "7839:236:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7862:28:14",
																					"nodeType": "YulBlock",
																					"src": "7862:28:14",
																					"statements": [
																						{
																							"nativeSrc": "7864:24:14",
																							"nodeType": "YulAssignment",
																							"src": "7864:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7873:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "7873:1:14"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "7876:11:14",
																										"nodeType": "YulIdentifier",
																										"src": "7876:11:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7869:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "7869:3:14"
																								},
																								"nativeSrc": "7869:19:14",
																								"nodeType": "YulFunctionCall",
																								"src": "7869:19:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7864:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "7864:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7843:3:14",
																					"nodeType": "YulBlock",
																					"src": "7843:3:14",
																					"statements": []
																				},
																				"src": "7839:236:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "8123:166:14",
																					"nodeType": "YulBlock",
																					"src": "8123:166:14",
																					"statements": [
																						{
																							"nativeSrc": "8141:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8141:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8168:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "8168:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8173:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "8173:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8164:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "8164:3:14"
																										},
																										"nativeSrc": "8164:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "8164:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8158:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "8158:5:14"
																								},
																								"nativeSrc": "8158:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8158:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8145:9:14",
																									"nodeType": "YulTypedName",
																									"src": "8145:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8208:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "8208:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8220:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "8220:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "8247:1:14",
																																				"nodeType": "YulLiteral",
																																				"src": "8247:1:14",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "8250:6:14",
																																				"nodeType": "YulIdentifier",
																																				"src": "8250:6:14"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "8243:3:14",
																																			"nodeType": "YulIdentifier",
																																			"src": "8243:3:14"
																																		},
																																		"nativeSrc": "8243:14:14",
																																		"nodeType": "YulFunctionCall",
																																		"src": "8243:14:14"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "8259:3:14",
																																		"nodeType": "YulLiteral",
																																		"src": "8259:3:14",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "8239:3:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "8239:3:14"
																																},
																																"nativeSrc": "8239:24:14",
																																"nodeType": "YulFunctionCall",
																																"src": "8239:24:14"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "8269:1:14",
																																		"nodeType": "YulLiteral",
																																		"src": "8269:1:14",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "8265:3:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "8265:3:14"
																																},
																																"nativeSrc": "8265:6:14",
																																"nodeType": "YulFunctionCall",
																																"src": "8265:6:14"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "8235:3:14",
																															"nodeType": "YulIdentifier",
																															"src": "8235:3:14"
																														},
																														"nativeSrc": "8235:37:14",
																														"nodeType": "YulFunctionCall",
																														"src": "8235:37:14"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "8231:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "8231:3:14"
																												},
																												"nativeSrc": "8231:42:14",
																												"nodeType": "YulFunctionCall",
																												"src": "8231:42:14"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "8216:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "8216:3:14"
																										},
																										"nativeSrc": "8216:58:14",
																										"nodeType": "YulFunctionCall",
																										"src": "8216:58:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8201:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "8201:6:14"
																								},
																								"nativeSrc": "8201:74:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8201:74:14"
																							},
																							"nativeSrc": "8201:74:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "8201:74:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8094:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8103:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8091:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:14"
																					},
																					"nativeSrc": "8091:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:14"
																				},
																				"nativeSrc": "8088:201:14",
																				"nodeType": "YulIf",
																				"src": "8088:201:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8309:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "8309:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "8323:1:14",
																											"nodeType": "YulLiteral",
																											"src": "8323:1:14",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "8326:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "8326:6:14"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "8319:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "8319:3:14"
																									},
																									"nativeSrc": "8319:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "8319:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8335:1:14",
																									"nodeType": "YulLiteral",
																									"src": "8335:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8315:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "8315:3:14"
																							},
																							"nativeSrc": "8315:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "8315:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8302:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8302:6:14"
																					},
																					"nativeSrc": "8302:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8302:36:14"
																				},
																				"nativeSrc": "8302:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "8302:36:14"
																			}
																		]
																	},
																	"nativeSrc": "7685:663:14",
																	"nodeType": "YulCase",
																	"src": "7685:663:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7690:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7690:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8365:234:14",
																		"nodeType": "YulBlock",
																		"src": "8365:234:14",
																		"statements": [
																			{
																				"nativeSrc": "8379:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8379:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8392:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8392:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8383:5:14",
																						"nodeType": "YulTypedName",
																						"src": "8383:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8428:67:14",
																					"nodeType": "YulBlock",
																					"src": "8428:67:14",
																					"statements": [
																						{
																							"nativeSrc": "8446:35:14",
																							"nodeType": "YulAssignment",
																							"src": "8446:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8465:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "8465:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8470:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "8470:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8461:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "8461:3:14"
																										},
																										"nativeSrc": "8461:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "8461:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8455:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "8455:5:14"
																								},
																								"nativeSrc": "8455:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "8455:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8446:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "8446:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8409:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "8409:6:14"
																				},
																				"nativeSrc": "8406:89:14",
																				"nodeType": "YulIf",
																				"src": "8406:89:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8515:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "8515:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8574:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "8574:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8581:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "8581:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8521:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "8521:52:14"
																							},
																							"nativeSrc": "8521:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "8521:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8508:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8508:6:14"
																					},
																					"nativeSrc": "8508:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "8508:81:14"
																				},
																				"nativeSrc": "8508:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "8508:81:14"
																			}
																		]
																	},
																	"nativeSrc": "8357:242:14",
																	"nodeType": "YulCase",
																	"src": "8357:242:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7665:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7665:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7673:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7673:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7662:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "7662:2:14"
																},
																"nativeSrc": "7662:14:14",
																"nodeType": "YulFunctionCall",
																"src": "7662:14:14"
															},
															"nativeSrc": "7655:944:14",
															"nodeType": "YulSwitch",
															"src": "7655:944:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7260:1345:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7341:4:14",
														"nodeType": "YulTypedName",
														"src": "7341:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7347:3:14",
														"nodeType": "YulTypedName",
														"src": "7347:3:14",
														"type": ""
													}
												],
												"src": "7260:1345:14"
											},
											{
												"body": {
													"nativeSrc": "8767:218:14",
													"nodeType": "YulBlock",
													"src": "8767:218:14",
													"statements": [
														{
															"nativeSrc": "8777:26:14",
															"nodeType": "YulAssignment",
															"src": "8777:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8789:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8789:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8800:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8800:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8785:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8785:3:14"
																},
																"nativeSrc": "8785:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8785:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8777:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8777:4:14"
																}
															]
														},
														{
															"nativeSrc": "8812:29:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8812:29:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8830:3:14",
																				"nodeType": "YulLiteral",
																				"src": "8830:3:14",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8835:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8835:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8826:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8826:3:14"
																		},
																		"nativeSrc": "8826:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8826:11:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8839:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8839:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8822:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8822:3:14"
																},
																"nativeSrc": "8822:19:14",
																"nodeType": "YulFunctionCall",
																"src": "8822:19:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "8816:2:14",
																	"nodeType": "YulTypedName",
																	"src": "8816:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8857:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8857:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8872:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8872:6:14"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "8880:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "8880:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8868:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8868:3:14"
																		},
																		"nativeSrc": "8868:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8868:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8850:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8850:6:14"
																},
																"nativeSrc": "8850:34:14",
																"nodeType": "YulFunctionCall",
																"src": "8850:34:14"
															},
															"nativeSrc": "8850:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "8850:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8904:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8904:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8915:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8915:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8900:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8900:3:14"
																		},
																		"nativeSrc": "8900:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8900:18:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8920:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8920:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8893:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8893:6:14"
																},
																"nativeSrc": "8893:34:14",
																"nodeType": "YulFunctionCall",
																"src": "8893:34:14"
															},
															"nativeSrc": "8893:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "8893:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8947:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8947:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8958:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8958:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8943:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8943:3:14"
																		},
																		"nativeSrc": "8943:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8943:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "8967:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8967:6:14"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "8975:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "8975:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8963:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8963:3:14"
																		},
																		"nativeSrc": "8963:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8963:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8936:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8936:6:14"
																},
																"nativeSrc": "8936:43:14",
																"nodeType": "YulFunctionCall",
																"src": "8936:43:14"
															},
															"nativeSrc": "8936:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "8936:43:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "8610:375:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8720:9:14",
														"nodeType": "YulTypedName",
														"src": "8720:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8731:6:14",
														"nodeType": "YulTypedName",
														"src": "8731:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8739:6:14",
														"nodeType": "YulTypedName",
														"src": "8739:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8747:6:14",
														"nodeType": "YulTypedName",
														"src": "8747:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8758:4:14",
														"nodeType": "YulTypedName",
														"src": "8758:4:14",
														"type": ""
													}
												],
												"src": "8610:375:14"
											},
											{
												"body": {
													"nativeSrc": "9164:173:14",
													"nodeType": "YulBlock",
													"src": "9164:173:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9181:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9181:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9192:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9192:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9174:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9174:6:14"
																},
																"nativeSrc": "9174:21:14",
																"nodeType": "YulFunctionCall",
																"src": "9174:21:14"
															},
															"nativeSrc": "9174:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "9174:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9215:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9215:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9226:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9226:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9211:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9211:3:14"
																		},
																		"nativeSrc": "9211:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9211:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9231:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9231:2:14",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9204:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9204:6:14"
																},
																"nativeSrc": "9204:30:14",
																"nodeType": "YulFunctionCall",
																"src": "9204:30:14"
															},
															"nativeSrc": "9204:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "9204:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9254:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9254:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9265:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9265:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9250:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9250:3:14"
																		},
																		"nativeSrc": "9250:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9250:18:14"
																	},
																	{
																		"hexValue": "546f6b656e20494420646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "9270:25:14",
																		"nodeType": "YulLiteral",
																		"src": "9270:25:14",
																		"type": "",
																		"value": "Token ID does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9243:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9243:6:14"
																},
																"nativeSrc": "9243:53:14",
																"nodeType": "YulFunctionCall",
																"src": "9243:53:14"
															},
															"nativeSrc": "9243:53:14",
															"nodeType": "YulExpressionStatement",
															"src": "9243:53:14"
														},
														{
															"nativeSrc": "9305:26:14",
															"nodeType": "YulAssignment",
															"src": "9305:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9317:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9317:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9328:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9328:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9313:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9313:3:14"
																},
																"nativeSrc": "9313:18:14",
																"nodeType": "YulFunctionCall",
																"src": "9313:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9305:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9305:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8990:347:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9141:9:14",
														"nodeType": "YulTypedName",
														"src": "9141:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9155:4:14",
														"nodeType": "YulTypedName",
														"src": "9155:4:14",
														"type": ""
													}
												],
												"src": "8990:347:14"
											},
											{
												"body": {
													"nativeSrc": "9392:162:14",
													"nodeType": "YulBlock",
													"src": "9392:162:14",
													"statements": [
														{
															"nativeSrc": "9402:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9402:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9422:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9422:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9416:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9416:5:14"
																},
																"nativeSrc": "9416:12:14",
																"nodeType": "YulFunctionCall",
																"src": "9416:12:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9406:6:14",
																	"nodeType": "YulTypedName",
																	"src": "9406:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9443:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9443:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9452:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "9452:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9459:4:14",
																				"nodeType": "YulLiteral",
																				"src": "9459:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9448:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9448:3:14"
																		},
																		"nativeSrc": "9448:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9448:16:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9466:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9466:6:14"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "9437:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9437:5:14"
																},
																"nativeSrc": "9437:36:14",
																"nodeType": "YulFunctionCall",
																"src": "9437:36:14"
															},
															"nativeSrc": "9437:36:14",
															"nodeType": "YulExpressionStatement",
															"src": "9437:36:14"
														},
														{
															"nativeSrc": "9482:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9482:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9496:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9496:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9501:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9501:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9492:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9492:3:14"
																},
																"nativeSrc": "9492:16:14",
																"nodeType": "YulFunctionCall",
																"src": "9492:16:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "9486:2:14",
																	"nodeType": "YulTypedName",
																	"src": "9486:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "9524:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "9524:2:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9528:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9528:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9517:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9517:6:14"
																},
																"nativeSrc": "9517:13:14",
																"nodeType": "YulFunctionCall",
																"src": "9517:13:14"
															},
															"nativeSrc": "9517:13:14",
															"nodeType": "YulExpressionStatement",
															"src": "9517:13:14"
														},
														{
															"nativeSrc": "9539:9:14",
															"nodeType": "YulAssignment",
															"src": "9539:9:14",
															"value": {
																"name": "_1",
																"nativeSrc": "9546:2:14",
																"nodeType": "YulIdentifier",
																"src": "9546:2:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9539:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9539:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "9342:212:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9369:5:14",
														"nodeType": "YulTypedName",
														"src": "9369:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9376:3:14",
														"nodeType": "YulTypedName",
														"src": "9376:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9384:3:14",
														"nodeType": "YulTypedName",
														"src": "9384:3:14",
														"type": ""
													}
												],
												"src": "9342:212:14"
											},
											{
												"body": {
													"nativeSrc": "9746:80:14",
													"nodeType": "YulBlock",
													"src": "9746:80:14",
													"statements": [
														{
															"nativeSrc": "9756:64:14",
															"nodeType": "YulAssignment",
															"src": "9756:64:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9781:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9781:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9807:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9807:6:14"
																			},
																			{
																				"name": "pos",
																				"nativeSrc": "9815:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "9815:3:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_string",
																			"nativeSrc": "9789:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "9789:17:14"
																		},
																		"nativeSrc": "9789:30:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9789:30:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "9763:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "9763:17:14"
																},
																"nativeSrc": "9763:57:14",
																"nodeType": "YulFunctionCall",
																"src": "9763:57:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9756:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9756:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "9559:267:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9714:3:14",
														"nodeType": "YulTypedName",
														"src": "9714:3:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9719:6:14",
														"nodeType": "YulTypedName",
														"src": "9719:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9727:6:14",
														"nodeType": "YulTypedName",
														"src": "9727:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9738:3:14",
														"nodeType": "YulTypedName",
														"src": "9738:3:14",
														"type": ""
													}
												],
												"src": "9559:267:14"
											},
											{
												"body": {
													"nativeSrc": "10034:297:14",
													"nodeType": "YulBlock",
													"src": "10034:297:14",
													"statements": [
														{
															"nativeSrc": "10044:29:14",
															"nodeType": "YulVariableDeclaration",
															"src": "10044:29:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10062:3:14",
																				"nodeType": "YulLiteral",
																				"src": "10062:3:14",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10067:1:14",
																				"nodeType": "YulLiteral",
																				"src": "10067:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10058:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10058:3:14"
																		},
																		"nativeSrc": "10058:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10058:11:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10071:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10071:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10054:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10054:3:14"
																},
																"nativeSrc": "10054:19:14",
																"nodeType": "YulFunctionCall",
																"src": "10054:19:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "10048:2:14",
																	"nodeType": "YulTypedName",
																	"src": "10048:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10089:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10089:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10104:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10104:6:14"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10112:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "10112:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10100:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10100:3:14"
																		},
																		"nativeSrc": "10100:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10100:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10082:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10082:6:14"
																},
																"nativeSrc": "10082:34:14",
																"nodeType": "YulFunctionCall",
																"src": "10082:34:14"
															},
															"nativeSrc": "10082:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "10082:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10136:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10136:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10147:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10147:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10132:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10132:3:14"
																		},
																		"nativeSrc": "10132:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10132:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10156:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10156:6:14"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "10164:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "10164:2:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10152:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10152:3:14"
																		},
																		"nativeSrc": "10152:15:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10152:15:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10125:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10125:6:14"
																},
																"nativeSrc": "10125:43:14",
																"nodeType": "YulFunctionCall",
																"src": "10125:43:14"
															},
															"nativeSrc": "10125:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "10125:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10188:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10188:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10199:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10199:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10184:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10184:3:14"
																		},
																		"nativeSrc": "10184:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10184:18:14"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10204:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10204:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10177:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10177:6:14"
																},
																"nativeSrc": "10177:34:14",
																"nodeType": "YulFunctionCall",
																"src": "10177:34:14"
															},
															"nativeSrc": "10177:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "10177:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10231:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10231:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10242:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10242:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10227:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10227:3:14"
																		},
																		"nativeSrc": "10227:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10227:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10247:3:14",
																		"nodeType": "YulLiteral",
																		"src": "10247:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10220:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10220:6:14"
																},
																"nativeSrc": "10220:31:14",
																"nodeType": "YulFunctionCall",
																"src": "10220:31:14"
															},
															"nativeSrc": "10220:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "10220:31:14"
														},
														{
															"nativeSrc": "10260:65:14",
															"nodeType": "YulAssignment",
															"src": "10260:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "10297:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10297:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10309:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10309:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10320:3:14",
																				"nodeType": "YulLiteral",
																				"src": "10320:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10305:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10305:3:14"
																		},
																		"nativeSrc": "10305:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10305:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "10268:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "10268:28:14"
																},
																"nativeSrc": "10268:57:14",
																"nodeType": "YulFunctionCall",
																"src": "10268:57:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10260:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10260:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "9831:500:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9979:9:14",
														"nodeType": "YulTypedName",
														"src": "9979:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9990:6:14",
														"nodeType": "YulTypedName",
														"src": "9990:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9998:6:14",
														"nodeType": "YulTypedName",
														"src": "9998:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10006:6:14",
														"nodeType": "YulTypedName",
														"src": "10006:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10014:6:14",
														"nodeType": "YulTypedName",
														"src": "10014:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10025:4:14",
														"nodeType": "YulTypedName",
														"src": "10025:4:14",
														"type": ""
													}
												],
												"src": "9831:500:14"
											},
											{
												"body": {
													"nativeSrc": "10416:169:14",
													"nodeType": "YulBlock",
													"src": "10416:169:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "10462:16:14",
																"nodeType": "YulBlock",
																"src": "10462:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10471:1:14",
																					"nodeType": "YulLiteral",
																					"src": "10471:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10474:1:14",
																					"nodeType": "YulLiteral",
																					"src": "10474:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10464:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10464:6:14"
																			},
																			"nativeSrc": "10464:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10464:12:14"
																		},
																		"nativeSrc": "10464:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10464:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10437:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "10437:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10446:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10446:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10433:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10433:3:14"
																		},
																		"nativeSrc": "10433:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10433:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10458:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10458:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10429:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10429:3:14"
																},
																"nativeSrc": "10429:32:14",
																"nodeType": "YulFunctionCall",
																"src": "10429:32:14"
															},
															"nativeSrc": "10426:52:14",
															"nodeType": "YulIf",
															"src": "10426:52:14"
														},
														{
															"nativeSrc": "10487:29:14",
															"nodeType": "YulVariableDeclaration",
															"src": "10487:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10506:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10506:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10500:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "10500:5:14"
																},
																"nativeSrc": "10500:16:14",
																"nodeType": "YulFunctionCall",
																"src": "10500:16:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10491:5:14",
																	"nodeType": "YulTypedName",
																	"src": "10491:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10549:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "10549:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "10525:23:14",
																	"nodeType": "YulIdentifier",
																	"src": "10525:23:14"
																},
																"nativeSrc": "10525:30:14",
																"nodeType": "YulFunctionCall",
																"src": "10525:30:14"
															},
															"nativeSrc": "10525:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "10525:30:14"
														},
														{
															"nativeSrc": "10564:15:14",
															"nodeType": "YulAssignment",
															"src": "10564:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "10574:5:14",
																"nodeType": "YulIdentifier",
																"src": "10574:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10564:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10564:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "10336:249:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10382:9:14",
														"nodeType": "YulTypedName",
														"src": "10382:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10393:7:14",
														"nodeType": "YulTypedName",
														"src": "10393:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10405:6:14",
														"nodeType": "YulTypedName",
														"src": "10405:6:14",
														"type": ""
													}
												],
												"src": "10336:249:14"
											},
											{
												"body": {
													"nativeSrc": "10622:95:14",
													"nodeType": "YulBlock",
													"src": "10622:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10639:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10639:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10646:3:14",
																				"nodeType": "YulLiteral",
																				"src": "10646:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10651:10:14",
																				"nodeType": "YulLiteral",
																				"src": "10651:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10642:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10642:3:14"
																		},
																		"nativeSrc": "10642:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10642:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10632:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10632:6:14"
																},
																"nativeSrc": "10632:31:14",
																"nodeType": "YulFunctionCall",
																"src": "10632:31:14"
															},
															"nativeSrc": "10632:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "10632:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10679:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10679:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10682:4:14",
																		"nodeType": "YulLiteral",
																		"src": "10682:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10672:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10672:6:14"
																},
																"nativeSrc": "10672:15:14",
																"nodeType": "YulFunctionCall",
																"src": "10672:15:14"
															},
															"nativeSrc": "10672:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "10672:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10703:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10703:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10706:4:14",
																		"nodeType": "YulLiteral",
																		"src": "10706:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10696:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10696:6:14"
																},
																"nativeSrc": "10696:15:14",
																"nodeType": "YulFunctionCall",
																"src": "10696:15:14"
															},
															"nativeSrc": "10696:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "10696:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10590:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "10590:127:14"
											},
											{
												"body": {
													"nativeSrc": "10851:145:14",
													"nodeType": "YulBlock",
													"src": "10851:145:14",
													"statements": [
														{
															"nativeSrc": "10861:26:14",
															"nodeType": "YulAssignment",
															"src": "10861:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10873:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10873:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10884:2:14",
																		"nodeType": "YulLiteral",
																		"src": "10884:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10869:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10869:3:14"
																},
																"nativeSrc": "10869:18:14",
																"nodeType": "YulFunctionCall",
																"src": "10869:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10861:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10861:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10903:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "10903:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10918:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10918:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10934:3:14",
																								"nodeType": "YulLiteral",
																								"src": "10934:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10939:1:14",
																								"nodeType": "YulLiteral",
																								"src": "10939:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10930:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "10930:3:14"
																						},
																						"nativeSrc": "10930:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "10930:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10943:1:14",
																						"nodeType": "YulLiteral",
																						"src": "10943:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10926:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "10926:3:14"
																				},
																				"nativeSrc": "10926:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10926:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10914:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10914:3:14"
																		},
																		"nativeSrc": "10914:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10914:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10896:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10896:6:14"
																},
																"nativeSrc": "10896:51:14",
																"nodeType": "YulFunctionCall",
																"src": "10896:51:14"
															},
															"nativeSrc": "10896:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "10896:51:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10967:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "10967:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10978:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10978:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10963:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "10963:3:14"
																		},
																		"nativeSrc": "10963:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10963:18:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10983:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10983:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10956:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10956:6:14"
																},
																"nativeSrc": "10956:34:14",
																"nodeType": "YulFunctionCall",
																"src": "10956:34:14"
															},
															"nativeSrc": "10956:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "10956:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10722:274:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10812:9:14",
														"nodeType": "YulTypedName",
														"src": "10812:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10823:6:14",
														"nodeType": "YulTypedName",
														"src": "10823:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10831:6:14",
														"nodeType": "YulTypedName",
														"src": "10831:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10842:4:14",
														"nodeType": "YulTypedName",
														"src": "10842:4:14",
														"type": ""
													}
												],
												"src": "10722:274:14"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_string_memory_ptr(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_string_memory_ptr(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string_memory_ptr(value1, tail_1)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Token ID does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        end := abi_encode_string(value1, abi_encode_string(value0, pos))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string_memory_ptr(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5B031FB2 GT PUSH2 0x93 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x240 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5B031FB2 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x11BA9AAE EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x197 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x131 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x107 PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE4 JUMP JUMPDEST PUSH2 0x253 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0xE2D JUMP JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x113 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x16A CALLDATASIZE PUSH1 0x4 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16F PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0xF3E JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB7 JUMP JUMPDEST PUSH2 0x3C0 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB7 JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST PUSH2 0x1BD PUSH2 0x1B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x46D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP3 SWAP2 SWAP1 PUSH2 0xFF0 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x5F7 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x101D JUMP JUMPDEST PUSH2 0x601 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x113 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x646 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x655 JUMP JUMPDEST PUSH2 0x16F PUSH2 0x228 CALLDATASIZE PUSH1 0x4 PUSH2 0x106F JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0xE3F JUMP JUMPDEST PUSH2 0x677 JUMP JUMPDEST PUSH2 0x107 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x10DA JUMP JUMPDEST PUSH2 0x6E8 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x283 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x29E JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x2B2 SWAP1 PUSH2 0x110B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2DE SWAP1 PUSH2 0x110B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x329 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x300 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x329 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x33D DUP3 PUSH2 0x715 JUMP JUMPDEST POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x29E JUMP JUMPDEST PUSH2 0x365 DUP3 DUP3 CALLER PUSH2 0x74D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x373 DUP5 DUP5 PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE PUSH0 DUP7 DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0x3A2 SWAP1 DUP3 PUSH2 0x1187 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x3B7 SWAP1 DUP3 PUSH2 0x1187 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3FA DUP4 DUP4 CALLER PUSH2 0x7BB JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x448 JUMPI PUSH1 0x40 MLOAD PUSH4 0x64283D7B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x468 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x660 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0x47B PUSH1 0x7 DUP5 PUSH2 0x8AD JUMP JUMPDEST PUSH2 0x4C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E20494420646F6573206E6F74206578697374000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3E5 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SWAP1 DUP3 SWAP1 PUSH2 0x4E6 SWAP1 PUSH2 0x110B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x512 SWAP1 PUSH2 0x110B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x55D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x534 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x55D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x540 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP DUP1 DUP1 SLOAD PUSH2 0x570 SWAP1 PUSH2 0x110B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x59C SWAP1 PUSH2 0x110B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5BE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0x29E DUP3 PUSH2 0x715 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3E5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x2B2 SWAP1 PUSH2 0x110B JUMP JUMPDEST PUSH2 0x365 CALLER DUP4 DUP4 PUSH2 0x8B8 JUMP JUMPDEST PUSH2 0x66B DUP5 DUP5 DUP5 PUSH2 0x3C0 JUMP JUMPDEST PUSH2 0x448 DUP5 DUP5 DUP5 DUP5 PUSH2 0x956 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x682 DUP3 PUSH2 0x715 JUMP JUMPDEST POP PUSH0 PUSH2 0x698 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x6E1 JUMP JUMPDEST DUP1 PUSH2 0x6C0 DUP5 PUSH2 0xA7C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6D1 SWAP3 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x29E JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3E5 JUMP JUMPDEST PUSH2 0x468 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x783 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3E5 JUMP JUMPDEST PUSH0 PUSH2 0x78F DUP4 DUP4 PUSH0 PUSH2 0x7BB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH4 0x39E35637 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3E5 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND ISZERO PUSH2 0x7E7 JUMPI PUSH2 0x7E7 DUP2 DUP5 DUP7 PUSH2 0xC10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x821 JUMPI PUSH2 0x802 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0xB0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH0 NOT ADD SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ISZERO PUSH2 0x84F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP8 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6E1 DUP4 DUP4 PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8EA JUMPI PUSH1 0x40 MLOAD PUSH4 0xB611743 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EXTCODESIZE ISZERO PUSH2 0x448 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x998 SWAP1 CALLER SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1272 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9D2 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9CF SWAP2 DUP2 ADD SWAP1 PUSH2 0x12AE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA39 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x9FF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA04 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH0 SUB PUSH2 0xA31 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3E5 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ PUSH2 0xA75 JUMPI PUSH1 0x40 MLOAD PUSH4 0x32505749 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3E5 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xA88 DUP4 PUSH2 0xC91 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAA7 JUMPI PUSH2 0xAA7 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xAD1 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xADB JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0xB20 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xBE1 JUMPI PUSH0 PUSH2 0xB2F DUP5 PUSH2 0x715 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xB5B JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xB6E JUMPI POP PUSH2 0xB6C DUP2 DUP5 PUSH2 0x6E8 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xB97 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x3E5 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xBDF JUMPI DUP4 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST POP POP PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC1B DUP4 DUP4 DUP4 PUSH2 0xD68 JUMP JUMPDEST PUSH2 0x468 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xC49 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E273289 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x3E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x177E802F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x3E5 JUMP JUMPDEST PUSH0 PUSH2 0x6E1 DUP4 DUP4 PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x6E1 JUMP JUMPDEST PUSH0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xCCF JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xCFB JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xD19 JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xD31 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xD45 JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xD57 JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x29E JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xDC4 JUMPI POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xDA1 JUMPI POP PUSH2 0xDA1 DUP5 DUP5 PUSH2 0x6E8 JUMP JUMPDEST DUP1 PUSH2 0xDC4 JUMPI POP PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xDE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6E1 DUP2 PUSH2 0xDCC JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x6E1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDFF JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE4F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE6C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE82 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xE8B DUP4 PUSH2 0xE56 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0xEC7 JUMPI PUSH2 0xEC7 PUSH2 0xE99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xEEF JUMPI PUSH2 0xEEF PUSH2 0xE99 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0xF07 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF2F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6E1 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0xEAD JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF51 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF5A DUP6 PUSH2 0xE56 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF7D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xF89 DUP9 DUP4 DUP10 ADD PUSH2 0xF20 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xF9E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFAB DUP8 DUP3 DUP9 ADD PUSH2 0xF20 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFD2 DUP5 PUSH2 0xE56 JUMP JUMPDEST SWAP3 POP PUSH2 0xFE0 PUSH1 0x20 DUP6 ADD PUSH2 0xE56 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x1002 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xDFF JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1014 DUP2 DUP6 PUSH2 0xDFF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x102D JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6E1 DUP3 PUSH2 0xE56 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1047 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1050 DUP4 PUSH2 0xE56 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1064 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1082 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x108B DUP6 PUSH2 0xE56 JUMP JUMPDEST SWAP4 POP PUSH2 0x1099 PUSH1 0x20 DUP7 ADD PUSH2 0xE56 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x10CB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFAB DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0xEAD JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10EB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x10F4 DUP4 PUSH2 0xE56 JUMP JUMPDEST SWAP2 POP PUSH2 0x1102 PUSH1 0x20 DUP5 ADD PUSH2 0xE56 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x111F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x113D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x468 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1168 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA75 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1174 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11A1 JUMPI PUSH2 0x11A1 PUSH2 0xE99 JUMP JUMPDEST PUSH2 0x11B5 DUP2 PUSH2 0x11AF DUP5 SLOAD PUSH2 0x110B JUMP JUMPDEST DUP5 PUSH2 0x1143 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x11E8 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x11D1 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x123F JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1216 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x11F7 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1233 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDC4 PUSH2 0x126C DUP4 DUP7 PUSH2 0x1247 JUMP JUMPDEST DUP5 PUSH2 0x1247 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x12A4 SWAP1 DUP4 ADD DUP5 PUSH2 0xDFF JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12BE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6E1 DUP2 PUSH2 0xDCC JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xD9 0x2A SWAP10 PUSH3 0x98D912 EXTCODECOPY SWAP4 PUSH25 0x72B79AF072F53426F6C13F4C4CEB3557CD71C0A8D164736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "215:1594:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:1;;;;;;:::i;:::-;;:::i;:::-;;;565:14:14;;558:22;540:41;;528:2;513:18;1561:300:1;;;;;;;;2365:89;;;:::i;:::-;;;;;;;:::i;3497:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1482:32:14;;;1464:51;;1452:2;1437:18;3497:154:1;1318:203:14;3323:113:1;;;;;;:::i;:::-;;:::i;:::-;;960:360:13;;;;;;:::i;:::-;;:::i;4143:578:1:-;;;;;;:::i;:::-;;:::i;4787:132::-;;;;;;:::i;:::-;;:::i;1368:382:13:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2185:118:1:-;;;;;;:::i;:::-;;:::i;1920:208::-;;;;;;:::i;:::-;;:::i;:::-;;;4730:25:14;;;4718:2;4703:18;1920:208:1;4584:177:14;2518:93:1;;;:::i;3718:144::-;;;;;;:::i;:::-;;:::i;4985:208::-;;;;;;:::i;:::-;;:::i;2677:255::-;;;;;;:::i;:::-;;:::i;3928:153::-;;;;;;:::i;:::-;;:::i;1561:300::-;1663:4;-1:-1:-1;;;;;;1698:40:1;;-1:-1:-1;;;1698:40:1;;:104;;-1:-1:-1;;;;;;;1754:48:1;;-1:-1:-1;;;1754:48:1;1698:104;:156;;;-1:-1:-1;;;;;;;;;;861:40:7;;;1818:36:1;1679:175;1561:300;-1:-1:-1;;1561:300:1:o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;-1:-1:-1;6008:7:1;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:1;3623:21;5938:127;3323:113;3394:35;3403:2;3407:7;735:10:5;3394:8:1;:35::i;:::-;3323:113;;:::o;960:360:13:-;1091:18;1097:2;1101:7;1091:5;:18::i;:::-;1227:41;;;;;;;;;;;;;;;;;;-1:-1:-1;1205:19:13;;;:10;:19;;;;;;;:63;;:19;;:63;;:19;:63;:::i;:::-;-1:-1:-1;1205:63:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;960:360:13:o;4143:578:1:-;-1:-1:-1;;;;;4237:16:1;;4233:87;;4276:33;;-1:-1:-1;;;4276:33:1;;4306:1;4276:33;;;1464:51:14;1437:18;;4276:33:1;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;735:10:5;4562:7:1;:34::i;:::-;4538:58;;4627:4;-1:-1:-1;;;;;4610:21:1;:13;-1:-1:-1;;;;;4610:21:1;;4606:109;;4654:50;;-1:-1:-1;;;4654:50:1;;-1:-1:-1;;;;;8868:15:14;;;4654:50:1;;;8850:34:14;8900:18;;;8893:34;;;8963:15;;8943:18;;;8936:43;8785:18;;4654:50:1;8610:375:14;4606:109:1;4223:498;4143:578;;;:::o;4787:132::-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;1368:382:13:-;1439:24;;1516:30;:12;1538:7;1516:21;:30::i;:::-;1508:66;;;;-1:-1:-1;;;1508:66:13;;9192:2:14;1508:66:13;;;9174:21:14;9231:2;9211:18;;;9204:30;9270:25;9250:18;;;9243:53;9313:18;;1508:66:13;8990:347:14;1508:66:13;1624:19;;;;:10;:19;;;;;1616:78;;1656:37;;;;1624:19;;1616:78;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1368:382;;;:::o;2185:118:1:-;2248:7;2274:22;2288:7;2274:13;:22::i;1920:208::-;1983:7;-1:-1:-1;;;;;2006:19:1;;2002:87;;2048:30;;-1:-1:-1;;;2048:30:1;;2075:1;2048:30;;;1464:51:14;1437:18;;2048:30:1;1318:203:14;2002:87:1;-1:-1:-1;;;;;;2105:16:1;;;;;:9;:16;;;;;;;1920:208::o;2518:93::-;2565:13;2597:7;2590:14;;;;;:::i;3718:144::-;3803:52;735:10:5;3836:8:1;3846;3803:18;:52::i;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;3250:9;;;;;;;;;-1:-1:-1;3250:9:1;;;3174:92;2823:10;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;2677:255;-1:-1:-1;;;2677:255:1:o;3928:153::-;-1:-1:-1;;;;;4039:25:1;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3928:153::o;16138:241::-;16201:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:1;;16263:88;;16309:31;;-1:-1:-1;;;16309:31:1;;;;;4730:25:14;;;4703:18;;16309:31:1;4584:177:14;14418:120:1;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;9955:327::-;-1:-1:-1;;;;;10022:16:1;;10018:87;;10061:33;;-1:-1:-1;;;10061:33:1;;10091:1;10061:33;;;1464:51:14;1437:18;;10061:33:1;1318:203:14;10018:87:1;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;-1:-1:-1;;;;;;10184:27:1;;;10180:96;;10234:31;;-1:-1:-1;;;10234:31:1;;10262:1;10234:31;;;1464:51:14;1437:18;;10234:31:1;1318:203:14;8838:795:1;8924:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:1;;;;9035:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;-1:-1:-1;;;;;9161:18:1;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;-1:-1:-1;;;;;9368:15:1;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9368:20:1;;;9157:256;-1:-1:-1;;;;;9427:16:1;;;9423:107;;-1:-1:-1;;;;;9487:13:1;;;;;;:9;:13;;;;;:18;;9504:1;9487:18;;;9423:107;9540:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9540:21:1;-1:-1:-1;;;;;9540:21:1;;;;;;;;;9577:27;;9540:16;;9577:27;;;;;;;9622:4;8838:795;-1:-1:-1;;;;8838:795:1:o;9813:148:11:-;9897:4;9920:34;9929:3;9949;9920:8;:34::i;15591:312:1:-;-1:-1:-1;;;;;15698:22:1;;15694:91;;15743:31;;-1:-1:-1;;;15743:31:1;;-1:-1:-1;;;;;1482:32:14;;15743:31:1;;;1464:51:14;1437:18;;15743:31:1;1318:203:14;15694:91:1;-1:-1:-1;;;;;15794:25:1;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15794:46:1;;;;;;;;;;15855:41;;540::14;;;15855::1;;513:18:14;15855:41:1;;;;;;;15591:312;;;:::o;16918:782::-;-1:-1:-1;;;;;17034:14:1;;;:18;17030:664;;17072:71;;-1:-1:-1;;;17072:71:1;;-1:-1:-1;;;;;17072:36:1;;;;;:71;;735:10:5;;17123:4:1;;17129:7;;17138:4;;17072:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17072:71:1;;;;;;;;-1:-1:-1;;17072:71:1;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17381:6;:13;17398:1;17381:18;17377:293;;17430:25;;-1:-1:-1;;;17430:25:1;;-1:-1:-1;;;;;1482:32:14;;17430:25:1;;;1464:51:14;1437:18;;17430:25:1;1318:203:14;17377:293:1;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;-1:-1:-1;;;;;;17190:51:1;;-1:-1:-1;;;17190:51:1;17186:130;;17272:25;;-1:-1:-1;;;17272:25:1;;-1:-1:-1;;;;;1482:32:14;;17272:25:1;;;1464:51:14;1437:18;;17272:25:1;1318:203:14;17186:130:1;17144:186;16918:782;;;;:::o;637:698:6:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:6;-1:-1:-1;794:41:6;-1:-1:-1;955:28:6;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:6;-1:-1:-1;;;1175:2:6;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:6;1010:282;1256:21;-1:-1:-1;1312:6:6;637:698;-1:-1:-1;;;637:698:6:o;14720:662:1:-;14880:9;:31;;;-1:-1:-1;;;;;;14893:18:1;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;-1:-1:-1;;;;;;15093:18:1;;;;;;:35;;;15124:4;-1:-1:-1;;;;;15115:13:1;:5;-1:-1:-1;;;;;15115:13:1;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15189:27;;-1:-1:-1;;;15189:27:1;;-1:-1:-1;;;;;1482:32:14;;15189:27:1;;;1464:51:14;1437:18;;15189:27:1;1318:203:14;15089:142:1;15249:9;15245:81;;;15303:7;15299:2;-1:-1:-1;;;;;15283:28:1;15292:5;-1:-1:-1;;;;;15283:28:1;;;;;;;;;;;15245:81;14913:423;14876:460;-1:-1:-1;;15346:24:1;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15346:29:1;-1:-1:-1;;;;;15346:29:1;;;;;;;;;;14720:662::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;-1:-1:-1;;;;;7252:19:1;;7248:186;;7298:31;;-1:-1:-1;;;7298:31:1;;;;;4730:25:14;;;4703:18;;7298:31:1;4584:177:14;7248:186:1;7375:44;;-1:-1:-1;;;7375:44:1;;-1:-1:-1;;;;;10914:32:14;;7375:44:1;;;10896:51:14;10963:18;;;10956:34;;;10869:18;;7375:44:1;10722:274:14;3237:140:11;3324:4;3347:23;:3;3366;6511:4:12;4360:21;;;:14;;;:21;;;;;;:26;;6534:28;4264:129;12214:916:9;12267:7;;-1:-1:-1;;;12342:17:9;;12338:103;;-1:-1:-1;;;12379:17:9;;;-1:-1:-1;12424:2:9;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:9;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:9;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:9;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:9;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:9;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:9:o;6376:272:1:-;6479:4;-1:-1:-1;;;;;6514:21:1;;;;;;:127;;;6561:7;-1:-1:-1;;;;;6552:16:1;:5;-1:-1:-1;;;;;6552:16:1;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:88;;;-1:-1:-1;6008:7:1;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6608:32:1;;;6034:24;;6608:32;6552:88;6495:146;6376:272;-1:-1:-1;;;;6376:272:1:o;14:131:14:-;-1:-1:-1;;;;;;88:32:14;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:300::-;645:3;683:5;677:12;710:6;705:3;698:19;766:6;759:4;752:5;748:16;741:4;736:3;732:14;726:47;818:1;811:4;802:6;797:3;793:16;789:27;782:38;881:4;874:2;870:7;865:2;857:6;853:15;849:29;844:3;840:39;836:50;829:57;;;592:300;;;;:::o;897:231::-;1046:2;1035:9;1028:21;1009:4;1066:56;1118:2;1107:9;1103:18;1095:6;1066:56;:::i;1133:180::-;1192:6;1245:2;1233:9;1224:7;1220:23;1216:32;1213:52;;;1261:1;1258;1251:12;1213:52;-1:-1:-1;1284:23:14;;1133:180;-1:-1:-1;1133:180:14:o;1526:173::-;1594:20;;-1:-1:-1;;;;;1643:31:14;;1633:42;;1623:70;;1689:1;1686;1679:12;1623:70;1526:173;;;:::o;1704:254::-;1772:6;1780;1833:2;1821:9;1812:7;1808:23;1804:32;1801:52;;;1849:1;1846;1839:12;1801:52;1872:29;1891:9;1872:29;:::i;:::-;1862:39;1948:2;1933:18;;;;1920:32;;-1:-1:-1;;;1704:254:14:o;1963:127::-;2024:10;2019:3;2015:20;2012:1;2005:31;2055:4;2052:1;2045:15;2079:4;2076:1;2069:15;2095:632;2160:5;2190:18;2231:2;2223:6;2220:14;2217:40;;;2237:18;;:::i;:::-;2312:2;2306:9;2280:2;2366:15;;-1:-1:-1;;2362:24:14;;;2388:2;2358:33;2354:42;2342:55;;;2412:18;;;2432:22;;;2409:46;2406:72;;;2458:18;;:::i;:::-;2498:10;2494:2;2487:22;2527:6;2518:15;;2557:6;2549;2542:22;2597:3;2588:6;2583:3;2579:16;2576:25;2573:45;;;2614:1;2611;2604:12;2573:45;2664:6;2659:3;2652:4;2644:6;2640:17;2627:44;2719:1;2712:4;2703:6;2695;2691:19;2687:30;2680:41;;;;2095:632;;;;;:::o;2732:222::-;2775:5;2828:3;2821:4;2813:6;2809:17;2805:27;2795:55;;2846:1;2843;2836:12;2795:55;2868:80;2944:3;2935:6;2922:20;2915:4;2907:6;2903:17;2868:80;:::i;2959:686::-;3065:6;3073;3081;3089;3142:3;3130:9;3121:7;3117:23;3113:33;3110:53;;;3159:1;3156;3149:12;3110:53;3182:29;3201:9;3182:29;:::i;:::-;3172:39;;3258:2;3247:9;3243:18;3230:32;3220:42;;3313:2;3302:9;3298:18;3285:32;3336:18;3377:2;3369:6;3366:14;3363:34;;;3393:1;3390;3383:12;3363:34;3416:50;3458:7;3449:6;3438:9;3434:22;3416:50;:::i;:::-;3406:60;;3519:2;3508:9;3504:18;3491:32;3475:48;;3548:2;3538:8;3535:16;3532:36;;;3564:1;3561;3554:12;3532:36;;3587:52;3631:7;3620:8;3609:9;3605:24;3587:52;:::i;:::-;3577:62;;;2959:686;;;;;;;:::o;3650:328::-;3727:6;3735;3743;3796:2;3784:9;3775:7;3771:23;3767:32;3764:52;;;3812:1;3809;3802:12;3764:52;3835:29;3854:9;3835:29;:::i;:::-;3825:39;;3883:38;3917:2;3906:9;3902:18;3883:38;:::i;:::-;3873:48;;3968:2;3957:9;3953:18;3940:32;3930:42;;3650:328;;;;;:::o;3983:405::-;4180:2;4169:9;4162:21;4143:4;4206:56;4258:2;4247:9;4243:18;4235:6;4206:56;:::i;:::-;4310:9;4302:6;4298:22;4293:2;4282:9;4278:18;4271:50;4338:44;4375:6;4367;4338:44;:::i;:::-;4330:52;3983:405;-1:-1:-1;;;;;3983:405:14:o;4393:186::-;4452:6;4505:2;4493:9;4484:7;4480:23;4476:32;4473:52;;;4521:1;4518;4511:12;4473:52;4544:29;4563:9;4544:29;:::i;4766:347::-;4831:6;4839;4892:2;4880:9;4871:7;4867:23;4863:32;4860:52;;;4908:1;4905;4898:12;4860:52;4931:29;4950:9;4931:29;:::i;:::-;4921:39;;5010:2;4999:9;4995:18;4982:32;5057:5;5050:13;5043:21;5036:5;5033:32;5023:60;;5079:1;5076;5069:12;5023:60;5102:5;5092:15;;;4766:347;;;;;:::o;5118:667::-;5213:6;5221;5229;5237;5290:3;5278:9;5269:7;5265:23;5261:33;5258:53;;;5307:1;5304;5297:12;5258:53;5330:29;5349:9;5330:29;:::i;:::-;5320:39;;5378:38;5412:2;5401:9;5397:18;5378:38;:::i;:::-;5368:48;;5463:2;5452:9;5448:18;5435:32;5425:42;;5518:2;5507:9;5503:18;5490:32;5545:18;5537:6;5534:30;5531:50;;;5577:1;5574;5567:12;5531:50;5600:22;;5653:4;5645:13;;5641:27;-1:-1:-1;5631:55:14;;5682:1;5679;5672:12;5631:55;5705:74;5771:7;5766:2;5753:16;5748:2;5744;5740:11;5705:74;:::i;5790:260::-;5858:6;5866;5919:2;5907:9;5898:7;5894:23;5890:32;5887:52;;;5935:1;5932;5925:12;5887:52;5958:29;5977:9;5958:29;:::i;:::-;5948:39;;6006:38;6040:2;6029:9;6025:18;6006:38;:::i;:::-;5996:48;;5790:260;;;;;:::o;6055:380::-;6134:1;6130:12;;;;6177;;;6198:61;;6252:4;6244:6;6240:17;6230:27;;6198:61;6305:2;6297:6;6294:14;6274:18;6271:38;6268:161;;6351:10;6346:3;6342:20;6339:1;6332:31;6386:4;6383:1;6376:15;6414:4;6411:1;6404:15;6268:161;;6055:380;;;:::o;6566:518::-;6668:2;6663:3;6660:11;6657:421;;;6704:5;6701:1;6694:16;6748:4;6745:1;6735:18;6818:2;6806:10;6802:19;6799:1;6795:27;6789:4;6785:38;6854:4;6842:10;6839:20;6836:47;;;-1:-1:-1;6877:4:14;6836:47;6932:2;6927:3;6923:12;6920:1;6916:20;6910:4;6906:31;6896:41;;6987:81;7005:2;6998:5;6995:13;6987:81;;;7064:1;7050:16;;7031:1;7020:13;6987:81;;7260:1345;7386:3;7380:10;7413:18;7405:6;7402:30;7399:56;;;7435:18;;:::i;:::-;7464:97;7554:6;7514:38;7546:4;7540:11;7514:38;:::i;:::-;7508:4;7464:97;:::i;:::-;7616:4;;7673:2;7662:14;;7690:1;7685:663;;;;8392:1;8409:6;8406:89;;;-1:-1:-1;8461:19:14;;;8455:26;8406:89;-1:-1:-1;;7217:1:14;7213:11;;;7209:24;7205:29;7195:40;7241:1;7237:11;;;7192:57;8508:81;;7655:944;;7685:663;6513:1;6506:14;;;6550:4;6537:18;;-1:-1:-1;;7721:20:14;;;7839:236;7853:7;7850:1;7847:14;7839:236;;;7942:19;;;7936:26;7921:42;;8034:27;;;;8002:1;7990:14;;;;7869:19;;7839:236;;;7843:3;8103:6;8094:7;8091:19;8088:201;;;8164:19;;;8158:26;-1:-1:-1;;8247:1:14;8243:14;;;8259:3;8239:24;8235:37;8231:42;8216:58;8201:74;;8088:201;;;8335:1;8326:6;8323:1;8319:14;8315:22;8309:4;8302:36;7655:944;;;;;7260:1345;;:::o;9342:212::-;9384:3;9422:5;9416:12;9466:6;9459:4;9452:5;9448:16;9443:3;9437:36;9528:1;9492:16;;9517:13;;;-1:-1:-1;9492:16:14;;9342:212;-1:-1:-1;9342:212:14:o;9559:267::-;9738:3;9763:57;9789:30;9815:3;9807:6;9789:30;:::i;:::-;9781:6;9763:57;:::i;9831:500::-;-1:-1:-1;;;;;10100:15:14;;;10082:34;;10152:15;;10147:2;10132:18;;10125:43;10199:2;10184:18;;10177:34;;;10247:3;10242:2;10227:18;;10220:31;;;10025:4;;10268:57;;10305:19;;10297:6;10268:57;:::i;:::-;10260:65;9831:500;-1:-1:-1;;;;;;9831:500:14:o;10336:249::-;10405:6;10458:2;10446:9;10437:7;10433:23;10429:32;10426:52;;;10474:1;10471;10464:12;10426:52;10506:9;10500:16;10525:30;10549:5;10525:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "972600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "31464",
								"balanceOf(address)": "2652",
								"getApproved(uint256)": "infinite",
								"getEVTOLOwnerMetadata(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mintEVTOLOwner(address,uint256,string,string)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26678",
								"supportsInterface(bytes4)": "531",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1809,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 215,
									"end": 1809,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 215,
									"end": 1809,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 873,
									"end": 914,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 873,
									"end": 914,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 873,
									"end": 914,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 873,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 873,
									"end": 914,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 873,
									"end": 914,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 873,
									"end": 914,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 873,
									"end": 914,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 873,
									"end": 914,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 873,
									"end": 914,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 873,
									"end": 914,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "19559513D3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "DA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "11559513D3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "DA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 215,
									"end": 1809,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 215,
									"end": 1809,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 14,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 14,
									"value": "18"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 14,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "tag",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 795,
									"end": 800,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 792,
									"end": 793,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 785,
									"end": 801,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 839,
									"end": 843,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 836,
									"end": 837,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 826,
									"end": 844,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 909,
									"end": 911,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 897,
									"end": 907,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 893,
									"end": 912,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 890,
									"end": 891,
									"name": "PUSH",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 886,
									"end": 913,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 880,
									"end": 884,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 876,
									"end": 914,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 945,
									"end": 949,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 933,
									"end": 943,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 930,
									"end": 950,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 927,
									"end": 974,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 927,
									"end": 974,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 968,
									"end": 972,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 927,
									"end": 974,
									"name": "tag",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 927,
									"end": 974,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1023,
									"end": 1025,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 1018,
									"end": 1021,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1014,
									"end": 1026,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1011,
									"end": 1012,
									"name": "PUSH",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 1007,
									"end": 1027,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 1001,
									"end": 1005,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 997,
									"end": 1028,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 987,
									"end": 1028,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1096,
									"end": 1098,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1089,
									"end": 1094,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1086,
									"end": 1099,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1141,
									"end": 1157,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1122,
									"end": 1123,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1111,
									"end": 1124,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "tag",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 1078,
									"end": 1159,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1082,
									"end": 1085,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "tag",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 748,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 657,
									"end": 1175,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 657,
									"end": 1175,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 14,
									"value": "6"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1471,
									"end": 1481,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1493,
									"end": 1523,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 1490,
									"end": 1546,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "10"
								},
								{
									"begin": 1526,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "tag",
									"source": 14,
									"value": "30"
								},
								{
									"begin": 1526,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 1645,
									"end": 1651,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 1637,
									"end": 1641,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1631,
									"end": 1642,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "11"
								},
								{
									"begin": 1605,
									"end": 1643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "tag",
									"source": 14,
									"value": "32"
								},
								{
									"begin": 1605,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1599,
									"end": 1603,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "13"
								},
								{
									"begin": 1555,
									"end": 1652,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "tag",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 1555,
									"end": 1652,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1707,
									"end": 1711,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1764,
									"end": 1766,
									"name": "PUSH",
									"source": 14,
									"value": "1F"
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 1753,
									"end": 1767,
									"name": "GT",
									"source": 14
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2500,
									"end": 2506,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 2552,
									"end": 2571,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2546,
									"end": 2572,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "tag",
									"source": 14,
									"value": "35"
								},
								{
									"begin": 2497,
									"end": 2586,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1308,
									"end": 1309,
									"name": "PUSH",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 1300,
									"end": 1324,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 1296,
									"end": 1325,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 1286,
									"end": 1326,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1332,
									"end": 1333,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1328,
									"end": 1339,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 1283,
									"end": 1340,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2599,
									"end": 2680,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "tag",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 1776,
									"end": 2439,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1812,
									"end": 1832,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1944,
									"end": 1951,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1941,
									"end": 1942,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1938,
									"end": 1952,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "DUP7",
									"source": 14
								},
								{
									"begin": 2033,
									"end": 2052,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2027,
									"end": 2053,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2012,
									"end": 2054,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2125,
									"end": 2152,
									"name": "SWAP5",
									"source": 14
								},
								{
									"begin": 2093,
									"end": 2094,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2081,
									"end": 2095,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 1960,
									"end": 1979,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1930,
									"end": 2166,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1934,
									"end": 1937,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2194,
									"end": 2200,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2185,
									"end": 2192,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 2182,
									"end": 2201,
									"name": "LT",
									"source": 14
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP8",
									"source": 14
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2255,
									"end": 2274,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2249,
									"end": 2275,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2338,
									"end": 2339,
									"name": "PUSH",
									"source": 14,
									"value": "3"
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "DUP9",
									"source": 14
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 2334,
									"end": 2348,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 2350,
									"end": 2353,
									"name": "PUSH",
									"source": 14,
									"value": "F8"
								},
								{
									"begin": 2330,
									"end": 2354,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2326,
									"end": 2363,
									"name": "SHR",
									"source": 14
								},
								{
									"begin": 2322,
									"end": 2364,
									"name": "NOT",
									"source": 14
								},
								{
									"begin": 2307,
									"end": 2365,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 2292,
									"end": 2366,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "tag",
									"source": 14,
									"value": "41"
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2179,
									"end": 2380,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 2426,
									"end": 2427,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 2414,
									"end": 2415,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 2410,
									"end": 2424,
									"name": "SHL",
									"source": 14
								},
								{
									"begin": 2406,
									"end": 2428,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 2393,
									"end": 2429,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "tag",
									"source": 14,
									"value": "33"
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1746,
									"end": 2690,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1351,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "tag",
									"source": 14,
									"value": "15"
								},
								{
									"begin": 1351,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 215,
									"end": 1809,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1809,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1809,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1809,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1809,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 215,
									"end": 1809,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1809,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a8d92a996298d9123c937872b79af072f53426f6c13f4c4ceb3557cd71c0a8d164736f6c63430008190033",
									".code": [
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "5B031FB2"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "A22CB465"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "A22CB465"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "B88D4FDE"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "C87B56DD"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "E985E9C5"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "5B031FB2"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "6352211E"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "95D89B41"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "95EA7B3"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "95EA7B3"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "11BA9AAE"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "23B872DD"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "42842E0E"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A7"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "6FDDE03"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "81812FC"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 215,
											"end": 1809,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1452,
											"end": 1454,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 960,
											"end": 1320,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 960,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 960,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 960,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 960,
											"end": 1320,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 960,
											"end": 1320,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 960,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 960,
											"end": 1320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 960,
											"end": 1320,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 960,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 960,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 960,
											"end": 1320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 1368,
											"end": 1750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1368,
											"end": 1750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1368,
											"end": 1750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4718,
											"end": 4720,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4584,
											"end": 4761,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 861,
											"end": 901,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 960,
											"end": 1320,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 960,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 1097,
											"end": 1099,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1101,
											"end": 1108,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1096,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 1091,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1109,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 1091,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1268,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1227,
											"end": 1268,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1268,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1268,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1268,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1268,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1268,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1268,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1268,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1268,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1268,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1268,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1227,
											"end": 1268,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1268,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1268,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1268,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1268,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1268,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1215,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1224,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 1205,
											"end": 1268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 1205,
											"end": 1268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 1205,
											"end": 1268,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 960,
											"end": 1320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64283D7B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8868,
											"end": 8883,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8868,
											"end": 8883,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8868,
											"end": 8883,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 8884,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8900,
											"end": 8918,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 8900,
											"end": 8918,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8900,
											"end": 8918,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8893,
											"end": 8927,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8893,
											"end": 8927,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8893,
											"end": 8927,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8963,
											"end": 8978,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8963,
											"end": 8978,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8943,
											"end": 8961,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 8943,
											"end": 8961,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8943,
											"end": 8961,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8936,
											"end": 8979,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8785,
											"end": 8803,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 8785,
											"end": 8803,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 8610,
											"end": 8985,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1439,
											"end": 1463,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1439,
											"end": 1463,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1516,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 1516,
											"end": 1528,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 1538,
											"end": 1545,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1516,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 1516,
											"end": 1546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1516,
											"end": 1546,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 1516,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1508,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 1508,
											"end": 1574,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1508,
											"end": 1574,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1508,
											"end": 1574,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1508,
											"end": 1574,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1508,
											"end": 1574,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9192,
											"end": 9194,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1508,
											"end": 1574,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1508,
											"end": 1574,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1508,
											"end": 1574,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9174,
											"end": 9195,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9231,
											"end": 9233,
											"name": "PUSH",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 9211,
											"end": 9229,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9211,
											"end": 9229,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9211,
											"end": 9229,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9204,
											"end": 9234,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9270,
											"end": 9295,
											"name": "PUSH",
											"source": 14,
											"value": "546F6B656E20494420646F6573206E6F74206578697374000000000000000000"
										},
										{
											"begin": 9250,
											"end": 9268,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 9250,
											"end": 9268,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9250,
											"end": 9268,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9243,
											"end": 9296,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9313,
											"end": 9331,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 9313,
											"end": 9331,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1508,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 8990,
											"end": 9337,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1508,
											"end": 1574,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 1508,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1624,
											"end": 1634,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1656,
											"end": 1693,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1656,
											"end": 1693,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1656,
											"end": 1693,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1656,
											"end": 1693,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1624,
											"end": 1643,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 1616,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 1616,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 1616,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 1616,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1368,
											"end": 1750,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1368,
											"end": 1750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22718AD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2754,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2780,
											"end": 2787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2766,
											"end": 2788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3174,
											"end": 3266,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2823,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2799,
											"end": 2833,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2875,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2892,
											"end": 2899,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 2901,
											"end": 2919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2878,
											"end": 2920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2850,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2925,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2932,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2677,
											"end": 2932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4584,
											"end": 4761,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 9955,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10022,
											"end": 10038,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10091,
											"end": 10092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10061,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10018,
											"end": 10105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 10146,
											"end": 10148,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10150,
											"end": 10157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10167,
											"end": 10168,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 10138,
											"end": 10170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 10138,
											"end": 10170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10114,
											"end": 10170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10211,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 10180,
											"end": 10276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39E35637"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10234,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9961,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 9813,
											"end": 9961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9897,
											"end": 9901,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 9954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 9929,
											"end": 9932,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9949,
											"end": 9952,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9920,
											"end": 9928,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 9920,
											"end": 9954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B611743"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 1,
											"value": "150B7A02"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32505749"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 693,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 742,
											"end": 756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 770,
											"end": 775,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 759,
											"end": 769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 759,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 759,
											"end": 776,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 759,
											"end": 776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 759,
											"end": 780,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 742,
											"end": 780,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 742,
											"end": 780,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 794,
											"end": 814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 817,
											"end": 835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 817,
											"end": 835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 835,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 817,
											"end": 835,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 835,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 955,
											"end": 983,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 971,
											"end": 973,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 955,
											"end": 983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1175,
											"end": 1177,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1164,
											"end": 1178,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 1159,
											"end": 1191,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 1041,
											"end": 1046,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1192,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1227,
											"end": 1238,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1010,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1312,
											"end": 1318,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 637,
											"end": 1335,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 637,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9FBF51F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1482,
											"end": 1514,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1464,
											"end": 1515,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 1437,
											"end": 1455,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1318,
											"end": 1521,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7E273289"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4730,
											"end": 4755,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 4703,
											"end": 4721,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 4584,
											"end": 4761,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "177E802F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10914,
											"end": 10946,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10914,
											"end": 10946,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10896,
											"end": 10947,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10963,
											"end": 10981,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 10963,
											"end": 10981,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10963,
											"end": 10981,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10956,
											"end": 10990,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10956,
											"end": 10990,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10956,
											"end": 10990,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10869,
											"end": 10887,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 10869,
											"end": 10887,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10722,
											"end": 10996,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3237,
											"end": 3377,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 3237,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3324,
											"end": 3328,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3347,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 3347,
											"end": 3350,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3366,
											"end": 3369,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6511,
											"end": 6515,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4360,
											"end": 4381,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4360,
											"end": 4386,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 4264,
											"end": 4393,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12267,
											"end": 12274,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12342,
											"end": 12359,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12396,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12424,
											"end": 12426,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12414,
											"end": 12426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 12338,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12467,
											"end": 12475,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12458,
											"end": 12463,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12458,
											"end": 12475,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12504,
											"end": 12512,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12495,
											"end": 12512,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12530,
											"end": 12542,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 12454,
											"end": 12557,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12583,
											"end": 12591,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12574,
											"end": 12579,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12620,
											"end": 12628,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12611,
											"end": 12628,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12656,
											"end": 12658,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 12646,
											"end": 12658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 12570,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12699,
											"end": 12706,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 12690,
											"end": 12695,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12690,
											"end": 12706,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12735,
											"end": 12742,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12726,
											"end": 12742,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12770,
											"end": 12771,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 12760,
											"end": 12771,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 12686,
											"end": 12786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12812,
											"end": 12819,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 12803,
											"end": 12808,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12803,
											"end": 12819,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12848,
											"end": 12855,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12839,
											"end": 12855,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12883,
											"end": 12884,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 12873,
											"end": 12884,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 12799,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12925,
											"end": 12932,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12916,
											"end": 12921,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12916,
											"end": 12932,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12996,
											"end": 12997,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 12986,
											"end": 12997,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 12912,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13038,
											"end": 13045,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 13029,
											"end": 13034,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13029,
											"end": 13045,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 13025,
											"end": 13091,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 13075,
											"end": 13076,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 13065,
											"end": 13076,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13117,
											"end": 13123,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 12214,
											"end": 13130,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12214,
											"end": 13130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 68,
											"end": 139,
											"name": "tag",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14,
											"end": 145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 335,
											"end": 365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 592,
											"end": 892,
											"name": "tag",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 592,
											"end": 892,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 645,
											"end": 648,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 688,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 677,
											"end": 689,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 710,
											"end": 716,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 705,
											"end": 708,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 698,
											"end": 717,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 766,
											"end": 772,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 759,
											"end": 763,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 757,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 748,
											"end": 764,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 741,
											"end": 745,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 739,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 732,
											"end": 746,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 726,
											"end": 773,
											"name": "MCOPY",
											"source": 14
										},
										{
											"begin": 818,
											"end": 819,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 811,
											"end": 815,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 802,
											"end": 808,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 797,
											"end": 800,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 793,
											"end": 809,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 789,
											"end": 816,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 782,
											"end": 820,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 881,
											"end": 885,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 870,
											"end": 877,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 857,
											"end": 863,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 853,
											"end": 868,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 849,
											"end": 878,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 840,
											"end": 879,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 836,
											"end": 886,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 829,
											"end": 886,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 829,
											"end": 886,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 829,
											"end": 886,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 592,
											"end": 892,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 592,
											"end": 892,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 592,
											"end": 892,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 592,
											"end": 892,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 592,
											"end": 892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 897,
											"end": 1128,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 897,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1046,
											"end": 1048,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1028,
											"end": 1049,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1009,
											"end": 1013,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 1118,
											"end": 1120,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1103,
											"end": 1121,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1066,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 1066,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1133,
											"end": 1313,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 1133,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1192,
											"end": 1198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1247,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1242,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1224,
											"end": 1231,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1220,
											"end": 1243,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1216,
											"end": 1248,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1261,
											"end": 1262,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1258,
											"end": 1259,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1251,
											"end": 1263,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 1213,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1284,
											"end": 1307,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1284,
											"end": 1307,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1133,
											"end": 1313,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1133,
											"end": 1313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "tag",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1594,
											"end": 1614,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1594,
											"end": 1614,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1643,
											"end": 1674,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1643,
											"end": 1674,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1633,
											"end": 1675,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1633,
											"end": 1675,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1689,
											"end": 1690,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1679,
											"end": 1691,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 1623,
											"end": 1693,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1526,
											"end": 1699,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1526,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1704,
											"end": 1958,
											"name": "tag",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 1704,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1772,
											"end": 1778,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1786,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1833,
											"end": 1835,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1821,
											"end": 1830,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1812,
											"end": 1819,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1808,
											"end": 1831,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1804,
											"end": 1836,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1849,
											"end": 1850,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1847,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1839,
											"end": 1851,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "tag",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 1801,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 1891,
											"end": 1900,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 1872,
											"end": 1901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 1872,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1862,
											"end": 1901,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1948,
											"end": 1950,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 1933,
											"end": 1951,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1920,
											"end": 1952,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1920,
											"end": 1952,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1704,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1963,
											"end": 2090,
											"name": "tag",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 1963,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2024,
											"end": 2034,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 2019,
											"end": 2022,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 2015,
											"end": 2035,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 2012,
											"end": 2013,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2036,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2055,
											"end": 2059,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 2052,
											"end": 2053,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 2045,
											"end": 2060,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2079,
											"end": 2083,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 2076,
											"end": 2077,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2069,
											"end": 2084,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2095,
											"end": 2727,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 2095,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2160,
											"end": 2165,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2190,
											"end": 2208,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2231,
											"end": 2233,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2223,
											"end": 2229,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2220,
											"end": 2234,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2217,
											"end": 2257,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2217,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 2217,
											"end": 2257,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2237,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 2237,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 2237,
											"end": 2255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2237,
											"end": 2255,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 2237,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2306,
											"end": 2315,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2280,
											"end": 2282,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2366,
											"end": 2381,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2366,
											"end": 2381,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2362,
											"end": 2386,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2362,
											"end": 2386,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2362,
											"end": 2386,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2388,
											"end": 2390,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 2358,
											"end": 2391,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2354,
											"end": 2396,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2342,
											"end": 2397,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2342,
											"end": 2397,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2342,
											"end": 2397,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2412,
											"end": 2430,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2412,
											"end": 2430,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2412,
											"end": 2430,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2432,
											"end": 2454,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2432,
											"end": 2454,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2432,
											"end": 2454,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2409,
											"end": 2455,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 2406,
											"end": 2478,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2406,
											"end": 2478,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 2406,
											"end": 2478,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 2458,
											"end": 2476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2508,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2494,
											"end": 2496,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2487,
											"end": 2509,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2527,
											"end": 2533,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2518,
											"end": 2533,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2518,
											"end": 2533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2557,
											"end": 2563,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2549,
											"end": 2555,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2542,
											"end": 2564,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2597,
											"end": 2600,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2594,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2583,
											"end": 2586,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2579,
											"end": 2595,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2576,
											"end": 2601,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2614,
											"end": 2615,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2611,
											"end": 2612,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2604,
											"end": 2616,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 2573,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2664,
											"end": 2670,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2659,
											"end": 2662,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2652,
											"end": 2656,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2644,
											"end": 2650,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2640,
											"end": 2657,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2627,
											"end": 2671,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 2719,
											"end": 2720,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2716,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2695,
											"end": 2701,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2691,
											"end": 2710,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2687,
											"end": 2717,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2680,
											"end": 2721,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2680,
											"end": 2721,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2680,
											"end": 2721,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2680,
											"end": 2721,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2095,
											"end": 2727,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2095,
											"end": 2727,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2095,
											"end": 2727,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2095,
											"end": 2727,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2095,
											"end": 2727,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2095,
											"end": 2727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2732,
											"end": 2954,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 2732,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2775,
											"end": 2780,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2828,
											"end": 2831,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2821,
											"end": 2825,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 2813,
											"end": 2819,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2809,
											"end": 2826,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2805,
											"end": 2832,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2795,
											"end": 2850,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 2795,
											"end": 2850,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2846,
											"end": 2847,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2836,
											"end": 2848,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2795,
											"end": 2850,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 2795,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 2944,
											"end": 2947,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2935,
											"end": 2941,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2922,
											"end": 2942,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2915,
											"end": 2919,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2913,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2903,
											"end": 2920,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2868,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 2868,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2959,
											"end": 3645,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 2959,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3065,
											"end": 3071,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3073,
											"end": 3079,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3081,
											"end": 3087,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3095,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3142,
											"end": 3145,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 3130,
											"end": 3139,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3121,
											"end": 3128,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3117,
											"end": 3140,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3113,
											"end": 3146,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3110,
											"end": 3163,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3110,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 3110,
											"end": 3163,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3159,
											"end": 3160,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3156,
											"end": 3157,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3149,
											"end": 3161,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3110,
											"end": 3163,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 3110,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 3201,
											"end": 3210,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 3182,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3182,
											"end": 3211,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 3182,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3172,
											"end": 3211,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3172,
											"end": 3211,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3258,
											"end": 3260,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3247,
											"end": 3256,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3230,
											"end": 3262,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3220,
											"end": 3262,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3220,
											"end": 3262,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3313,
											"end": 3315,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3311,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3298,
											"end": 3316,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3285,
											"end": 3317,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3336,
											"end": 3354,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3377,
											"end": 3379,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3369,
											"end": 3375,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3366,
											"end": 3380,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3363,
											"end": 3397,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3363,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 3363,
											"end": 3397,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3393,
											"end": 3394,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3391,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3383,
											"end": 3395,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3363,
											"end": 3397,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 3363,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3416,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 3458,
											"end": 3465,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3449,
											"end": 3455,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 3434,
											"end": 3456,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3416,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 3416,
											"end": 3466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3416,
											"end": 3466,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 3416,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3406,
											"end": 3466,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3406,
											"end": 3466,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3519,
											"end": 3521,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3508,
											"end": 3517,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3504,
											"end": 3522,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3491,
											"end": 3523,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3475,
											"end": 3523,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3475,
											"end": 3523,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3548,
											"end": 3550,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3538,
											"end": 3546,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3535,
											"end": 3551,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3532,
											"end": 3568,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3532,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 3532,
											"end": 3568,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3564,
											"end": 3565,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3561,
											"end": 3562,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3554,
											"end": 3566,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3532,
											"end": 3568,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 3532,
											"end": 3568,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3532,
											"end": 3568,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3587,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3620,
											"end": 3628,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3609,
											"end": 3618,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3605,
											"end": 3629,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3587,
											"end": 3639,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 3587,
											"end": 3639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3587,
											"end": 3639,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 3587,
											"end": 3639,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3577,
											"end": 3639,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3577,
											"end": 3639,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3577,
											"end": 3639,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2959,
											"end": 3645,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2959,
											"end": 3645,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2959,
											"end": 3645,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2959,
											"end": 3645,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2959,
											"end": 3645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2959,
											"end": 3645,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2959,
											"end": 3645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2959,
											"end": 3645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3650,
											"end": 3978,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 3650,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3727,
											"end": 3733,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3741,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3743,
											"end": 3749,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3798,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3784,
											"end": 3793,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3775,
											"end": 3782,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 3771,
											"end": 3794,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3767,
											"end": 3799,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3764,
											"end": 3816,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3764,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 3764,
											"end": 3816,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3812,
											"end": 3813,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3810,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3802,
											"end": 3814,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3764,
											"end": 3816,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 3764,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3835,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 3854,
											"end": 3863,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3835,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 3835,
											"end": 3864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3835,
											"end": 3864,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 3835,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3825,
											"end": 3864,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3825,
											"end": 3864,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3883,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 3917,
											"end": 3919,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3906,
											"end": 3915,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3883,
											"end": 3921,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 3883,
											"end": 3921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3883,
											"end": 3921,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 3883,
											"end": 3921,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3873,
											"end": 3921,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3873,
											"end": 3921,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3968,
											"end": 3970,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 3966,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3940,
											"end": 3972,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3930,
											"end": 3972,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3650,
											"end": 3978,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3650,
											"end": 3978,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3650,
											"end": 3978,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3650,
											"end": 3978,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3650,
											"end": 3978,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3650,
											"end": 3978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3983,
											"end": 4388,
											"name": "tag",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 3983,
											"end": 4388,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4180,
											"end": 4182,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4169,
											"end": 4178,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4162,
											"end": 4183,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4143,
											"end": 4147,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4206,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 4258,
											"end": 4260,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4247,
											"end": 4256,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4243,
											"end": 4261,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4235,
											"end": 4241,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4206,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 4206,
											"end": 4262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4206,
											"end": 4262,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 4206,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4310,
											"end": 4319,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4302,
											"end": 4308,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4298,
											"end": 4320,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4293,
											"end": 4295,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4291,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4278,
											"end": 4296,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4271,
											"end": 4321,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4367,
											"end": 4373,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 4338,
											"end": 4382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4338,
											"end": 4382,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 4338,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4330,
											"end": 4382,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 3983,
											"end": 4388,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3983,
											"end": 4388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4393,
											"end": 4579,
											"name": "tag",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 4393,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4452,
											"end": 4458,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4505,
											"end": 4507,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4493,
											"end": 4502,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4484,
											"end": 4491,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4480,
											"end": 4503,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4476,
											"end": 4508,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4473,
											"end": 4525,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4473,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 4473,
											"end": 4525,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4521,
											"end": 4522,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4518,
											"end": 4519,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4511,
											"end": 4523,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4473,
											"end": 4525,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 4473,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4544,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 4563,
											"end": 4572,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4544,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 4544,
											"end": 4573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4766,
											"end": 5113,
											"name": "tag",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 4766,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4831,
											"end": 4837,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4839,
											"end": 4845,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4892,
											"end": 4894,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4880,
											"end": 4889,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4871,
											"end": 4878,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4867,
											"end": 4890,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4863,
											"end": 4895,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4860,
											"end": 4912,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4860,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 4860,
											"end": 4912,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4908,
											"end": 4909,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4905,
											"end": 4906,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4898,
											"end": 4910,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4860,
											"end": 4912,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 4860,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4931,
											"end": 4960,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 4950,
											"end": 4959,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4931,
											"end": 4960,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 4931,
											"end": 4960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4931,
											"end": 4960,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 4931,
											"end": 4960,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4921,
											"end": 4960,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4921,
											"end": 4960,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5010,
											"end": 5012,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4999,
											"end": 5008,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4995,
											"end": 5013,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4982,
											"end": 5014,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5057,
											"end": 5062,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5050,
											"end": 5063,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5043,
											"end": 5064,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5036,
											"end": 5041,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5033,
											"end": 5065,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 5023,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 5023,
											"end": 5083,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5079,
											"end": 5080,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5077,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5069,
											"end": 5081,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5023,
											"end": 5083,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 5023,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5102,
											"end": 5107,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5092,
											"end": 5107,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5092,
											"end": 5107,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5092,
											"end": 5107,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4766,
											"end": 5113,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4766,
											"end": 5113,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4766,
											"end": 5113,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4766,
											"end": 5113,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4766,
											"end": 5113,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4766,
											"end": 5113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5118,
											"end": 5785,
											"name": "tag",
											"source": 14,
											"value": "76"
										},
										{
											"begin": 5118,
											"end": 5785,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5213,
											"end": 5219,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5221,
											"end": 5227,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5229,
											"end": 5235,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5237,
											"end": 5243,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5290,
											"end": 5293,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 5278,
											"end": 5287,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5269,
											"end": 5276,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5265,
											"end": 5288,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5261,
											"end": 5294,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5258,
											"end": 5311,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5258,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 5258,
											"end": 5311,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5307,
											"end": 5308,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5304,
											"end": 5305,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5297,
											"end": 5309,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5258,
											"end": 5311,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 5258,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5330,
											"end": 5359,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 5349,
											"end": 5358,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5330,
											"end": 5359,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 5330,
											"end": 5359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5330,
											"end": 5359,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 5330,
											"end": 5359,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5320,
											"end": 5359,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5320,
											"end": 5359,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 5412,
											"end": 5414,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5401,
											"end": 5410,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 5378,
											"end": 5416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 5378,
											"end": 5416,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5368,
											"end": 5416,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5368,
											"end": 5416,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5463,
											"end": 5465,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5452,
											"end": 5461,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5448,
											"end": 5466,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5435,
											"end": 5467,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5425,
											"end": 5467,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5425,
											"end": 5467,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5518,
											"end": 5520,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 5507,
											"end": 5516,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5503,
											"end": 5521,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5490,
											"end": 5522,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5545,
											"end": 5563,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5537,
											"end": 5543,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5534,
											"end": 5564,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5531,
											"end": 5581,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5531,
											"end": 5581,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 5531,
											"end": 5581,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5577,
											"end": 5578,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5574,
											"end": 5575,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5567,
											"end": 5579,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5531,
											"end": 5581,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 5531,
											"end": 5581,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5600,
											"end": 5622,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5600,
											"end": 5622,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5653,
											"end": 5657,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 5645,
											"end": 5658,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5645,
											"end": 5658,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5641,
											"end": 5668,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 5631,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 5631,
											"end": 5686,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5682,
											"end": 5683,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5679,
											"end": 5680,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5672,
											"end": 5684,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5631,
											"end": 5686,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 5631,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5705,
											"end": 5779,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 5771,
											"end": 5778,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5766,
											"end": 5768,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5753,
											"end": 5769,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5748,
											"end": 5750,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5744,
											"end": 5746,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5740,
											"end": 5751,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5705,
											"end": 5779,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 5705,
											"end": 5779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5790,
											"end": 6050,
											"name": "tag",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 5790,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5858,
											"end": 5864,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5866,
											"end": 5872,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5919,
											"end": 5921,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5907,
											"end": 5916,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5898,
											"end": 5905,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5894,
											"end": 5917,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5890,
											"end": 5922,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5887,
											"end": 5939,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5887,
											"end": 5939,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 5887,
											"end": 5939,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5935,
											"end": 5936,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5932,
											"end": 5933,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5925,
											"end": 5937,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5887,
											"end": 5939,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 5887,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5958,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 5977,
											"end": 5986,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5958,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 5958,
											"end": 5987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5958,
											"end": 5987,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 5958,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5948,
											"end": 5987,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5948,
											"end": 5987,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6006,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 6040,
											"end": 6042,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6029,
											"end": 6038,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6025,
											"end": 6043,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6006,
											"end": 6044,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 6006,
											"end": 6044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6006,
											"end": 6044,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 6006,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5996,
											"end": 6044,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5996,
											"end": 6044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5790,
											"end": 6050,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5790,
											"end": 6050,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5790,
											"end": 6050,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5790,
											"end": 6050,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5790,
											"end": 6050,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5790,
											"end": 6050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6055,
											"end": 6435,
											"name": "tag",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 6055,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6134,
											"end": 6135,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 6130,
											"end": 6142,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6130,
											"end": 6142,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6130,
											"end": 6142,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6130,
											"end": 6142,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6177,
											"end": 6189,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6177,
											"end": 6189,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6177,
											"end": 6189,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6198,
											"end": 6259,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 6198,
											"end": 6259,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6252,
											"end": 6256,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 6244,
											"end": 6250,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6240,
											"end": 6257,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6230,
											"end": 6257,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6230,
											"end": 6257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6198,
											"end": 6259,
											"name": "tag",
											"source": 14,
											"value": "362"
										},
										{
											"begin": 6198,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6305,
											"end": 6307,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6297,
											"end": 6303,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6294,
											"end": 6308,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6271,
											"end": 6309,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6268,
											"end": 6429,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 6268,
											"end": 6429,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6351,
											"end": 6361,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 6346,
											"end": 6349,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 6342,
											"end": 6362,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 6339,
											"end": 6340,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6332,
											"end": 6363,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6386,
											"end": 6390,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 6383,
											"end": 6384,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6376,
											"end": 6391,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6414,
											"end": 6418,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 6411,
											"end": 6412,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6404,
											"end": 6419,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6268,
											"end": 6429,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 6268,
											"end": 6429,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6268,
											"end": 6429,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6055,
											"end": 6435,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6055,
											"end": 6435,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6055,
											"end": 6435,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6055,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6566,
											"end": 7084,
											"name": "tag",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 6566,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6668,
											"end": 6670,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6663,
											"end": 6666,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6660,
											"end": 6671,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6657,
											"end": 7078,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6657,
											"end": 7078,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 6657,
											"end": 7078,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6704,
											"end": 6709,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6701,
											"end": 6702,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6694,
											"end": 6710,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6748,
											"end": 6752,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6745,
											"end": 6746,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6735,
											"end": 6753,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 6818,
											"end": 6820,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6806,
											"end": 6816,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6802,
											"end": 6821,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6799,
											"end": 6800,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 6795,
											"end": 6822,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6789,
											"end": 6793,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6785,
											"end": 6823,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6854,
											"end": 6858,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6842,
											"end": 6852,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6839,
											"end": 6859,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6836,
											"end": 6883,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6836,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 6836,
											"end": 6883,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6877,
											"end": 6881,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6836,
											"end": 6883,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 6836,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6932,
											"end": 6934,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6927,
											"end": 6930,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6923,
											"end": 6935,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6920,
											"end": 6921,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 6916,
											"end": 6936,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 6910,
											"end": 6914,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6906,
											"end": 6937,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6896,
											"end": 6937,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6896,
											"end": 6937,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6987,
											"end": 7068,
											"name": "tag",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 6987,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7005,
											"end": 7007,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6998,
											"end": 7003,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6995,
											"end": 7008,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6987,
											"end": 7068,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6987,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 6987,
											"end": 7068,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7064,
											"end": 7065,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7050,
											"end": 7066,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7050,
											"end": 7066,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 7031,
											"end": 7032,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 7020,
											"end": 7033,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6987,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "368"
										},
										{
											"begin": 6987,
											"end": 7068,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7260,
											"end": 8605,
											"name": "tag",
											"source": 14,
											"value": "113"
										},
										{
											"begin": 7260,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7386,
											"end": 7389,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7380,
											"end": 7390,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7413,
											"end": 7431,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7405,
											"end": 7411,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7402,
											"end": 7432,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7399,
											"end": 7455,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7399,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 7399,
											"end": 7455,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7435,
											"end": 7453,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 7435,
											"end": 7453,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 7435,
											"end": 7453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7435,
											"end": 7453,
											"name": "tag",
											"source": 14,
											"value": "374"
										},
										{
											"begin": 7435,
											"end": 7453,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7464,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 7554,
											"end": 7560,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7514,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 7546,
											"end": 7550,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7540,
											"end": 7551,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 7514,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 7514,
											"end": 7552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7514,
											"end": 7552,
											"name": "tag",
											"source": 14,
											"value": "376"
										},
										{
											"begin": 7514,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7508,
											"end": 7512,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7464,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 7464,
											"end": 7561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7464,
											"end": 7561,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 7464,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7616,
											"end": 7620,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7616,
											"end": 7620,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7673,
											"end": 7675,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7662,
											"end": 7676,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 7690,
											"end": 7691,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 7685,
											"end": 8348,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7685,
											"end": 8348,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 7685,
											"end": 8348,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 7685,
											"end": 8348,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8392,
											"end": 8393,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8409,
											"end": 8415,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8406,
											"end": 8495,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8406,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 8406,
											"end": 8495,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8461,
											"end": 8480,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8461,
											"end": 8480,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8461,
											"end": 8480,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8455,
											"end": 8481,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 8406,
											"end": 8495,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 8406,
											"end": 8495,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7217,
											"end": 7218,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 7213,
											"end": 7224,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7213,
											"end": 7224,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7213,
											"end": 7224,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 7209,
											"end": 7233,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 7205,
											"end": 7234,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 7195,
											"end": 7235,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7241,
											"end": 7242,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 7237,
											"end": 7248,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7237,
											"end": 7248,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7237,
											"end": 7248,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 7192,
											"end": 7249,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 8508,
											"end": 8589,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8508,
											"end": 8589,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 7655,
											"end": 8599,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 7655,
											"end": 8599,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7685,
											"end": 8348,
											"name": "tag",
											"source": 14,
											"value": "378"
										},
										{
											"begin": 7685,
											"end": 8348,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6513,
											"end": 6514,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6506,
											"end": 6520,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6506,
											"end": 6520,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6506,
											"end": 6520,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6550,
											"end": 6554,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6537,
											"end": 6555,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6537,
											"end": 6555,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7721,
											"end": 7741,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7721,
											"end": 7741,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 7721,
											"end": 7741,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7839,
											"end": 8075,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 7839,
											"end": 8075,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7853,
											"end": 7860,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7850,
											"end": 7851,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7847,
											"end": 7861,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 7839,
											"end": 8075,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7839,
											"end": 8075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 7839,
											"end": 8075,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7942,
											"end": 7961,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 7942,
											"end": 7961,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7942,
											"end": 7961,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7936,
											"end": 7962,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7921,
											"end": 7963,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7921,
											"end": 7963,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 8034,
											"end": 8061,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 8034,
											"end": 8061,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8034,
											"end": 8061,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8034,
											"end": 8061,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 8002,
											"end": 8003,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 7990,
											"end": 8004,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7990,
											"end": 8004,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7990,
											"end": 8004,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7990,
											"end": 8004,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7869,
											"end": 7888,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7869,
											"end": 7888,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7839,
											"end": 8075,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 7839,
											"end": 8075,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7839,
											"end": 8075,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 7839,
											"end": 8075,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7843,
											"end": 7846,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8103,
											"end": 8109,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8094,
											"end": 8101,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8091,
											"end": 8110,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 8088,
											"end": 8289,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8088,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 8088,
											"end": 8289,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8164,
											"end": 8183,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 8164,
											"end": 8183,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8164,
											"end": 8183,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8158,
											"end": 8184,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8247,
											"end": 8248,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 8243,
											"end": 8257,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 8243,
											"end": 8257,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8243,
											"end": 8257,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 8259,
											"end": 8262,
											"name": "PUSH",
											"source": 14,
											"value": "F8"
										},
										{
											"begin": 8239,
											"end": 8263,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8235,
											"end": 8272,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 8231,
											"end": 8273,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 8216,
											"end": 8274,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 8201,
											"end": 8275,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8201,
											"end": 8275,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 8088,
											"end": 8289,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 8088,
											"end": 8289,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8088,
											"end": 8289,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8088,
											"end": 8289,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8335,
											"end": 8336,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 8326,
											"end": 8332,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8323,
											"end": 8324,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 8319,
											"end": 8333,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 8315,
											"end": 8337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8309,
											"end": 8313,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8302,
											"end": 8338,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 7655,
											"end": 8599,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 7655,
											"end": 8599,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7655,
											"end": 8599,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7655,
											"end": 8599,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7655,
											"end": 8599,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7655,
											"end": 8599,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7260,
											"end": 8605,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7260,
											"end": 8605,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7260,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9342,
											"end": 9554,
											"name": "tag",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 9342,
											"end": 9554,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9384,
											"end": 9387,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9422,
											"end": 9427,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9416,
											"end": 9428,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9466,
											"end": 9472,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9459,
											"end": 9463,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9452,
											"end": 9457,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9448,
											"end": 9464,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9443,
											"end": 9446,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9437,
											"end": 9473,
											"name": "MCOPY",
											"source": 14
										},
										{
											"begin": 9528,
											"end": 9529,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9492,
											"end": 9508,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9492,
											"end": 9508,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9517,
											"end": 9530,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9492,
											"end": 9508,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9492,
											"end": 9508,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9342,
											"end": 9554,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9342,
											"end": 9554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9559,
											"end": 9826,
											"name": "tag",
											"source": 14,
											"value": "170"
										},
										{
											"begin": 9559,
											"end": 9826,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9738,
											"end": 9741,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9763,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 9789,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 9815,
											"end": 9818,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9807,
											"end": 9813,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9789,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 9789,
											"end": 9819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9789,
											"end": 9819,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 9789,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9781,
											"end": 9787,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9763,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 9763,
											"end": 9820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9831,
											"end": 10331,
											"name": "tag",
											"source": 14,
											"value": "208"
										},
										{
											"begin": 9831,
											"end": 10331,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10100,
											"end": 10115,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10100,
											"end": 10115,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10100,
											"end": 10115,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10082,
											"end": 10116,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10082,
											"end": 10116,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10152,
											"end": 10167,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10152,
											"end": 10167,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10147,
											"end": 10149,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10132,
											"end": 10150,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10132,
											"end": 10150,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10125,
											"end": 10168,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10199,
											"end": 10201,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10184,
											"end": 10202,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10184,
											"end": 10202,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10177,
											"end": 10211,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10177,
											"end": 10211,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10177,
											"end": 10211,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10247,
											"end": 10250,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 10242,
											"end": 10244,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 10227,
											"end": 10245,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10227,
											"end": 10245,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10220,
											"end": 10251,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10220,
											"end": 10251,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10220,
											"end": 10251,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10025,
											"end": 10029,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10029,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10268,
											"end": 10325,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 10268,
											"end": 10325,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10305,
											"end": 10324,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10305,
											"end": 10324,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10297,
											"end": 10303,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10268,
											"end": 10325,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 10268,
											"end": 10325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10268,
											"end": 10325,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 10268,
											"end": 10325,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10260,
											"end": 10325,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 9831,
											"end": 10331,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9831,
											"end": 10331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10336,
											"end": 10585,
											"name": "tag",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 10336,
											"end": 10585,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10405,
											"end": 10411,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10458,
											"end": 10460,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10446,
											"end": 10455,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10437,
											"end": 10444,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10433,
											"end": 10456,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10429,
											"end": 10461,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 10426,
											"end": 10478,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 10426,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 10426,
											"end": 10478,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10474,
											"end": 10475,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10471,
											"end": 10472,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10464,
											"end": 10476,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 10426,
											"end": 10478,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 10426,
											"end": 10478,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10506,
											"end": 10515,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10500,
											"end": 10516,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10525,
											"end": 10555,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 10549,
											"end": 10554,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10525,
											"end": 10555,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 10525,
											"end": 10555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"Contracts/ERC721/CreoEvoltBlockchain.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"getEVTOLOwnerMetadata(uint256)": "5b031fb2",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintEVTOLOwner(address,uint256,string,string)": "11ba9aae",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getEVTOLOwnerMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"identifier\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"inspectionHistory\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"identifier\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"inspectionHistory\",\"type\":\"string\"}],\"name\":\"mintEVTOLOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Contracts/ERC721/CreoEvoltBlockchain.sol\":\"EVTolToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0xa3edd94148e931d8a37353624ea57afa1c679b6fe06b7059ccdc8da78a90c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0041d5bae8c6115c3378532d5b7cfbb1a288780279a3873334e49785b65a1b9d\",\"dweb:/ipfs/QmQTGDrQSZkzRbFZWAhysaeCvKnP7wPh2VSPkN4J323QmZ\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"Contracts/ERC721/CreoEvoltBlockchain.sol\":{\"keccak256\":\"0x9443a92d7caec5b62363688cf355989a7a672c67e0994cb9dafd8ca27bd46a7e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://753a39b84ba45acb1b81da7a0c36fe4d8ffc5f0b29a26f2f4e603b8a2c79632a\",\"dweb:/ipfs/QmQvSdwyrP14pqJzyxofh3Rhg5hkPhMAEzCN1hRD5hrDom\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 169,
								"contract": "Contracts/ERC721/CreoEvoltBlockchain.sol:EVTolToken",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "Contracts/ERC721/CreoEvoltBlockchain.sol:EVTolToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 175,
								"contract": "Contracts/ERC721/CreoEvoltBlockchain.sol:EVTolToken",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 179,
								"contract": "Contracts/ERC721/CreoEvoltBlockchain.sol:EVTolToken",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 183,
								"contract": "Contracts/ERC721/CreoEvoltBlockchain.sol:EVTolToken",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 189,
								"contract": "Contracts/ERC721/CreoEvoltBlockchain.sol:EVTolToken",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 4536,
								"contract": "Contracts/ERC721/CreoEvoltBlockchain.sol:EVTolToken",
								"label": "_eVTOLData",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(EVTOLOwner)4531_storage)"
							},
							{
								"astId": 4539,
								"contract": "Contracts/ERC721/CreoEvoltBlockchain.sol:EVTolToken",
								"label": "_tokenOwners",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(UintToAddressMap)3234_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_bytes32)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bytes32)",
								"numberOfBytes": "32",
								"value": "t_bytes32"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(EVTOLOwner)4531_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct EVTolToken.EVTOLOwner)",
								"numberOfBytes": "32",
								"value": "t_struct(EVTOLOwner)4531_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Bytes32Set)4108_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Bytes32Set",
								"members": [
									{
										"astId": 4107,
										"contract": "Contracts/ERC721/CreoEvoltBlockchain.sol:EVTolToken",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)3914_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Bytes32ToBytes32Map)2810_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableMap.Bytes32ToBytes32Map",
								"members": [
									{
										"astId": 2805,
										"contract": "Contracts/ERC721/CreoEvoltBlockchain.sol:EVTolToken",
										"label": "_keys",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Bytes32Set)4108_storage"
									},
									{
										"astId": 2809,
										"contract": "Contracts/ERC721/CreoEvoltBlockchain.sol:EVTolToken",
										"label": "_values",
										"offset": 0,
										"slot": "2",
										"type": "t_mapping(t_bytes32,t_bytes32)"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(EVTOLOwner)4531_storage": {
								"encoding": "inplace",
								"label": "struct EVTolToken.EVTOLOwner",
								"members": [
									{
										"astId": 4528,
										"contract": "Contracts/ERC721/CreoEvoltBlockchain.sol:EVTolToken",
										"label": "identifier",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 4530,
										"contract": "Contracts/ERC721/CreoEvoltBlockchain.sol:EVTolToken",
										"label": "inspectionHistory",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)3914_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 3909,
										"contract": "Contracts/ERC721/CreoEvoltBlockchain.sol:EVTolToken",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 3913,
										"contract": "Contracts/ERC721/CreoEvoltBlockchain.sol:EVTolToken",
										"label": "_positions",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UintToAddressMap)3234_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableMap.UintToAddressMap",
								"members": [
									{
										"astId": 3233,
										"contract": "Contracts/ERC721/CreoEvoltBlockchain.sol:EVTolToken",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Bytes32ToBytes32Map)2810_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1338
						],
						"ERC165": [
							1617
						],
						"ERC721": [
							1145
						],
						"IERC165": [
							1629
						],
						"IERC721": [
							1262
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1308
						],
						"IERC721Receiver": [
							1280
						],
						"Strings": [
							1593
						]
					},
					"id": 1146,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1263,
							"src": "133:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1262,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1281,
							"src": "172:54:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1280,
										"src": "180:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1309,
							"src": "227:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1308,
										"src": "235:15:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1339,
							"src": "293:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1338,
										"src": "301:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 148,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1594,
							"src": "342:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 147,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1593,
										"src": "350:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 1618,
							"src": "391:69:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 149,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1629,
										"src": "399:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 150,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1617,
										"src": "408:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1146,
							"sourceUnit": 137,
							"src": "461:66:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 89,
										"src": "469:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "Context",
										"nameLocations": [
											"804:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1338,
										"src": "804:7:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "ERC165",
										"nameLocations": [
											"813:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1617,
										"src": "813:6:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:1"
								},
								{
									"baseName": {
										"id": 159,
										"name": "IERC721",
										"nameLocations": [
											"821:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "821:7:1"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:1"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1308,
										"src": "830:15:1"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:1"
								},
								{
									"baseName": {
										"id": 163,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 89,
										"src": "847:13:1"
									},
									"id": 164,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:1"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:1",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1145,
							"linearizedBaseContracts": [
								1145,
								89,
								1308,
								1262,
								1617,
								1629,
								1338
							],
							"name": "ERC721",
							"nameLocation": "794:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 167,
									"libraryName": {
										"id": 165,
										"name": "Strings",
										"nameLocations": [
											"873:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1593,
										"src": "873:7:1"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:1",
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "917:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "964:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 175,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "993:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 174,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:1",
										"keyType": {
											"id": 172,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 173,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 179,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1051:51:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 178,
										"keyName": "owner",
										"keyNameLocation": "1067:5:1",
										"keyType": {
											"id": 176,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 177,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 183,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1109:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 182,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:1",
										"keyType": {
											"id": 180,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 181,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:1",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 189,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1145,
									"src": "1175:86:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 188,
										"keyName": "owner",
										"keyNameLocation": "1191:5:1",
										"keyType": {
											"id": 184,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 187,
											"keyName": "operator",
											"keyNameLocation": "1216:8:1",
											"keyType": {
												"id": 185,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 186,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "1437:57:1",
										"statements": [
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1447:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 198,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1455:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:1"
											},
											{
												"expression": {
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 201,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1470:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 202,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "1480:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:1",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 206,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1393:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "1414:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:1"
									},
									"scope": 1145,
									"src": "1381:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1616,
										1628
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "1669:192:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 217,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1698:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 219,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1262,
																			"src": "1718:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1262_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1262_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 218,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1262",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 223,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1754:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 225,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1308,
																			"src": "1774:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1308_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1308_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 224,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1308",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:1",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 232,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "1842:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 230,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1145_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1616,
															"src": "1818:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 216,
												"id": 235,
												"nodeType": "Return",
												"src": "1679:175:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 213,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 211,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1617,
												"src": "1637:6:1"
											},
											{
												"id": 212,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1629,
												"src": "1645:7:1"
											}
										],
										"src": "1628:25:1"
									},
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1588:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 208,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:1"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1663:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:1"
									},
									"scope": 1145,
									"src": "1561:300:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1187
									],
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "1992:136:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 245,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 246,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 259,
												"nodeType": "IfStatement",
												"src": "2002:87:1",
												"trueBody": {
													"id": 258,
													"nodeType": "Block",
													"src": "2027:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 254,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 252,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 251,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "2048:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 257,
															"nodeType": "RevertStatement",
															"src": "2041:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 260,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2105:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 262,
													"indexExpression": {
														"id": 261,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "2115:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 244,
												"id": 263,
												"nodeType": "Return",
												"src": "2098:23:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:1",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1939:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1983:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:1"
									},
									"scope": 1145,
									"src": "1920:208:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1195
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "2257:46:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 274,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "2288:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 273,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "2274:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 272,
												"id": 276,
												"nodeType": "Return",
												"src": "2267:29:1"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:1",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2202:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:1"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2248:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:1"
									},
									"scope": 1145,
									"src": "2185:118:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "2425:29:1",
										"statements": [
											{
												"expression": {
													"id": 284,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2442:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 283,
												"id": 285,
												"nodeType": "Return",
												"src": "2435:12:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:1",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:1"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2410:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 281,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:1"
									},
									"scope": 1145,
									"src": "2365:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1299
									],
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "2580:31:1",
										"statements": [
											{
												"expression": {
													"id": 293,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2597:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 292,
												"id": 294,
												"nodeType": "Return",
												"src": "2590:14:1"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:1",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2565:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:1"
									},
									"scope": 1145,
									"src": "2518:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1307
									],
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "2756:176:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 305,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "2780:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 304,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "2766:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:1"
											},
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 331,
														"src": "2799:21:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 308,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "2823:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:1"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 315,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "2856:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 313,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:1",
													"trueExpression": {
														"arguments": [
															{
																"id": 323,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "2892:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 324,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 299,
																		"src": "2901:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:1",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1406,
																	"src": "2901:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 320,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:1",
																	"typeDescriptions": {}
																}
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:1",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 303,
												"id": 330,
												"nodeType": "Return",
												"src": "2843:82:1"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:1",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2695:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "2741:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 301,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:1"
									},
									"scope": 1145,
									"src": "2677:255:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "3240:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 337,
												"id": 339,
												"nodeType": "Return",
												"src": "3250:9:1"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:1",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:1"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "3225:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:1"
									},
									"scope": 1145,
									"src": "3174:92:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1235
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "3384:52:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 350,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "3403:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 351,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "3407:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 352,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "3416:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 349,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1014
														],
														"referencedDeclaration": 948,
														"src": "3394:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:1"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:1",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3340:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "3352:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:1"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:1"
									},
									"scope": 1145,
									"src": "3323:113:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1251
									],
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "3573:78:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 366,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3597:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 365,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "3583:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 370,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "3636:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 369,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "3623:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 364,
												"id": 372,
												"nodeType": "Return",
												"src": "3616:28:1"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:1",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3518:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:1"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "3564:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:1"
									},
									"scope": 1145,
									"src": "3497:154:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1243
									],
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "3793:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 383,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "3822:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "3836:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "3846:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 382,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "3803:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:1"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:1",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3745:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "3763:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:1"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:1"
									},
									"scope": 1145,
									"src": "3718:144:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1261
									],
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "4022:59:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 400,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "4039:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 402,
														"indexExpression": {
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "4058:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 404,
													"indexExpression": {
														"id": 403,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "4065:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 405,
												"nodeType": "Return",
												"src": "4032:42:1"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:1",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3954:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3969:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:1"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "4016:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:1"
									},
									"scope": 1145,
									"src": "3928:153:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1227
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "4223:498:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 417,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "4237:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 418,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 431,
												"nodeType": "IfStatement",
												"src": "4233:87:1",
												"trueBody": {
													"id": 430,
													"nodeType": "Block",
													"src": "4255:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 425,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 424,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 423,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "4276:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 429,
															"nodeType": "RevertStatement",
															"src": "4269:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 452,
														"src": "4538:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 432,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [
														{
															"id": 435,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "4570:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "4574:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 437,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "4583:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 434,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "4562:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 441,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "4610:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 442,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 410,
														"src": "4627:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 451,
												"nodeType": "IfStatement",
												"src": "4606:109:1",
												"trueBody": {
													"id": 450,
													"nodeType": "Block",
													"src": "4633:82:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 445,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "4675:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 446,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "4681:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 447,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "4690:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 444,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 61,
																	"src": "4654:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 449,
															"nodeType": "RevertStatement",
															"src": "4647:57:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:1",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4165:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4179:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "4191:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:1"
									},
									"scope": 1145,
									"src": "4143:578:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1217
									],
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "4863:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 464,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "4890:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 465,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "4896:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "4900:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 463,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															471,
															497
														],
														"referencedDeclaration": 497,
														"src": "4873:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:1"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4813:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4827:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "4839:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:1"
									},
									"scope": 1145,
									"src": "4787:132:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1207
									],
									"body": {
										"id": 496,
										"nodeType": "Block",
										"src": "5088:105:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 484,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5117:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5121:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 483,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 453,
														"src": "5098:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 490,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5162:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 491,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5168:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "5172:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 493,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "5181:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 489,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "5139:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:1"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:1",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5011:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5025:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5037:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5054:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:1"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:1"
									},
									"scope": 1145,
									"src": "4985:208:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "5782:40:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 505,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5799:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 507,
													"indexExpression": {
														"id": 506,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "5807:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 504,
												"id": 508,
												"nodeType": "Return",
												"src": "5792:23:1"
											}
										]
									},
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:1",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5725:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:1"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "5773:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:1"
									},
									"scope": 1145,
									"src": "5707:115:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "6017:48:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 518,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "6034:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 520,
													"indexExpression": {
														"id": 519,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "6050:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 517,
												"id": 521,
												"nodeType": "Return",
												"src": "6027:31:1"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:1",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "5960:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:1"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6008:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:1"
									},
									"scope": 1145,
									"src": "5938:127:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "6485:163:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 535,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "6514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 536,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 541,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "6552:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 542,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 528,
																			"src": "6561:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 545,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 526,
																				"src": "6589:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 546,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 528,
																				"src": "6596:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 544,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "6572:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 550,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 530,
																				"src": "6621:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 549,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 523,
																			"src": "6608:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 552,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 528,
																		"src": "6633:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 555,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 534,
												"id": 557,
												"nodeType": "Return",
												"src": "6495:146:1"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:1",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6399:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6414:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6431:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:1"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "6479:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 532,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:1"
									},
									"scope": 1145,
									"src": "6376:272:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "7179:271:1",
										"statements": [
											{
												"condition": {
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:1",
													"subExpression": {
														"arguments": [
															{
																"id": 570,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 562,
																"src": "7208:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 571,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "7215:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 572,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "7224:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 569,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "7194:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 594,
												"nodeType": "IfStatement",
												"src": "7189:255:1",
												"trueBody": {
													"id": 593,
													"nodeType": "Block",
													"src": "7234:210:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 575,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "7252:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 576,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 591,
																"nodeType": "Block",
																"src": "7350:84:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 587,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 564,
																					"src": "7402:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 588,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "7411:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 586,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 78,
																				"src": "7375:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 590,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:1"
																	}
																]
															},
															"id": 592,
															"nodeType": "IfStatement",
															"src": "7248:186:1",
															"trueBody": {
																"id": 585,
																"nodeType": "Block",
																"src": "7273:71:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 582,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 566,
																					"src": "7321:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 581,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 52,
																				"src": "7298:22:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 584,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:1"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:1",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7108:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7123:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "7140:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:1"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:1"
									},
									"scope": 1145,
									"src": "7082:368:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "8167:78:1",
										"statements": [
											{
												"id": 610,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:1",
												"statements": [
													{
														"expression": {
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 604,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "8201:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 606,
																"indexExpression": {
																	"id": 605,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "8211:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 607,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "8223:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 609,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:1",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "8118:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "8135:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 600,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:1"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:1"
									},
									"scope": 1145,
									"src": "8092:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "8933:700:1",
										"statements": [
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "8943:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 624,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [
														{
															"id": 627,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "8967:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 626,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "8958:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 630,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "9035:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 631,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 643,
												"nodeType": "IfStatement",
												"src": "9031:86:1",
												"trueBody": {
													"id": 642,
													"nodeType": "Block",
													"src": "9055:62:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 637,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 625,
																		"src": "9086:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 638,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 619,
																		"src": "9092:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 639,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "9098:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 636,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "9069:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 641,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 625,
														"src": "9161:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 645,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 671,
												"nodeType": "IfStatement",
												"src": "9157:256:1",
												"trueBody": {
													"id": 670,
													"nodeType": "Block",
													"src": "9181:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 651,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 655,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "9298:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 658,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 656,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 650,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		948,
																		1014
																	],
																	"referencedDeclaration": 1014,
																	"src": "9277:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 662,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:1"
														},
														{
															"id": 669,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:1",
															"statements": [
																{
																	"expression": {
																		"id": 667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 663,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "9368:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 665,
																			"indexExpression": {
																				"id": 664,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 625,
																				"src": "9378:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 668,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:1"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 672,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9427:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 673,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 686,
												"nodeType": "IfStatement",
												"src": "9423:107:1",
												"trueBody": {
													"id": 685,
													"nodeType": "Block",
													"src": "9445:85:1",
													"statements": [
														{
															"id": 684,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:1",
															"statements": [
																{
																	"expression": {
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 678,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "9487:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 680,
																			"indexExpression": {
																				"id": 679,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 615,
																				"src": "9497:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 683,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:1"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 687,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "9540:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 689,
														"indexExpression": {
															"id": 688,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "9548:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 690,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "9559:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 694,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "9586:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 695,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "9592:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 696,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "9596:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 693,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "9577:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 698,
												"nodeType": "EmitStatement",
												"src": "9572:32:1"
											},
											{
												"expression": {
													"id": 699,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 625,
													"src": "9622:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 623,
												"id": 700,
												"nodeType": "Return",
												"src": "9615:11:1"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:1",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8855:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8867:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8884:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:1"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "8924:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:1"
									},
									"scope": 1145,
									"src": "8838:795:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "10008:274:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 710,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "10022:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 711,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 724,
												"nodeType": "IfStatement",
												"src": "10018:87:1",
												"trueBody": {
													"id": 723,
													"nodeType": "Block",
													"src": "10040:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 717,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 716,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "10061:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 722,
															"nodeType": "RevertStatement",
															"src": "10054:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "10114:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 725,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"arguments": [
														{
															"id": 728,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "10146:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "10150:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 730,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 727,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "10138:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 736,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "10184:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 737,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "10180:96:1",
												"trueBody": {
													"id": 749,
													"nodeType": "Block",
													"src": "10213:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 745,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 743,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 742,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 66,
																	"src": "10234:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 748,
															"nodeType": "RevertStatement",
															"src": "10227:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:1",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "9970:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:1"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:1"
									},
									"scope": 1145,
									"src": "9955:327:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "10690:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 761,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10710:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 762,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "10714:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 760,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															767,
															793
														],
														"referencedDeclaration": 793,
														"src": "10700:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:1"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:1",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "10652:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "10664:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:1"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:1"
									},
									"scope": 1145,
									"src": "10633:100:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "11038:98:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 778,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11054:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 779,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11058:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 777,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "11048:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 783,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "11111:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 788,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "11115:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 789,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "11124:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 782,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "11076:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:1"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:1",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10973:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "10985:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "11002:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 773,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:1"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:1"
									},
									"scope": 1145,
									"src": "10954:182:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "11503:186:1",
										"statements": [
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "11513:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 799,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 802,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "11557:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 807,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 801,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "11537:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "11591:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 814,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 824,
												"nodeType": "IfStatement",
												"src": "11587:96:1",
												"trueBody": {
													"id": 823,
													"nodeType": "Block",
													"src": "11620:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 820,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "11664:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 819,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "11641:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 822,
															"nodeType": "RevertStatement",
															"src": "11634:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:1",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "11477:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:1"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:1"
									},
									"scope": 1145,
									"src": "11462:227:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "12084:389:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 836,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "12098:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 837,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 850,
												"nodeType": "IfStatement",
												"src": "12094:87:1",
												"trueBody": {
													"id": 849,
													"nodeType": "Block",
													"src": "12116:65:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 845,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 844,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 843,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 842,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "12137:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 848,
															"nodeType": "RevertStatement",
															"src": "12130:40:1"
														}
													]
												}
											},
											{
												"assignments": [
													852
												],
												"declarations": [
													{
														"constant": false,
														"id": 852,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 885,
														"src": "12190:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 851,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"initialValue": {
													"arguments": [
														{
															"id": 854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "12222:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "12226:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 856,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 853,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "12214:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "12260:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 863,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 873,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "12362:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 874,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "12379:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 883,
													"nodeType": "IfStatement",
													"src": "12358:109:1",
													"trueBody": {
														"id": 882,
														"nodeType": "Block",
														"src": "12385:82:1",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 877,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 829,
																			"src": "12427:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 878,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "12433:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 879,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 852,
																			"src": "12442:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 876,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 61,
																		"src": "12406:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 881,
																"nodeType": "RevertStatement",
																"src": "12399:57:1"
															}
														]
													}
												},
												"id": 884,
												"nodeType": "IfStatement",
												"src": "12256:211:1",
												"trueBody": {
													"id": 872,
													"nodeType": "Block",
													"src": "12289:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 869,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "12333:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 868,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "12310:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 871,
															"nodeType": "RevertStatement",
															"src": "12303:38:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:1",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12046:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "12058:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:1"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:1"
									},
									"scope": 1145,
									"src": "12013:460:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "13481:53:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 897,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "13505:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 898,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "13511:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 893,
															"src": "13515:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 896,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															904,
															930
														],
														"referencedDeclaration": 930,
														"src": "13491:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:1"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13429:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13443:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "13455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:1"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:1"
									},
									"scope": 1145,
									"src": "13406:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "13873:102:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "13893:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "13899:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "13903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "13883:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 923,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "13944:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "13950:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "13954:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 926,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "13963:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 922,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "13921:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:1"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:1",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13794:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13808:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13820:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "13837:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 912,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:1"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:1"
									},
									"scope": 1145,
									"src": "13771:204:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "14488:50:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "14507:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "14511:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 943,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "14520:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 940,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															948,
															1014
														],
														"referencedDeclaration": 1014,
														"src": "14498:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:1"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:1",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14436:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14448:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "14465:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:1"
									},
									"returnParameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:1"
									},
									"scope": 1145,
									"src": "14418:120:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "14814:568:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 960,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "14880:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 961,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "14893:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 962,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1006,
												"nodeType": "IfStatement",
												"src": "14876:460:1",
												"trueBody": {
													"id": 1005,
													"nodeType": "Block",
													"src": "14913:423:1",
													"statements": [
														{
															"assignments": [
																969
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 969,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 1005,
																	"src": "14927:13:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 968,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:1",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 973,
															"initialValue": {
																"arguments": [
																	{
																		"id": 971,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "14957:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 970,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "14943:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 979,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 974,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "15093:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 977,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 976,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 975,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 978,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 980,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 969,
																			"src": "15115:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 981,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 955,
																			"src": "15124:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:1",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 985,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "15150:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 986,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 955,
																				"src": "15157:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 984,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "15133:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 995,
															"nodeType": "IfStatement",
															"src": "15089:142:1",
															"trueBody": {
																"id": 994,
																"nodeType": "Block",
																"src": "15164:67:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 991,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 955,
																					"src": "15211:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 990,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 83,
																				"src": "15189:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 993,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:1"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 996,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "15249:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1004,
															"nodeType": "IfStatement",
															"src": "15245:81:1",
															"trueBody": {
																"id": 1003,
																"nodeType": "Block",
																"src": "15260:66:1",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 998,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 969,
																					"src": "15292:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 999,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 951,
																					"src": "15299:2:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1000,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 953,
																					"src": "15303:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 997,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "15283:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1002,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:1"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1007,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "15346:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1009,
														"indexExpression": {
															"id": 1008,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "15362:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1010,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "15373:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:1"
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:1",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14738:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14750:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14767:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "14781:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 956,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:1"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:1"
									},
									"scope": 1145,
									"src": "14720:662:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "15684:219:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1024,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "15698:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1025,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1028,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1035,
												"nodeType": "IfStatement",
												"src": "15694:91:1",
												"trueBody": {
													"id": 1034,
													"nodeType": "Block",
													"src": "15722:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1031,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "15765:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1030,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "15743:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1033,
															"nodeType": "RevertStatement",
															"src": "15736:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1036,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 189,
																"src": "15794:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1039,
															"indexExpression": {
																"id": 1037,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1017,
																"src": "15813:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1040,
														"indexExpression": {
															"id": 1038,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "15820:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1041,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "15832:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1045,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "15870:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "15877:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "15887:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1044,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "15855:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "EmitStatement",
												"src": "15850:46:1"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:1",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15619:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15634:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "15652:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:1"
									},
									"returnParameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:1"
									},
									"scope": 1145,
									"src": "15591:312:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "16210:169:1",
										"statements": [
											{
												"assignments": [
													1060
												],
												"declarations": [
													{
														"constant": false,
														"id": 1060,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "16220:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1059,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1064,
												"initialValue": {
													"arguments": [
														{
															"id": 1062,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "16245:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1061,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "16236:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1065,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "16267:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1066,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "16263:88:1",
												"trueBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "16288:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1072,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "16332:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1071,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "16309:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1074,
															"nodeType": "RevertStatement",
															"src": "16302:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1077,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1060,
													"src": "16367:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1058,
												"id": 1078,
												"nodeType": "Return",
												"src": "16360:12:1"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:1",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "16161:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:1"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "16201:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:1"
									},
									"scope": 1145,
									"src": "16138:241:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "17020:680:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1092,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "17034:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:1",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:1",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1142,
												"nodeType": "IfStatement",
												"src": "17030:664:1",
												"trueBody": {
													"id": 1141,
													"nodeType": "Block",
													"src": "17054:640:1",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1121,
																		"nodeType": "Block",
																		"src": "17168:162:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1114,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1110,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1108,
																						"src": "17190:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1111,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1280,
																								"src": "17200:15:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1280_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:1",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1279,
																							"src": "17200:32:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1113,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:1",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1120,
																				"nodeType": "IfStatement",
																				"src": "17186:130:1",
																				"trueBody": {
																					"id": 1119,
																					"nodeType": "Block",
																					"src": "17243:73:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1116,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1085,
																										"src": "17294:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1115,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17272:21:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1117,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1118,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1122,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1109,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1108,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1122,
																				"src": "17153:13:1",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1107,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:1"
																	},
																	"src": "17144:186:1"
																},
																{
																	"block": {
																		"id": 1138,
																		"nodeType": "Block",
																		"src": "17359:325:1",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1129,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1126,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1124,
																							"src": "17381:6:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:1",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1128,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1136,
																					"nodeType": "Block",
																					"src": "17480:190:1",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:1",
																								"nodeType": "YulBlock",
																								"src": "17566:86:1",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:1",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:1",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:1"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:1"
																													},
																													"nativeSrc": "17599:15:1",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:1"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:1",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:1"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:1",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:1"
																													},
																													"nativeSrc": "17616:13:1",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:1"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:1",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:1"
																											},
																											"nativeSrc": "17592:38:1",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:1"
																										},
																										"nativeSrc": "17592:38:1",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:1"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1124,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:1",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1124,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:1",
																									"valueSize": 1
																								}
																							],
																							"id": 1135,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:1"
																						}
																					]
																				},
																				"id": 1137,
																				"nodeType": "IfStatement",
																				"src": "17377:293:1",
																				"trueBody": {
																					"id": 1134,
																					"nodeType": "Block",
																					"src": "17401:73:1",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1131,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1085,
																										"src": "17452:2:1",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1130,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 71,
																									"src": "17430:21:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1132,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:1",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1133,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:1"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1139,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1125,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1124,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:1",
																				"nodeType": "VariableDeclaration",
																				"scope": 1139,
																				"src": "17338:19:1",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1123,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:1"
																	},
																	"src": "17331:353:1"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1101,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1320,
																			"src": "17109:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1103,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "17123:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1104,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "17129:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1105,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1089,
																		"src": "17138:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1098,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1085,
																				"src": "17088:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1097,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1280,
																			"src": "17072:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1280_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1280",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:1",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1279,
																	"src": "17072:36:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:1",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1140,
															"nodeType": "TryStatement",
															"src": "17068:616:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:1",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16950:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16964:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16976:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "16993:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1088,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:1"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:1"
									},
									"scope": 1145,
									"src": "16918:782:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1146,
							"src": "776:16926:1",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "107:17596:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1629
						],
						"IERC721": [
							1262
						]
					},
					"id": 1263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1147,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1149,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1263,
							"sourceUnit": 1630,
							"src": "134:62:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1148,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1629,
										"src": "142:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1151,
										"name": "IERC165",
										"nameLocations": [
											"287:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1629,
										"src": "287:7:2"
									},
									"id": 1152,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1150,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1262,
							"linearizedBaseContracts": [
								1262,
								1629
							],
							"name": "IERC721",
							"nameLocation": "276:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1161,
									"name": "Transfer",
									"nameLocation": "400:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "409:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "431:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "451:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:2"
									},
									"src": "394:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1170,
									"name": "Approval",
									"nameLocation": "587:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "596:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "619:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "645:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:2"
									},
									"src": "581:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1179,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "819:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "842:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "868:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:2"
									},
									"src": "798:85:2"
								},
								{
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "989:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:2"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1027:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:2"
									},
									"scope": 1262,
									"src": "970:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1203:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:2"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1243:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:2"
									},
									"scope": 1262,
									"src": "1186:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1860:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1874:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "1903:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:2"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:2"
									},
									"scope": 1262,
									"src": "1834:99:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2701:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:2"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:2"
									},
									"scope": 1262,
									"src": "2649:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3492:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3506:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3518:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:2"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:2"
									},
									"scope": 1262,
									"src": "3470:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "4024:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "4036:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:2"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:2"
									},
									"scope": 1262,
									"src": "4007:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "4415:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "4433:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:2"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:2"
									},
									"scope": 1262,
									"src": "4388:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4628:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:2"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4668:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:2"
									},
									"scope": 1262,
									"src": "4607:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4861:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4876:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:2"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "4917:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:2"
									},
									"scope": 1262,
									"src": "4835:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1263,
							"src": "266:4659:2",
							"usedErrors": [],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "108:4818:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1280
						]
					},
					"id": 1281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1264,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1265,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1280,
							"linearizedBaseContracts": [
								1280
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "867:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "893:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "915:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "940:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:3"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "984:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1276,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:3"
									},
									"scope": 1280,
									"src": "832:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1281,
							"src": "295:699:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1262
						],
						"IERC721Metadata": [
							1308
						]
					},
					"id": 1309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1282,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1309,
							"sourceUnit": 1263,
							"src": "153:39:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1283,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1262,
										"src": "161:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1286,
										"name": "IERC721",
										"nameLocations": [
											"357:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1262,
										"src": "357:7:4"
									},
									"id": 1287,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:4"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1285,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:4",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1308,
							"linearizedBaseContracts": [
								1308,
								1262,
								1629
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:4",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:4"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "473:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:4"
									},
									"scope": 1308,
									"src": "434:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1294,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:4",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:4"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1299,
												"src": "600:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1296,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:4"
									},
									"scope": 1308,
									"src": "559:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:4",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:4"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "774:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1304,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:4"
									},
									"scope": 1308,
									"src": "716:73:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1309,
							"src": "328:463:4",
							"usedErrors": [],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "127:665:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1338
						]
					},
					"id": 1339,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1311,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1338,
							"linearizedBaseContracts": [
								1338
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1316,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1315,
												"id": 1318,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 1338,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1328,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1325,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1324,
												"id": 1327,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 1329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1322,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 1338,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1336,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1333,
												"id": 1335,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 1337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 1338,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1339,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2683
						],
						"SignedMath": [
							2788
						],
						"Strings": [
							1593
						]
					},
					"id": 1594,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1340,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1342,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1594,
							"sourceUnit": 2684,
							"src": "127:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1341,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2683,
										"src": "135:4:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1594,
							"sourceUnit": 2789,
							"src": "165:49:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1343,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2788,
										"src": "173:10:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1345,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1593,
							"linearizedBaseContracts": [
								1593
							],
							"name": "Strings",
							"nameLocation": "259:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1348,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "273:56:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1346,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1347,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1351,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1593,
									"src": "335:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1349,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1350,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1352,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:6",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1358,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "505:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "520:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:6"
									},
									"src": "470:66:6"
								},
								{
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "708:627:6",
										"statements": [
											{
												"id": 1404,
												"nodeType": "UncheckedBlock",
												"src": "718:611:6",
												"statements": [
													{
														"assignments": [
															1367
														],
														"declarations": [
															{
																"constant": false,
																"id": 1367,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1404,
																"src": "742:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1366,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1374,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1370,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1361,
																		"src": "770:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1368,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2683,
																		"src": "759:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2683_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:6",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2503,
																	"src": "759:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:6"
													},
													{
														"assignments": [
															1376
														],
														"declarations": [
															{
																"constant": false,
																"id": 1376,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1404,
																"src": "794:20:6",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1375,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1381,
														"initialValue": {
															"arguments": [
																{
																	"id": 1379,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "828:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1377,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:6"
													},
													{
														"assignments": [
															1383
														],
														"declarations": [
															{
																"constant": false,
																"id": 1383,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:6",
																"nodeType": "VariableDeclaration",
																"scope": 1404,
																"src": "849:11:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1382,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1384,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:6"
													},
													{
														"AST": {
															"nativeSrc": "930:67:6",
															"nodeType": "YulBlock",
															"src": "930:67:6",
															"statements": [
																{
																	"nativeSrc": "948:35:6",
																	"nodeType": "YulAssignment",
																	"src": "948:35:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:6",
																						"nodeType": "YulLiteral",
																						"src": "971:2:6",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:6"
																				},
																				"nativeSrc": "967:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:6"
																		},
																		"nativeSrc": "955:28:6",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:6"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:6"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1376,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1367,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1383,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:6",
																"valueSize": 1
															}
														],
														"id": 1385,
														"nodeType": "InlineAssembly",
														"src": "921:76:6"
													},
													{
														"body": {
															"id": 1400,
															"nodeType": "Block",
															"src": "1023:269:6",
															"statements": [
																{
																	"expression": {
																		"id": 1388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:6",
																		"subExpression": {
																			"id": 1387,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1383,
																			"src": "1041:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1389,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:6"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:6",
																		"nodeType": "YulBlock",
																		"src": "1124:86:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:6",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:6",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:6"
																									},
																									"nativeSrc": "1164:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:6"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:6"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:6",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:6"
																							},
																							"nativeSrc": "1159:32:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:6"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:6",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:6"
																					},
																					"nativeSrc": "1146:46:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:6"
																				},
																				"nativeSrc": "1146:46:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:6"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1348,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1383,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1361,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:6",
																			"valueSize": 1
																		}
																	],
																	"id": 1390,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:6"
																},
																{
																	"expression": {
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1391,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1361,
																			"src": "1227:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1394,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:6"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1395,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1361,
																			"src": "1260:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1399,
																	"nodeType": "IfStatement",
																	"src": "1256:21:6",
																	"trueBody": {
																		"id": 1398,
																		"nodeType": "Break",
																		"src": "1272:5:6"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1401,
														"nodeType": "WhileStatement",
														"src": "1010:282:6"
													},
													{
														"expression": {
															"id": 1402,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "1312:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1365,
														"id": 1403,
														"nodeType": "Return",
														"src": "1305:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "655:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:6"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "693:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1363,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:6"
									},
									"scope": 1593,
									"src": "637:698:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "1511:92:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1417,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "1542:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:6",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1426,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1409,
																			"src": "1588:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1424,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2788,
																			"src": "1573:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2788_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:6",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2787,
																		"src": "1573:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1423,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1406,
																"src": "1564:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1414,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:6",
																"typeDescriptions": {}
															}
														},
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:6",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1413,
												"id": 1430,
												"nodeType": "Return",
												"src": "1521:75:6"
											}
										]
									},
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:6",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "1459:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1408,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:6"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "1496:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1411,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:6"
									},
									"scope": 1593,
									"src": "1435:168:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "1782:100:6",
										"statements": [
											{
												"id": 1450,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1441,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1435,
																	"src": "1835:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1444,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1435,
																				"src": "1854:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1442,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2683,
																				"src": "1842:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2683_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:6",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2625,
																			"src": "1842:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1440,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1452,
																	1535,
																	1555
																],
																"referencedDeclaration": 1535,
																"src": "1823:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1439,
														"id": 1449,
														"nodeType": "Return",
														"src": "1816:49:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1433,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "1729:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:6"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "1767:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1437,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:6"
									},
									"scope": 1593,
									"src": "1708:174:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "2095:435:6",
										"statements": [
											{
												"assignments": [
													1463
												],
												"declarations": [
													{
														"constant": false,
														"id": 1463,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "2105:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1462,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1465,
												"initialValue": {
													"id": 1464,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1455,
													"src": "2126:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:6"
											},
											{
												"assignments": [
													1467
												],
												"declarations": [
													{
														"constant": false,
														"id": 1467,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "2141:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1466,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1476,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1471,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "2177:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1468,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:6"
											},
											{
												"expression": {
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1477,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2198:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1479,
														"indexExpression": {
															"hexValue": "30",
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:6"
											},
											{
												"expression": {
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1483,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2223:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1485,
														"indexExpression": {
															"hexValue": "31",
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:6"
											},
											{
												"body": {
													"id": 1517,
													"nodeType": "Block",
													"src": "2293:95:6",
													"statements": [
														{
															"expression": {
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1503,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1467,
																		"src": "2307:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1505,
																	"indexExpression": {
																		"id": 1504,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "2314:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1506,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1348,
																		"src": "2319:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1510,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1507,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1463,
																			"src": "2330:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1512,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:6"
														},
														{
															"expression": {
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1513,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1463,
																	"src": "2361:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1516,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1497,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1490,
														"src": "2281:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1518,
												"initializationExpression": {
													"assignments": [
														1490
													],
													"declarations": [
														{
															"constant": false,
															"id": 1490,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1518,
															"src": "2253:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1489,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1496,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1492,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "2269:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:6"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:6",
														"subExpression": {
															"id": 1500,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "2290:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1502,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1519,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1463,
														"src": "2401:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1528,
												"nodeType": "IfStatement",
												"src": "2397:96:6",
												"trueBody": {
													"id": 1527,
													"nodeType": "Block",
													"src": "2418:75:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1523,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1455,
																		"src": "2468:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1524,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "2475:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1522,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "2439:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1526,
															"nodeType": "RevertStatement",
															"src": "2432:50:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1531,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2516:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1529,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1461,
												"id": 1533,
												"nodeType": "Return",
												"src": "2502:21:6"
											}
										]
									},
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2026:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2041:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:6"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2080:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1459,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:6"
									},
									"scope": 1593,
									"src": "2005:525:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "2762:75:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1548,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "2807:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1546,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1544,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1551,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "2815:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1543,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1452,
															1535,
															1555
														],
														"referencedDeclaration": 1535,
														"src": "2779:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1542,
												"id": 1553,
												"nodeType": "Return",
												"src": "2772:58:6"
											}
										]
									},
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:6",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2710:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:6"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2747:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1540,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:6"
									},
									"scope": 1593,
									"src": "2689:148:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1591,
										"nodeType": "Block",
										"src": "2992:104:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1567,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1558,
																		"src": "3015:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1565,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1572,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1560,
																		"src": "3034:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1571,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1570,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1579,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1558,
																			"src": "3063:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1577,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1576,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1585,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1560,
																			"src": "3086:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1583,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1582,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1564,
												"id": 1590,
												"nodeType": "Return",
												"src": "3002:87:6"
											}
										]
									},
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:6",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "2929:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1557,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "2946:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:6"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1592,
												"src": "2986:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1562,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:6"
									},
									"scope": 1593,
									"src": "2914:182:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1594,
							"src": "251:2847:6",
							"usedErrors": [
								1358
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1617
						],
						"IERC165": [
							1629
						]
					},
					"id": 1618,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1595,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1597,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1618,
							"sourceUnit": 1630,
							"src": "140:38:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1596,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1629,
										"src": "148:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1599,
										"name": "IERC165",
										"nameLocations": [
											"687:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1629,
										"src": "687:7:7"
									},
									"id": 1600,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1598,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1617,
							"linearizedBaseContracts": [
								1617,
								1629
							],
							"name": "ERC165",
							"nameLocation": "677:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1628
									],
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "844:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1608,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "861:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1610,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1629,
																	"src": "881:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1629_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1629_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1609,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1629",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1612,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1607,
												"id": 1614,
												"nodeType": "Return",
												"src": "854:47:7"
											}
										]
									},
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "789:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1602,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:7"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "838:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1605,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:7"
									},
									"scope": 1617,
									"src": "762:146:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1618,
							"src": "659:251:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1629
						]
					},
					"id": 1630,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1619,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1620,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1629,
							"linearizedBaseContracts": [
								1629
							],
							"name": "IERC165",
							"nameLocation": "431:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1628,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "817:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1622,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:8"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "860:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1625,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:8"
									},
									"scope": 1629,
									"src": "790:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1630,
							"src": "421:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2683
						]
					},
					"id": 2684,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1631,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1632,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:9",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2683,
							"linearizedBaseContracts": [
								2683
							],
							"name": "Math",
							"nameLocation": "211:4:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:9",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1635,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:9"
									},
									"src": "277:29:9"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1640,
									"members": [
										{
											"id": 1636,
											"name": "Floor",
											"nameLocation": "336:5:9",
											"nodeType": "EnumValue",
											"src": "336:5:9"
										},
										{
											"id": 1637,
											"name": "Ceil",
											"nameLocation": "379:4:9",
											"nodeType": "EnumValue",
											"src": "379:4:9"
										},
										{
											"id": 1638,
											"name": "Trunc",
											"nameLocation": "421:5:9",
											"nodeType": "EnumValue",
											"src": "421:5:9"
										},
										{
											"id": 1639,
											"name": "Expand",
											"nameLocation": "451:6:9",
											"nodeType": "EnumValue",
											"src": "451:6:9"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:9",
									"nodeType": "EnumDefinition",
									"src": "312:169:9"
								},
								{
									"body": {
										"id": 1671,
										"nodeType": "Block",
										"src": "661:140:9",
										"statements": [
											{
												"id": 1670,
												"nodeType": "UncheckedBlock",
												"src": "671:124:9",
												"statements": [
													{
														"assignments": [
															1653
														],
														"declarations": [
															{
																"constant": false,
																"id": 1653,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1670,
																"src": "695:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1652,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1657,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1654,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "707:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1655,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1645,
																"src": "711:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1658,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1653,
																"src": "730:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1659,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "734:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1665,
														"nodeType": "IfStatement",
														"src": "726:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1663,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1651,
															"id": 1664,
															"nodeType": "Return",
															"src": "737:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1667,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "782:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1668,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1651,
														"id": 1669,
														"nodeType": "Return",
														"src": "768:16:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:9",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "601:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "612:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:9"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "646:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "652:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:9"
									},
									"scope": 2683,
									"src": "585:216:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "984:113:9",
										"statements": [
											{
												"id": 1698,
												"nodeType": "UncheckedBlock",
												"src": "994:97:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1684,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1677,
																"src": "1022:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1685,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1675,
																"src": "1026:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1691,
														"nodeType": "IfStatement",
														"src": "1018:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1689,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1683,
															"id": 1690,
															"nodeType": "Return",
															"src": "1029:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1693,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1675,
																		"src": "1074:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1694,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1677,
																		"src": "1078:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1696,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1683,
														"id": 1697,
														"nodeType": "Return",
														"src": "1060:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1673,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:9",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "924:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "935:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:9"
									},
									"returnParameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "969:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "975:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:9"
									},
									"scope": 2683,
									"src": "908:189:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "1283:417:9",
										"statements": [
											{
												"id": 1740,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1712,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1703,
																"src": "1551:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1719,
														"nodeType": "IfStatement",
														"src": "1547:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1717,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1711,
															"id": 1718,
															"nodeType": "Return",
															"src": "1559:16:9"
														}
													},
													{
														"assignments": [
															1721
														],
														"declarations": [
															{
																"constant": false,
																"id": 1721,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1740,
																"src": "1589:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1720,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1725,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1722,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1703,
																"src": "1601:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1723,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "1605:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1726,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "1624:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1727,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1703,
																	"src": "1628:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1729,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "1633:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1735,
														"nodeType": "IfStatement",
														"src": "1620:33:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1733,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1711,
															"id": 1734,
															"nodeType": "Return",
															"src": "1636:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1736,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1737,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1721,
																	"src": "1681:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1738,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1711,
														"id": 1739,
														"nodeType": "Return",
														"src": "1667:16:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:9",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1223:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1234:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:9"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1268:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1707,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "1274:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:9"
									},
									"scope": 2683,
									"src": "1207:493:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "1887:114:9",
										"statements": [
											{
												"id": 1768,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1754,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1747,
																"src": "1925:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1761,
														"nodeType": "IfStatement",
														"src": "1921:29:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1759,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1753,
															"id": 1760,
															"nodeType": "Return",
															"src": "1933:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1763,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1745,
																		"src": "1978:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1764,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1747,
																		"src": "1982:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1766,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1753,
														"id": 1767,
														"nodeType": "Return",
														"src": "1964:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:9",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "1827:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "1838:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:9"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "1872:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1749,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "1878:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:9"
									},
									"scope": 2683,
									"src": "1811:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1797,
										"nodeType": "Block",
										"src": "2198:114:9",
										"statements": [
											{
												"id": 1796,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1782,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1775,
																"src": "2236:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1789,
														"nodeType": "IfStatement",
														"src": "2232:29:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1787,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1781,
															"id": 1788,
															"nodeType": "Return",
															"src": "2244:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1791,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1773,
																		"src": "2289:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1792,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1775,
																		"src": "2293:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1794,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1781,
														"id": 1795,
														"nodeType": "Return",
														"src": "2275:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "2138:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "2149:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:9"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "2183:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1777,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "2189:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:9"
									},
									"scope": 2683,
									"src": "2122:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1815,
										"nodeType": "Block",
										"src": "2449:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1808,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1801,
															"src": "2466:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1809,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "2470:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1812,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "2478:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:9",
													"trueExpression": {
														"id": 1811,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "2474:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1807,
												"id": 1814,
												"nodeType": "Return",
												"src": "2459:20:9"
											}
										]
									},
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:9",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "2395:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "2406:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:9"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "2440:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:9"
									},
									"scope": 2683,
									"src": "2382:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1833,
										"nodeType": "Block",
										"src": "2624:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1826,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "2641:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1827,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "2645:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1830,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "2653:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:9",
													"trueExpression": {
														"id": 1829,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1819,
														"src": "2649:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1825,
												"id": 1832,
												"nodeType": "Return",
												"src": "2634:20:9"
											}
										]
									},
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:9",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2570:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2581:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:9"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "2615:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:9"
									},
									"scope": 2683,
									"src": "2557:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1856,
										"nodeType": "Block",
										"src": "2845:82:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1844,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1837,
																	"src": "2900:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1845,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1839,
																	"src": "2904:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1847,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1848,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1837,
																		"src": "2910:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1849,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1839,
																		"src": "2914:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1851,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1843,
												"id": 1855,
												"nodeType": "Return",
												"src": "2892:28:9"
											}
										]
									},
									"documentation": {
										"id": 1835,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:9",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "2791:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "2802:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:9"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "2836:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:9"
									},
									"scope": 2683,
									"src": "2774:153:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "3219:260:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1867,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "3233:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1868,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1875,
												"nodeType": "IfStatement",
												"src": "3229:127:9",
												"trueBody": {
													"id": 1874,
													"nodeType": "Block",
													"src": "3241:115:9",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1870,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1860,
																	"src": "3340:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1871,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1862,
																	"src": "3344:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1866,
															"id": 1873,
															"nodeType": "Return",
															"src": "3333:12:9"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1876,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1860,
															"src": "3444:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1880,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1860,
																			"src": "3458:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1883,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1884,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "3467:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:9",
													"trueExpression": {
														"hexValue": "30",
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1866,
												"id": 1889,
												"nodeType": "Return",
												"src": "3437:35:9"
											}
										]
									},
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:9",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "3165:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "3176:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:9"
									},
									"returnParameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "3210:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:9"
									},
									"scope": 2683,
									"src": "3148:331:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2016,
										"nodeType": "Block",
										"src": "3901:4018:9",
										"statements": [
											{
												"id": 2015,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:9",
												"statements": [
													{
														"assignments": [
															1904
														],
														"declarations": [
															{
																"constant": false,
																"id": 1904,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 2015,
																"src": "4232:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1903,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1908,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1905,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1894,
																"src": "4248:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1906,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1896,
																"src": "4252:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:9"
													},
													{
														"assignments": [
															1910
														],
														"declarations": [
															{
																"constant": false,
																"id": 1910,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 2015,
																"src": "4312:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1909,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1911,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:9"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:9",
															"nodeType": "YulBlock",
															"src": "4392:122:9",
															"statements": [
																{
																	"nativeSrc": "4410:30:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:9"
																				},
																				"nativeSrc": "4433:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:9"
																		},
																		"nativeSrc": "4420:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:9"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:9",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:9",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:9"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:9"
																				},
																				"nativeSrc": "4470:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:9"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:9"
																				},
																				"nativeSrc": "4486:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:9"
																		},
																		"nativeSrc": "4466:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1910,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1894,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1896,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:9",
																"valueSize": 1
															}
														],
														"id": 1912,
														"nodeType": "InlineAssembly",
														"src": "4383:131:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1913,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1910,
																"src": "4595:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1921,
														"nodeType": "IfStatement",
														"src": "4591:368:9",
														"trueBody": {
															"id": 1920,
															"nodeType": "Block",
															"src": "4607:352:9",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1916,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "4925:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1917,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1898,
																			"src": "4933:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1902,
																	"id": 1919,
																	"nodeType": "Return",
																	"src": "4918:26:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1922,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "5065:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1923,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1910,
																"src": "5080:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1929,
														"nodeType": "IfStatement",
														"src": "5061:88:9",
														"trueBody": {
															"id": 1928,
															"nodeType": "Block",
															"src": "5087:62:9",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1925,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1635,
																			"src": "5112:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1926,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1927,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:9"
																}
															]
														}
													},
													{
														"assignments": [
															1931
														],
														"declarations": [
															{
																"constant": false,
																"id": 1931,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:9",
																"nodeType": "VariableDeclaration",
																"scope": 2015,
																"src": "5404:17:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1930,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1932,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:9"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:9",
															"nodeType": "YulBlock",
															"src": "5444:291:9",
															"statements": [
																{
																	"nativeSrc": "5513:38:9",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:9"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:9"
																		},
																		"nativeSrc": "5526:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:9"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:9",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:9"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:9",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:9"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:9"
																				},
																				"nativeSrc": "5653:20:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:9"
																		},
																		"nativeSrc": "5642:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:9",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:9"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:9"
																		},
																		"nativeSrc": "5700:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1898,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1910,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1910,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1931,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1931,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1931,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1894,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1896,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:9",
																"valueSize": 1
															}
														],
														"id": 1933,
														"nodeType": "InlineAssembly",
														"src": "5435:300:9"
													},
													{
														"assignments": [
															1935
														],
														"declarations": [
															{
																"constant": false,
																"id": 1935,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:9",
																"nodeType": "VariableDeclaration",
																"scope": 2015,
																"src": "5939:12:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1934,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1942,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1936,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "5954:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1938,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1898,
																			"src": "5973:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1940,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:9"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:9",
															"nodeType": "YulBlock",
															"src": "6008:362:9",
															"statements": [
																{
																	"nativeSrc": "6073:37:9",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:9"
																		},
																		"nativeSrc": "6088:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:9"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:9",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:9"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:9",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:9"
																		},
																		"nativeSrc": "6186:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:9",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:9",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:9",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:9"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:9"
																						},
																						"nativeSrc": "6333:12:9",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:9"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:9"
																				},
																				"nativeSrc": "6329:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:9"
																		},
																		"nativeSrc": "6325:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:9"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:9",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1898,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1898,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1904,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1935,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:9",
																"valueSize": 1
															}
														],
														"id": 1943,
														"nodeType": "InlineAssembly",
														"src": "5999:371:9"
													},
													{
														"expression": {
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1944,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "6436:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1945,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1910,
																	"src": "6445:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1946,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1935,
																	"src": "6453:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1949,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:9"
													},
													{
														"assignments": [
															1951
														],
														"declarations": [
															{
																"constant": false,
																"id": 1951,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:9",
																"nodeType": "VariableDeclaration",
																"scope": 2015,
																"src": "6775:15:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1950,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1958,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1953,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1898,
																			"src": "6798:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1955,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:9"
													},
													{
														"expression": {
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1959,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "7031:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1961,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "7046:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1962,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "7060:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1966,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:9"
													},
													{
														"expression": {
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1967,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "7100:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1969,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "7115:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1970,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "7129:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1974,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:9"
													},
													{
														"expression": {
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1975,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "7170:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1977,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "7185:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1978,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "7199:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1982,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:9"
													},
													{
														"expression": {
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1983,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "7240:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1985,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "7255:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1986,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "7269:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1990,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:9"
													},
													{
														"expression": {
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1991,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "7310:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1992,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1993,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "7325:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1994,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "7339:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1998,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:9"
													},
													{
														"expression": {
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1999,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "7381:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2001,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "7396:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2002,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "7410:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2006,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:9"
													},
													{
														"expression": {
															"id": 2011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2007,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1901,
																"src": "7851:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2008,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1904,
																	"src": "7860:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2009,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1951,
																	"src": "7868:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2012,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:9"
													},
													{
														"expression": {
															"id": 2013,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1901,
															"src": "7896:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1902,
														"id": 2014,
														"nodeType": "Return",
														"src": "7889:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:9",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "3819:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "3830:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "3841:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:9"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2017,
												"src": "3885:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:9"
									},
									"scope": 2683,
									"src": "3803:4116:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2059,
										"nodeType": "Block",
										"src": "8161:192:9",
										"statements": [
											{
												"assignments": [
													2033
												],
												"declarations": [
													{
														"constant": false,
														"id": 2033,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2059,
														"src": "8171:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2032,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2039,
												"initialValue": {
													"arguments": [
														{
															"id": 2035,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2020,
															"src": "8195:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2036,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2022,
															"src": "8198:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2037,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "8201:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2034,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2017,
															2060
														],
														"referencedDeclaration": 2017,
														"src": "8188:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2041,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2027,
																"src": "8244:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1640",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1640",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2040,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2682,
															"src": "8227:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1640_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2042,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2044,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2020,
																	"src": "8264:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2045,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2022,
																	"src": "8267:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2046,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2024,
																	"src": "8270:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2043,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2056,
												"nodeType": "IfStatement",
												"src": "8223:101:9",
												"trueBody": {
													"id": 2055,
													"nodeType": "Block",
													"src": "8288:36:9",
													"statements": [
														{
															"expression": {
																"id": 2053,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2051,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2033,
																	"src": "8302:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2054,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2057,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2033,
													"src": "8340:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2031,
												"id": 2058,
												"nodeType": "Return",
												"src": "8333:13:9"
											}
										]
									},
									"documentation": {
										"id": 2018,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:9",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "8067:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "8078:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "8089:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "8110:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1640",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2026,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2025,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1640,
														"src": "8110:8:9"
													},
													"referencedDeclaration": 1640,
													"src": "8110:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1640",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:9"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "8152:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:9"
									},
									"scope": 2683,
									"src": "8051:302:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2171,
										"nodeType": "Block",
										"src": "8644:1585:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2068,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2063,
														"src": "8658:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2074,
												"nodeType": "IfStatement",
												"src": "8654:45:9",
												"trueBody": {
													"id": 2073,
													"nodeType": "Block",
													"src": "8666:33:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2067,
															"id": 2072,
															"nodeType": "Return",
															"src": "8680:8:9"
														}
													]
												}
											},
											{
												"assignments": [
													2076
												],
												"declarations": [
													{
														"constant": false,
														"id": 2076,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2171,
														"src": "9378:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2075,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2085,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2077,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2079,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2063,
																			"src": "9406:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2078,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2339,
																			2374
																		],
																		"referencedDeclaration": 2339,
																		"src": "9401:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2083,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:9"
											},
											{
												"id": 2170,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:9",
												"statements": [
													{
														"expression": {
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2086,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "9839:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2087,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "9849:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2088,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "9858:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2089,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "9862:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2092,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2096,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:9"
													},
													{
														"expression": {
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2097,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "9888:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2098,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "9898:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2099,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "9907:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2100,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "9911:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2103,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2107,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:9"
													},
													{
														"expression": {
															"id": 2117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2108,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "9937:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2109,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "9947:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2112,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2110,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "9956:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2111,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "9960:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2114,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2118,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:9"
													},
													{
														"expression": {
															"id": 2128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2119,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "9986:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2120,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "9996:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2123,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2121,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "10005:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2122,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "10009:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2125,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2129,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:9"
													},
													{
														"expression": {
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2130,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "10035:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2131,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "10045:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2132,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "10054:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2133,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "10058:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2136,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2140,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:9"
													},
													{
														"expression": {
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2141,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "10084:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2142,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "10094:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2145,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2143,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "10103:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2144,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "10107:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2147,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2151,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:9"
													},
													{
														"expression": {
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2152,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2076,
																"src": "10133:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2153,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "10143:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2154,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "10152:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2155,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "10156:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2158,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2162,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:9"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2164,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2076,
																	"src": "10193:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2165,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2063,
																		"src": "10201:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2166,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2076,
																		"src": "10205:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2163,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1834,
																"src": "10189:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2067,
														"id": 2169,
														"nodeType": "Return",
														"src": "10182:30:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2061,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:9",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "8601:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:9"
									},
									"returnParameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2172,
												"src": "8635:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:9"
									},
									"scope": 2683,
									"src": "8587:1642:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2206,
										"nodeType": "Block",
										"src": "10405:164:9",
										"statements": [
											{
												"id": 2205,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:9",
												"statements": [
													{
														"assignments": [
															2184
														],
														"declarations": [
															{
																"constant": false,
																"id": 2184,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2205,
																"src": "10439:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2183,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2188,
														"initialValue": {
															"arguments": [
																{
																	"id": 2186,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2175,
																	"src": "10461:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2185,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2172,
																	2207
																],
																"referencedDeclaration": 2172,
																"src": "10456:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2189,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2184,
																"src": "10484:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2191,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2178,
																						"src": "10511:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2190,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2682,
																					"src": "10494:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1640_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2192,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2197,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2195,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2193,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2184,
																						"src": "10524:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2194,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2184,
																						"src": "10533:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2196,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2175,
																					"src": "10542:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2202,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2182,
														"id": 2204,
														"nodeType": "Return",
														"src": "10477:75:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2173,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:9",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "10343:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "10354:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1640",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2177,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2176,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1640,
														"src": "10354:8:9"
													},
													"referencedDeclaration": 1640,
													"src": "10354:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1640",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:9"
									},
									"returnParameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "10396:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:9"
									},
									"scope": 2683,
									"src": "10329:240:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2338,
										"nodeType": "Block",
										"src": "10760:922:9",
										"statements": [
											{
												"assignments": [
													2216
												],
												"declarations": [
													{
														"constant": false,
														"id": 2216,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2338,
														"src": "10770:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2215,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2218,
												"initialValue": {
													"hexValue": "30",
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:9"
											},
											{
												"id": 2335,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2219,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "10826:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2233,
														"nodeType": "IfStatement",
														"src": "10822:99:9",
														"trueBody": {
															"id": 2232,
															"nodeType": "Block",
															"src": "10844:77:9",
															"statements": [
																{
																	"expression": {
																		"id": 2226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2224,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "10862:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2227,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:9"
																},
																{
																	"expression": {
																		"id": 2230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2228,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "10893:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2231,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2234,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "10938:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2248,
														"nodeType": "IfStatement",
														"src": "10934:96:9",
														"trueBody": {
															"id": 2247,
															"nodeType": "Block",
															"src": "10955:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2239,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "10973:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2242,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:9"
																},
																{
																	"expression": {
																		"id": 2245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2243,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11003:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2246,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2249,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "11047:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2263,
														"nodeType": "IfStatement",
														"src": "11043:96:9",
														"trueBody": {
															"id": 2262,
															"nodeType": "Block",
															"src": "11064:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2256,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2254,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "11082:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2255,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2257,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:9"
																},
																{
																	"expression": {
																		"id": 2260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2258,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11112:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2261,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2264,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "11156:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2278,
														"nodeType": "IfStatement",
														"src": "11152:96:9",
														"trueBody": {
															"id": 2277,
															"nodeType": "Block",
															"src": "11173:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2269,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "11191:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2272,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:9"
																},
																{
																	"expression": {
																		"id": 2275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2273,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11221:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2276,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2279,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "11265:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2293,
														"nodeType": "IfStatement",
														"src": "11261:93:9",
														"trueBody": {
															"id": 2292,
															"nodeType": "Block",
															"src": "11281:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2284,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "11299:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2287,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:9"
																},
																{
																	"expression": {
																		"id": 2290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2288,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11328:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2291,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2294,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "11371:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2308,
														"nodeType": "IfStatement",
														"src": "11367:93:9",
														"trueBody": {
															"id": 2307,
															"nodeType": "Block",
															"src": "11387:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2299,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "11405:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2300,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2302,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:9"
																},
																{
																	"expression": {
																		"id": 2305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2303,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11434:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2306,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2309,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "11477:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2323,
														"nodeType": "IfStatement",
														"src": "11473:93:9",
														"trueBody": {
															"id": 2322,
															"nodeType": "Block",
															"src": "11493:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2314,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2210,
																			"src": "11511:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2317,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:9"
																},
																{
																	"expression": {
																		"id": 2320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2318,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11540:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2321,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2324,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "11583:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2334,
														"nodeType": "IfStatement",
														"src": "11579:64:9",
														"trueBody": {
															"id": 2333,
															"nodeType": "Block",
															"src": "11599:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2331,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2329,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2216,
																			"src": "11617:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2332,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2336,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2216,
													"src": "11669:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2214,
												"id": 2337,
												"nodeType": "Return",
												"src": "11662:13:9"
											}
										]
									},
									"documentation": {
										"id": 2208,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:9",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "10713:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:9"
									},
									"returnParameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "10751:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:9"
									},
									"scope": 2683,
									"src": "10699:983:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2373,
										"nodeType": "Block",
										"src": "11915:168:9",
										"statements": [
											{
												"id": 2372,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:9",
												"statements": [
													{
														"assignments": [
															2351
														],
														"declarations": [
															{
																"constant": false,
																"id": 2351,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2372,
																"src": "11949:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2350,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2355,
														"initialValue": {
															"arguments": [
																{
																	"id": 2353,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2342,
																	"src": "11971:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2352,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2339,
																	2374
																],
																"referencedDeclaration": 2339,
																"src": "11966:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2356,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2351,
																"src": "11998:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2358,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2345,
																						"src": "12025:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2357,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2682,
																					"src": "12008:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1640_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2359,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2362,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2360,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2361,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2351,
																						"src": "12043:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2363,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2342,
																					"src": "12052:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2369,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2349,
														"id": 2371,
														"nodeType": "Return",
														"src": "11991:75:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2340,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:9",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "11849:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "11864:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1640",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2344,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2343,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1640,
														"src": "11864:8:9"
													},
													"referencedDeclaration": 1640,
													"src": "11864:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1640",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:9"
									},
									"returnParameters": {
										"id": 2349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2374,
												"src": "11906:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:9"
									},
									"scope": 2683,
									"src": "11835:248:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2502,
										"nodeType": "Block",
										"src": "12276:854:9",
										"statements": [
											{
												"assignments": [
													2383
												],
												"declarations": [
													{
														"constant": false,
														"id": 2383,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2502,
														"src": "12286:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2382,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2385,
												"initialValue": {
													"hexValue": "30",
													"id": 2384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:9"
											},
											{
												"id": 2499,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2386,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "12342:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2402,
														"nodeType": "IfStatement",
														"src": "12338:103:9",
														"trueBody": {
															"id": 2401,
															"nodeType": "Block",
															"src": "12361:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2391,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "12379:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2396,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:9"
																},
																{
																	"expression": {
																		"id": 2399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2397,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "12414:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2400,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2403,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "12458:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2419,
														"nodeType": "IfStatement",
														"src": "12454:103:9",
														"trueBody": {
															"id": 2418,
															"nodeType": "Block",
															"src": "12477:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2408,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "12495:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2409,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2410,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2413,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:9"
																},
																{
																	"expression": {
																		"id": 2416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2414,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "12530:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2417,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2420,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "12574:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2436,
														"nodeType": "IfStatement",
														"src": "12570:103:9",
														"trueBody": {
															"id": 2435,
															"nodeType": "Block",
															"src": "12593:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2425,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "12611:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2427,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2430,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:9"
																},
																{
																	"expression": {
																		"id": 2433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2431,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "12646:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2434,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2437,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "12690:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2453,
														"nodeType": "IfStatement",
														"src": "12686:100:9",
														"trueBody": {
															"id": 2452,
															"nodeType": "Block",
															"src": "12708:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2442,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "12726:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2447,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:9"
																},
																{
																	"expression": {
																		"id": 2450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2448,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "12760:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2451,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2454,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "12803:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2456,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2470,
														"nodeType": "IfStatement",
														"src": "12799:100:9",
														"trueBody": {
															"id": 2469,
															"nodeType": "Block",
															"src": "12821:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2459,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "12839:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2461,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2464,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:9"
																},
																{
																	"expression": {
																		"id": 2467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2465,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "12873:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2468,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2471,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "12916:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2474,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2487,
														"nodeType": "IfStatement",
														"src": "12912:100:9",
														"trueBody": {
															"id": 2486,
															"nodeType": "Block",
															"src": "12934:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2476,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "12952:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2477,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2478,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2481,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:9"
																},
																{
																	"expression": {
																		"id": 2484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2482,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "12986:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2485,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2488,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2377,
																"src": "13029:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2498,
														"nodeType": "IfStatement",
														"src": "13025:66:9",
														"trueBody": {
															"id": 2497,
															"nodeType": "Block",
															"src": "13047:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2493,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2383,
																			"src": "13065:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2496,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2500,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2383,
													"src": "13117:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2381,
												"id": 2501,
												"nodeType": "Return",
												"src": "13110:13:9"
											}
										]
									},
									"documentation": {
										"id": 2375,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:9",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "12229:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:9"
									},
									"returnParameters": {
										"id": 2381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2503,
												"src": "12267:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:9"
									},
									"scope": 2683,
									"src": "12214:916:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2537,
										"nodeType": "Block",
										"src": "13365:170:9",
										"statements": [
											{
												"id": 2536,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:9",
												"statements": [
													{
														"assignments": [
															2515
														],
														"declarations": [
															{
																"constant": false,
																"id": 2515,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2536,
																"src": "13399:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2514,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2519,
														"initialValue": {
															"arguments": [
																{
																	"id": 2517,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2506,
																	"src": "13422:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2516,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2503,
																	2538
																],
																"referencedDeclaration": 2503,
																"src": "13416:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2520,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2515,
																"src": "13449:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2522,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2509,
																						"src": "13476:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2521,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2682,
																					"src": "13459:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1640_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2526,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2524,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2525,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2515,
																						"src": "13495:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2527,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2506,
																					"src": "13504:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2533,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2513,
														"id": 2535,
														"nodeType": "Return",
														"src": "13442:76:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2504,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:9",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "13299:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2509,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "13314:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1640",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2507,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1640,
														"src": "13314:8:9"
													},
													"referencedDeclaration": 1640,
													"src": "13314:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1640",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:9"
									},
									"returnParameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "13356:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:9"
									},
									"scope": 2683,
									"src": "13284:251:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2624,
										"nodeType": "Block",
										"src": "13855:600:9",
										"statements": [
											{
												"assignments": [
													2547
												],
												"declarations": [
													{
														"constant": false,
														"id": 2547,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2624,
														"src": "13865:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2546,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2549,
												"initialValue": {
													"hexValue": "30",
													"id": 2548,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:9"
											},
											{
												"id": 2621,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2550,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2541,
																	"src": "13921:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2564,
														"nodeType": "IfStatement",
														"src": "13917:98:9",
														"trueBody": {
															"id": 2563,
															"nodeType": "Block",
															"src": "13939:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 2557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2555,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "13957:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2558,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:9"
																},
																{
																	"expression": {
																		"id": 2561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2559,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2547,
																			"src": "13988:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2562,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2565,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2541,
																	"src": "14032:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2579,
														"nodeType": "IfStatement",
														"src": "14028:95:9",
														"trueBody": {
															"id": 2578,
															"nodeType": "Block",
															"src": "14049:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2570,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "14067:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2573,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:9"
																},
																{
																	"expression": {
																		"id": 2576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2574,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2547,
																			"src": "14097:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2577,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2580,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2541,
																	"src": "14140:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2594,
														"nodeType": "IfStatement",
														"src": "14136:95:9",
														"trueBody": {
															"id": 2593,
															"nodeType": "Block",
															"src": "14157:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "14175:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2588,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:9"
																},
																{
																	"expression": {
																		"id": 2591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2589,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2547,
																			"src": "14205:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2592,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2595,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2541,
																	"src": "14248:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2609,
														"nodeType": "IfStatement",
														"src": "14244:95:9",
														"trueBody": {
															"id": 2608,
															"nodeType": "Block",
															"src": "14265:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2600,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "14283:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2603,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:9"
																},
																{
																	"expression": {
																		"id": 2606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2604,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2547,
																			"src": "14313:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2607,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2610,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2541,
																	"src": "14356:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2613,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2620,
														"nodeType": "IfStatement",
														"src": "14352:64:9",
														"trueBody": {
															"id": 2619,
															"nodeType": "Block",
															"src": "14372:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2615,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2547,
																			"src": "14390:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2618,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2622,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2547,
													"src": "14442:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2545,
												"id": 2623,
												"nodeType": "Return",
												"src": "14435:13:9"
											}
										]
									},
									"documentation": {
										"id": 2539,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:9",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2625,
												"src": "13808:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:9"
									},
									"returnParameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2625,
												"src": "13846:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:9"
									},
									"scope": 2683,
									"src": "13792:663:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2662,
										"nodeType": "Block",
										"src": "14692:177:9",
										"statements": [
											{
												"id": 2661,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:9",
												"statements": [
													{
														"assignments": [
															2637
														],
														"declarations": [
															{
																"constant": false,
																"id": 2637,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2661,
																"src": "14726:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2636,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2641,
														"initialValue": {
															"arguments": [
																{
																	"id": 2639,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2628,
																	"src": "14750:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2638,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2625,
																	2663
																],
																"referencedDeclaration": 2625,
																"src": "14743:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2642,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2637,
																"src": "14777:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2644,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2631,
																						"src": "14804:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1640",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2643,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2682,
																					"src": "14787:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1640_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2645,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2651,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2646,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2649,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2647,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2637,
																									"src": "14823:6:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2648,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2650,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2652,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2628,
																					"src": "14838:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2658,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2635,
														"id": 2660,
														"nodeType": "Return",
														"src": "14770:82:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2626,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:9",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "14626:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2631,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "14641:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1640",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2630,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2629,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1640,
														"src": "14641:8:9"
													},
													"referencedDeclaration": 1640,
													"src": "14641:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1640",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:9"
									},
									"returnParameters": {
										"id": 2635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "14683:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:9"
									},
									"scope": 2683,
									"src": "14610:259:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2681,
										"nodeType": "Block",
										"src": "15067:48:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2677,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2674,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2667,
																	"src": "15090:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1640",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1640",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2672,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2671,
												"id": 2680,
												"nodeType": "Return",
												"src": "15077:31:9"
											}
										]
									},
									"documentation": {
										"id": 2664,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:9",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "15019:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1640",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2665,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1640,
														"src": "15019:8:9"
													},
													"referencedDeclaration": 1640,
													"src": "15019:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1640",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:9"
									},
									"returnParameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "15061:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:9"
									},
									"scope": 2683,
									"src": "14993:122:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2684,
							"src": "203:14914:9",
							"usedErrors": [
								1635
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2788
						]
					},
					"id": 2789,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2685,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2686,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:10",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2788,
							"linearizedBaseContracts": [
								2788
							],
							"name": "SignedMath",
							"nameLocation": "224:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2703,
										"nodeType": "Block",
										"src": "376:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2696,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2689,
															"src": "393:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2697,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2691,
															"src": "397:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2700,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2691,
														"src": "405:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:10",
													"trueExpression": {
														"id": 2699,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2689,
														"src": "401:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2695,
												"id": 2702,
												"nodeType": "Return",
												"src": "386:20:10"
											}
										]
									},
									"documentation": {
										"id": 2687,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:10",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "325:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2688,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2691,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "335:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2690,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:10"
									},
									"returnParameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2704,
												"src": "368:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2693,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:10"
									},
									"scope": 2788,
									"src": "312:101:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2721,
										"nodeType": "Block",
										"src": "555:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2714,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2707,
															"src": "572:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2715,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2709,
															"src": "576:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2718,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2709,
														"src": "584:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:10",
													"trueExpression": {
														"id": 2717,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2707,
														"src": "580:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2713,
												"id": 2720,
												"nodeType": "Return",
												"src": "565:20:10"
											}
										]
									},
									"documentation": {
										"id": 2705,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:10",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2707,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "504:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2706,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2709,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "514:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2708,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:10"
									},
									"returnParameters": {
										"id": 2713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2722,
												"src": "547:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2711,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:10"
									},
									"scope": 2788,
									"src": "491:101:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2765,
										"nodeType": "Block",
										"src": "797:162:10",
										"statements": [
											{
												"assignments": [
													2733
												],
												"declarations": [
													{
														"constant": false,
														"id": 2733,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 2765,
														"src": "859:8:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2732,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2746,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2734,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2725,
																	"src": "871:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2735,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2727,
																	"src": "875:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2737,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2738,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2725,
																				"src": "882:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2739,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2727,
																				"src": "886:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2741,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2744,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2747,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2733,
														"src": "911:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2752,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2733,
																						"src": "931:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2751,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2750,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2753,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2754,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2748,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2757,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2725,
																				"src": "945:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2758,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2727,
																				"src": "949:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2760,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2762,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2731,
												"id": 2764,
												"nodeType": "Return",
												"src": "904:48:10"
											}
										]
									},
									"documentation": {
										"id": 2723,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:10",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2725,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "746:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2724,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "756:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2726,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:10"
									},
									"returnParameters": {
										"id": 2731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2766,
												"src": "789:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2729,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:10"
									},
									"scope": 2788,
									"src": "729:230:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2786,
										"nodeType": "Block",
										"src": "1103:158:10",
										"statements": [
											{
												"id": 2785,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2776,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2769,
																			"src": "1228:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:10",
																		"subExpression": {
																			"id": 2780,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2769,
																			"src": "1242:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:10",
																	"trueExpression": {
																		"id": 2779,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2769,
																		"src": "1237:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2774,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2773,
														"id": 2784,
														"nodeType": "Return",
														"src": "1213:31:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2767,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:10",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2769,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "1061:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2768,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:10"
									},
									"returnParameters": {
										"id": 2773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "1094:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:10"
									},
									"scope": 2788,
									"src": "1048:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2789,
							"src": "216:1047:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/structs/EnumerableMap.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
					"exportedSymbols": {
						"EnumerableMap": [
							3903
						],
						"EnumerableSet": [
							4516
						]
					},
					"id": 3904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2790,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "205:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"file": "./EnumerableSet.sol",
							"id": 2792,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3904,
							"sourceUnit": 4517,
							"src": "231:50:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2791,
										"name": "EnumerableSet",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 4516,
										"src": "239:13:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableMap",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2793,
								"nodeType": "StructuredDocumentation",
								"src": "283:1367:11",
								"text": " @dev Library for managing an enumerable variant of Solidity's\n https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n type.\n Maps have the following properties:\n - Entries are added, removed, and checked for existence in constant time\n (O(1)).\n - Entries are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableMap for EnumerableMap.UintToAddressMap;\n     // Declare a set state variable\n     EnumerableMap.UintToAddressMap private myMap;\n }\n ```\n The following map types are supported:\n - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\n - `address -> uint256` (`AddressToUintMap`) since v4.6.0\n - `bytes32 -> bytes32` (`Bytes32ToBytes32Map`) since v4.6.0\n - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0\n - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableMap.\n ===="
							},
							"fullyImplemented": true,
							"id": 3903,
							"linearizedBaseContracts": [
								3903
							],
							"name": "EnumerableMap",
							"nameLocation": "1659:13:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2797,
									"libraryName": {
										"id": 2794,
										"name": "EnumerableSet",
										"nameLocations": [
											"1685:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 4516,
										"src": "1685:13:11"
									},
									"nodeType": "UsingForDirective",
									"src": "1679:49:11",
									"typeName": {
										"id": 2796,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2795,
											"name": "EnumerableSet.Bytes32Set",
											"nameLocations": [
												"1703:13:11",
												"1717:10:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 4108,
											"src": "1703:24:11"
										},
										"referencedDeclaration": 4108,
										"src": "1703:24:11",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
											"typeString": "struct EnumerableSet.Bytes32Set"
										}
									}
								},
								{
									"documentation": {
										"id": 2798,
										"nodeType": "StructuredDocumentation",
										"src": "2161:56:11",
										"text": " @dev Query for a nonexistent map key."
									},
									"errorSelector": "02b56686",
									"id": 2802,
									"name": "EnumerableMapNonexistentKey",
									"nameLocation": "2228:27:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2800,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2264:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "2256:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2799,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:13:11"
									},
									"src": "2222:47:11"
								},
								{
									"canonicalName": "EnumerableMap.Bytes32ToBytes32Map",
									"id": 2810,
									"members": [
										{
											"constant": false,
											"id": 2805,
											"mutability": "mutable",
											"name": "_keys",
											"nameLocation": "2364:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 2810,
											"src": "2339:30:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
												"typeString": "struct EnumerableSet.Bytes32Set"
											},
											"typeName": {
												"id": 2804,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2803,
													"name": "EnumerableSet.Bytes32Set",
													"nameLocations": [
														"2339:13:11",
														"2353:10:11"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 4108,
													"src": "2339:24:11"
												},
												"referencedDeclaration": 4108,
												"src": "2339:24:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2809,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "2411:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 2810,
											"src": "2379:39:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
												"typeString": "mapping(bytes32 => bytes32)"
											},
											"typeName": {
												"id": 2808,
												"keyName": "key",
												"keyNameLocation": "2395:3:11",
												"keyType": {
													"id": 2806,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2387:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2379:31:11",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
													"typeString": "mapping(bytes32 => bytes32)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2807,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2402:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32ToBytes32Map",
									"nameLocation": "2282:19:11",
									"nodeType": "StructDefinition",
									"scope": 3903,
									"src": "2275:150:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2837,
										"nodeType": "Block",
										"src": "2750:76:11",
										"statements": [
											{
												"expression": {
													"id": 2829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 2823,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2814,
																"src": "2760:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2764:7:11",
															"memberName": "_values",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2809,
															"src": "2760:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																"typeString": "mapping(bytes32 => bytes32)"
															}
														},
														"id": 2827,
														"indexExpression": {
															"id": 2825,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2816,
															"src": "2772:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2760:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2828,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2818,
														"src": "2779:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2760:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2830,
												"nodeType": "ExpressionStatement",
												"src": "2760:24:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2834,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2816,
															"src": "2815:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"expression": {
																"id": 2831,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2814,
																"src": "2801:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 2832,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2805:5:11",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2805,
															"src": "2801:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 2833,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2811:3:11",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4126,
														"src": "2801:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$4108_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$4108_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2801:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2822,
												"id": 2836,
												"nodeType": "Return",
												"src": "2794:25:11"
											}
										]
									},
									"documentation": {
										"id": 2811,
										"nodeType": "StructuredDocumentation",
										"src": "2431:216:11",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 2838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "2661:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2814,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "2693:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "2665:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 2813,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2812,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"2665:19:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2810,
														"src": "2665:19:11"
													},
													"referencedDeclaration": 2810,
													"src": "2665:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2816,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2706:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "2698:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2815,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2698:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2719:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "2711:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2817,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2664:61:11"
									},
									"returnParameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2838,
												"src": "2744:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2820,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2744:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:6:11"
									},
									"scope": 3903,
									"src": "2652:174:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2861,
										"nodeType": "Block",
										"src": "3080:78:11",
										"statements": [
											{
												"expression": {
													"id": 2853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "3090:23:11",
													"subExpression": {
														"baseExpression": {
															"expression": {
																"id": 2849,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2842,
																"src": "3097:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 2850,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3101:7:11",
															"memberName": "_values",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2809,
															"src": "3097:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																"typeString": "mapping(bytes32 => bytes32)"
															}
														},
														"id": 2852,
														"indexExpression": {
															"id": 2851,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2844,
															"src": "3109:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3097:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2854,
												"nodeType": "ExpressionStatement",
												"src": "3090:23:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2858,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2844,
															"src": "3147:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"expression": {
																"id": 2855,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2842,
																"src": "3130:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 2856,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3134:5:11",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2805,
															"src": "3130:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 2857,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3140:6:11",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4144,
														"src": "3130:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32Set_$4108_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$4108_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 2859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3130:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2848,
												"id": 2860,
												"nodeType": "Return",
												"src": "3123:28:11"
											}
										]
									},
									"documentation": {
										"id": 2839,
										"nodeType": "StructuredDocumentation",
										"src": "2832:157:11",
										"text": " @dev Removes a key-value pair from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 2862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "3003:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2842,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "3038:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "3010:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 2841,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2840,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"3010:19:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2810,
														"src": "3010:19:11"
													},
													"referencedDeclaration": 2810,
													"src": "3010:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2844,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3051:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "3043:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2843,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3043:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3009:46:11"
									},
									"returnParameters": {
										"id": 2848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "3074:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2846,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3074:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:6:11"
									},
									"scope": 3903,
									"src": "2994:164:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2879,
										"nodeType": "Block",
										"src": "3330:47:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2876,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2868,
															"src": "3366:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"expression": {
																"id": 2873,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2866,
																"src": "3347:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 2874,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3351:5:11",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2805,
															"src": "3347:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 2875,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3357:8:11",
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4162,
														"src": "3347:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$4108_storage_ptr_$_t_bytes32_$returns$_t_bool_$attached_to$_t_struct$_Bytes32Set_$4108_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 2877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3347:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2872,
												"id": 2878,
												"nodeType": "Return",
												"src": "3340:30:11"
											}
										]
									},
									"documentation": {
										"id": 2863,
										"nodeType": "StructuredDocumentation",
										"src": "3164:68:11",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 2880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "3246:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "3283:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "3255:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 2865,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2864,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"3255:19:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2810,
														"src": "3255:19:11"
													},
													"referencedDeclaration": 2810,
													"src": "3255:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3296:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "3288:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2867,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3288:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:46:11"
									},
									"returnParameters": {
										"id": 2872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "3324:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2870,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3324:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3323:6:11"
									},
									"scope": 3903,
									"src": "3237:140:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2894,
										"nodeType": "Block",
										"src": "3548:42:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 2889,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2884,
																"src": "3565:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 2890,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3569:5:11",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2805,
															"src": "3565:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 2891,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3575:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4177,
														"src": "3565:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$4108_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Bytes32Set_$4108_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"
														}
													},
													"id": 2892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3565:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2888,
												"id": 2893,
												"nodeType": "Return",
												"src": "3558:25:11"
											}
										]
									},
									"documentation": {
										"id": 2881,
										"nodeType": "StructuredDocumentation",
										"src": "3383:79:11",
										"text": " @dev Returns the number of key-value pairs in the map. O(1)."
									},
									"id": 2895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "3476:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2884,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "3511:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "3483:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 2883,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2882,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"3483:19:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2810,
														"src": "3483:19:11"
													},
													"referencedDeclaration": 2810,
													"src": "3483:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:33:11"
									},
									"returnParameters": {
										"id": 2888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "3539:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:11"
									},
									"scope": 3903,
									"src": "3467:123:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2923,
										"nodeType": "Block",
										"src": "4044:90:11",
										"statements": [
											{
												"assignments": [
													2909
												],
												"declarations": [
													{
														"constant": false,
														"id": 2909,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "4062:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 2923,
														"src": "4054:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2908,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4054:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2915,
												"initialValue": {
													"arguments": [
														{
															"id": 2913,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2901,
															"src": "4081:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2910,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2899,
																"src": "4068:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 2911,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4072:5:11",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2805,
															"src": "4068:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 2912,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4078:2:11",
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4195,
														"src": "4068:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$4108_storage_ptr_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_struct$_Bytes32Set_$4108_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 2914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4068:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4054:33:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2916,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2909,
															"src": "4105:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"baseExpression": {
																"expression": {
																	"id": 2917,
																	"name": "map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2899,
																	"src": "4110:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																	}
																},
																"id": 2918,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4114:7:11",
																"memberName": "_values",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2809,
																"src": "4110:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
																	"typeString": "mapping(bytes32 => bytes32)"
																}
															},
															"id": 2920,
															"indexExpression": {
																"id": 2919,
																"name": "key",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2909,
																"src": "4122:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4110:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 2921,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "4104:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"functionReturnParameters": 2907,
												"id": 2922,
												"nodeType": "Return",
												"src": "4097:30:11"
											}
										]
									},
									"documentation": {
										"id": 2896,
										"nodeType": "StructuredDocumentation",
										"src": "3596:342:11",
										"text": " @dev Returns the key-value pair stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of entries inside the\n array, and it may change when more entries are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 2924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "3952:2:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2899,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "3983:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "3955:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 2898,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2897,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"3955:19:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2810,
														"src": "3955:19:11"
													},
													"referencedDeclaration": 2810,
													"src": "3955:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "3996:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "3988:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3988:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3954:48:11"
									},
									"returnParameters": {
										"id": 2907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "4026:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2903,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4026:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2906,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "4035:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2905,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4035:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4025:18:11"
									},
									"scope": 3903,
									"src": "3943:191:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2967,
										"nodeType": "Block",
										"src": "4375:198:11",
										"statements": [
											{
												"assignments": [
													2938
												],
												"declarations": [
													{
														"constant": false,
														"id": 2938,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "4393:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 2967,
														"src": "4385:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2937,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4385:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2943,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 2939,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2928,
															"src": "4401:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
															}
														},
														"id": 2940,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4405:7:11",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2809,
														"src": "4401:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
															"typeString": "mapping(bytes32 => bytes32)"
														}
													},
													"id": 2942,
													"indexExpression": {
														"id": 2941,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2930,
														"src": "4413:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4401:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4385:32:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 2949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2944,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2938,
														"src": "4431:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4448:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4440:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_bytes32_$",
																"typeString": "type(bytes32)"
															},
															"typeName": {
																"id": 2945,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "4440:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 2948,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4440:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "4431:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2965,
													"nodeType": "Block",
													"src": "4522:45:11",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4544:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"id": 2962,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2938,
																		"src": "4550:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2963,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4543:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
																	"typeString": "tuple(bool,bytes32)"
																}
															},
															"functionReturnParameters": 2936,
															"id": 2964,
															"nodeType": "Return",
															"src": "4536:20:11"
														}
													]
												},
												"id": 2966,
												"nodeType": "IfStatement",
												"src": "4427:140:11",
												"trueBody": {
													"id": 2960,
													"nodeType": "Block",
													"src": "4452:64:11",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"id": 2951,
																				"name": "map",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2928,
																				"src": "4483:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
																					"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																				}
																			},
																			{
																				"id": 2952,
																				"name": "key",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2930,
																				"src": "4488:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
																					"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																				},
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 2950,
																			"name": "contains",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				2880,
																				3093,
																				3309,
																				3555,
																				3774
																			],
																			"referencedDeclaration": 2880,
																			"src": "4474:8:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																				"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
																			}
																		},
																		"id": 2953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4474:18:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2956,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4502:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4494:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 2954,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "4494:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4494:10:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 2958,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4473:32:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
																	"typeString": "tuple(bool,bytes32)"
																}
															},
															"functionReturnParameters": 2936,
															"id": 2959,
															"nodeType": "Return",
															"src": "4466:39:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2925,
										"nodeType": "StructuredDocumentation",
										"src": "4140:130:11",
										"text": " @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 2968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "4284:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2928,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "4319:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "4291:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 2927,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2926,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"4291:19:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2810,
														"src": "4291:19:11"
													},
													"referencedDeclaration": 2810,
													"src": "4291:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4332:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "4324:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2929,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4324:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4290:46:11"
									},
									"returnParameters": {
										"id": 2936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "4360:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2932,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4360:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2968,
												"src": "4366:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2934,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4359:15:11"
									},
									"scope": 3903,
									"src": "4275:298:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3003,
										"nodeType": "Block",
										"src": "4815:183:11",
										"statements": [
											{
												"assignments": [
													2980
												],
												"declarations": [
													{
														"constant": false,
														"id": 2980,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "4833:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 3003,
														"src": "4825:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2979,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4825:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2985,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 2981,
															"name": "map",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2972,
															"src": "4841:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
															}
														},
														"id": 2982,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4845:7:11",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2809,
														"src": "4841:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
															"typeString": "mapping(bytes32 => bytes32)"
														}
													},
													"id": 2984,
													"indexExpression": {
														"id": 2983,
														"name": "key",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2974,
														"src": "4853:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4841:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4825:32:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2986,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2980,
															"src": "4871:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4880:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4871:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 2993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4885:19:11",
														"subExpression": {
															"arguments": [
																{
																	"id": 2990,
																	"name": "map",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2972,
																	"src": "4895:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																	}
																},
																{
																	"id": 2991,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2974,
																	"src": "4900:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 2989,
																"name": "contains",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2880,
																	3093,
																	3309,
																	3555,
																	3774
																],
																"referencedDeclaration": 2880,
																"src": "4886:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
																}
															},
															"id": 2992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4886:18:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4871:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3000,
												"nodeType": "IfStatement",
												"src": "4867:103:11",
												"trueBody": {
													"id": 2999,
													"nodeType": "Block",
													"src": "4906:64:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2996,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2974,
																		"src": "4955:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 2995,
																	"name": "EnumerableMapNonexistentKey",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2802,
																	"src": "4927:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32) pure"
																	}
																},
																"id": 2997,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4927:32:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2998,
															"nodeType": "RevertStatement",
															"src": "4920:39:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3001,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2980,
													"src": "4986:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 2978,
												"id": 3002,
												"nodeType": "Return",
												"src": "4979:12:11"
											}
										]
									},
									"documentation": {
										"id": 2969,
										"nodeType": "StructuredDocumentation",
										"src": "4579:140:11",
										"text": " @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 3004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "4733:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2972,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "4765:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3004,
												"src": "4737:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 2971,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2970,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"4737:19:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2810,
														"src": "4737:19:11"
													},
													"referencedDeclaration": 2810,
													"src": "4737:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2974,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "4778:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3004,
												"src": "4770:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2973,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4736:46:11"
									},
									"returnParameters": {
										"id": 2978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3004,
												"src": "4806:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2976,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4806:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4805:9:11"
									},
									"scope": 3903,
									"src": "4724:274:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3019,
										"nodeType": "Block",
										"src": "5636:42:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"id": 3014,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3008,
																"src": "5653:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage pointer"
																}
															},
															"id": 3015,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5657:5:11",
															"memberName": "_keys",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2805,
															"src": "5653:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage",
																"typeString": "struct EnumerableSet.Bytes32Set storage ref"
															}
														},
														"id": 3016,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5663:6:11",
														"memberName": "values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4225,
														"src": "5653:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32Set_$4108_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$attached_to$_t_struct$_Bytes32Set_$4108_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.Bytes32Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 3017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5653:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 3013,
												"id": 3018,
												"nodeType": "Return",
												"src": "5646:25:11"
											}
										]
									},
									"documentation": {
										"id": 3005,
										"nodeType": "StructuredDocumentation",
										"src": "5004:539:11",
										"text": " @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "keys",
									"nameLocation": "5557:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3008,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "5590:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "5562:31:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												},
												"typeName": {
													"id": 3007,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3006,
														"name": "Bytes32ToBytes32Map",
														"nameLocations": [
															"5562:19:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2810,
														"src": "5562:19:11"
													},
													"referencedDeclaration": 2810,
													"src": "5562:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5561:33:11"
									},
									"returnParameters": {
										"id": 3013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "5618:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 3010,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5618:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 3011,
													"nodeType": "ArrayTypeName",
													"src": "5618:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5617:18:11"
									},
									"scope": 3903,
									"src": "5548:130:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.UintToUintMap",
									"id": 3024,
									"members": [
										{
											"constant": false,
											"id": 3023,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5757:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 3024,
											"src": "5737:26:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 3022,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3021,
													"name": "Bytes32ToBytes32Map",
													"nameLocations": [
														"5737:19:11"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2810,
													"src": "5737:19:11"
												},
												"referencedDeclaration": 2810,
												"src": "5737:19:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintToUintMap",
									"nameLocation": "5713:13:11",
									"nodeType": "StructDefinition",
									"scope": 3903,
									"src": "5706:64:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3050,
										"nodeType": "Block",
										"src": "6089:69:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3038,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3028,
																"src": "6110:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 3039,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6114:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3023,
															"src": "6110:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3042,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3030,
																	"src": "6130:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6122:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3040,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6122:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6122:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 3046,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3032,
																	"src": "6144:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6136:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3044,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6136:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6136:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3037,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2838,
															3051,
															3267,
															3501,
															3738
														],
														"referencedDeclaration": 2838,
														"src": "6106:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 3048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6106:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3036,
												"id": 3049,
												"nodeType": "Return",
												"src": "6099:52:11"
											}
										]
									},
									"documentation": {
										"id": 3025,
										"nodeType": "StructuredDocumentation",
										"src": "5776:216:11",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 3051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "6006:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3028,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "6032:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "6010:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 3027,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3026,
														"name": "UintToUintMap",
														"nameLocations": [
															"6010:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3024,
														"src": "6010:13:11"
													},
													"referencedDeclaration": 3024,
													"src": "6010:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3030,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "6045:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "6037:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6037:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3032,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6058:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "6050:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6009:55:11"
									},
									"returnParameters": {
										"id": 3036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "6083:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3034,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6083:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:6:11"
									},
									"scope": 3903,
									"src": "5997:161:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3071,
										"nodeType": "Block",
										"src": "6397:56:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3063,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3055,
																"src": "6421:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 3064,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6425:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3023,
															"src": "6421:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3067,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3057,
																	"src": "6441:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6433:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3065,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6433:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6433:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3062,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2862,
															3072,
															3288,
															3528,
															3756
														],
														"referencedDeclaration": 2862,
														"src": "6414:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6414:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3061,
												"id": 3070,
												"nodeType": "Return",
												"src": "6407:39:11"
											}
										]
									},
									"documentation": {
										"id": 3052,
										"nodeType": "StructuredDocumentation",
										"src": "6164:148:11",
										"text": " @dev Removes a value from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 3072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6326:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3055,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "6355:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3072,
												"src": "6333:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 3054,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3053,
														"name": "UintToUintMap",
														"nameLocations": [
															"6333:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3024,
														"src": "6333:13:11"
													},
													"referencedDeclaration": 3024,
													"src": "6333:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3057,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "6368:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3072,
												"src": "6360:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6360:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6332:40:11"
									},
									"returnParameters": {
										"id": 3061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3072,
												"src": "6391:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3059,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6391:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6390:6:11"
									},
									"scope": 3903,
									"src": "6317:136:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3092,
										"nodeType": "Block",
										"src": "6619:58:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3084,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3076,
																"src": "6645:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 3085,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6649:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3023,
															"src": "6645:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3088,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3078,
																	"src": "6665:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6657:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3086,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6657:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6657:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3083,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2880,
															3093,
															3309,
															3555,
															3774
														],
														"referencedDeclaration": 2880,
														"src": "6636:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 3090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6636:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3082,
												"id": 3091,
												"nodeType": "Return",
												"src": "6629:41:11"
											}
										]
									},
									"documentation": {
										"id": 3073,
										"nodeType": "StructuredDocumentation",
										"src": "6459:68:11",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 3093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6541:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3076,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "6572:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3093,
												"src": "6550:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 3075,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3074,
														"name": "UintToUintMap",
														"nameLocations": [
															"6550:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3024,
														"src": "6550:13:11"
													},
													"referencedDeclaration": 3024,
													"src": "6550:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3078,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "6585:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3093,
												"src": "6577:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6549:40:11"
									},
									"returnParameters": {
										"id": 3082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3093,
												"src": "6613:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3080,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6613:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6612:6:11"
									},
									"scope": 3903,
									"src": "6532:145:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3107,
										"nodeType": "Block",
										"src": "6835:42:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3103,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3097,
																"src": "6859:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 3104,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6863:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3023,
															"src": "6859:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 3102,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2895,
															3108,
															3324,
															3570,
															3789
														],
														"referencedDeclaration": 2895,
														"src": "6852:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 3105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6852:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3101,
												"id": 3106,
												"nodeType": "Return",
												"src": "6845:25:11"
											}
										]
									},
									"documentation": {
										"id": 3094,
										"nodeType": "StructuredDocumentation",
										"src": "6683:72:11",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 3108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6769:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3097,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "6798:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "6776:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 3096,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3095,
														"name": "UintToUintMap",
														"nameLocations": [
															"6776:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3024,
														"src": "6776:13:11"
													},
													"referencedDeclaration": 3024,
													"src": "6776:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:27:11"
									},
									"returnParameters": {
										"id": 3101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3108,
												"src": "6826:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6826:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6825:9:11"
									},
									"scope": 3903,
									"src": "6760:117:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3141,
										"nodeType": "Block",
										"src": "7309:116:11",
										"statements": [
											{
												"assignments": [
													3122,
													3124
												],
												"declarations": [
													{
														"constant": false,
														"id": 3122,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "7328:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 3141,
														"src": "7320:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3121,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7320:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3124,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "7341:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 3141,
														"src": "7333:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3123,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7333:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3130,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3126,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3112,
																"src": "7353:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 3127,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7357:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3023,
															"src": "7353:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 3128,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3114,
															"src": "7365:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3125,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2924,
															3142,
															3364,
															3610,
															3820
														],
														"referencedDeclaration": 2924,
														"src": "7350:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 3129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7350:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7319:52:11"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 3133,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3122,
																	"src": "7397:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 3132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7389:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3131,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7389:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7389:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 3137,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3124,
																	"src": "7411:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 3136,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7403:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3135,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7403:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7403:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 3139,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7388:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 3120,
												"id": 3140,
												"nodeType": "Return",
												"src": "7381:37:11"
											}
										]
									},
									"documentation": {
										"id": 3109,
										"nodeType": "StructuredDocumentation",
										"src": "6883:326:11",
										"text": " @dev Returns the element stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 3142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7223:2:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3112,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "7248:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3142,
												"src": "7226:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 3111,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3110,
														"name": "UintToUintMap",
														"nameLocations": [
															"7226:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3024,
														"src": "7226:13:11"
													},
													"referencedDeclaration": 3024,
													"src": "7226:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3114,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7261:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3142,
												"src": "7253:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7253:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7225:42:11"
									},
									"returnParameters": {
										"id": 3120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3142,
												"src": "7291:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7291:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3142,
												"src": "7300:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7300:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7290:18:11"
									},
									"scope": 3903,
									"src": "7214:211:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3175,
										"nodeType": "Block",
										"src": "7660:123:11",
										"statements": [
											{
												"assignments": [
													3156,
													3158
												],
												"declarations": [
													{
														"constant": false,
														"id": 3156,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7676:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 3175,
														"src": "7671:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3155,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7671:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3158,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "7693:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 3175,
														"src": "7685:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3157,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7685:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3167,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3160,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3146,
																"src": "7709:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 3161,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7713:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3023,
															"src": "7709:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3164,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3148,
																	"src": "7729:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3163,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7721:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3162,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7721:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7721:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3159,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2968,
															3176,
															3404,
															3650,
															3851
														],
														"referencedDeclaration": 2968,
														"src": "7702:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 3166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7702:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7670:64:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 3168,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3156,
															"src": "7752:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 3171,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3158,
																	"src": "7769:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 3170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7761:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3169,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7761:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7761:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 3173,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7751:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 3154,
												"id": 3174,
												"nodeType": "Return",
												"src": "7744:32:11"
											}
										]
									},
									"documentation": {
										"id": 3143,
										"nodeType": "StructuredDocumentation",
										"src": "7431:130:11",
										"text": " @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 3176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "7575:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3146,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "7604:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3176,
												"src": "7582:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 3145,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3144,
														"name": "UintToUintMap",
														"nameLocations": [
															"7582:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3024,
														"src": "7582:13:11"
													},
													"referencedDeclaration": 3024,
													"src": "7582:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3148,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "7617:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3176,
												"src": "7609:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7609:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7581:40:11"
									},
									"returnParameters": {
										"id": 3154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3176,
												"src": "7645:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7645:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3176,
												"src": "7651:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7651:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7644:15:11"
									},
									"scope": 3903,
									"src": "7566:217:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3199,
										"nodeType": "Block",
										"src": "8019:62:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3190,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3180,
																		"src": "8048:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
																			"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																		}
																	},
																	"id": 3191,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8052:6:11",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3023,
																	"src": "8048:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3194,
																			"name": "key",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3182,
																			"src": "8068:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8060:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 3192,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "8060:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8060:12:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 3189,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3004,
																	3200,
																	3434,
																	3680,
																	3872
																],
																"referencedDeclaration": 3004,
																"src": "8044:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																}
															},
															"id": 3196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8044:29:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8036:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3187,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8036:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8036:38:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3186,
												"id": 3198,
												"nodeType": "Return",
												"src": "8029:45:11"
											}
										]
									},
									"documentation": {
										"id": 3177,
										"nodeType": "StructuredDocumentation",
										"src": "7789:140:11",
										"text": " @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 3200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "7943:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3180,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "7969:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3200,
												"src": "7947:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 3179,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3178,
														"name": "UintToUintMap",
														"nameLocations": [
															"7947:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3024,
														"src": "7947:13:11"
													},
													"referencedDeclaration": 3024,
													"src": "7947:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3182,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "7982:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3200,
												"src": "7974:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7974:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7946:40:11"
									},
									"returnParameters": {
										"id": 3186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3200,
												"src": "8010:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8010:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8009:9:11"
									},
									"scope": 3903,
									"src": "7934:147:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3229,
										"nodeType": "Block",
										"src": "8713:216:11",
										"statements": [
											{
												"assignments": [
													3214
												],
												"declarations": [
													{
														"constant": false,
														"id": 3214,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "8740:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 3229,
														"src": "8723:22:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 3212,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "8723:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3213,
															"nodeType": "ArrayTypeName",
															"src": "8723:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3219,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3216,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3204,
																"src": "8753:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToUintMap storage pointer"
																}
															},
															"id": 3217,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8757:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3023,
															"src": "8753:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 3215,
														"name": "keys",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3020,
															3230,
															3464,
															3710,
															3902
														],
														"referencedDeclaration": 3020,
														"src": "8748:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 3218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8748:16:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8723:41:11"
											},
											{
												"assignments": [
													3224
												],
												"declarations": [
													{
														"constant": false,
														"id": 3224,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8791:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 3229,
														"src": "8774:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3222,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8774:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3223,
															"nodeType": "ArrayTypeName",
															"src": "8774:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3225,
												"nodeType": "VariableDeclarationStatement",
												"src": "8774:23:11"
											},
											{
												"AST": {
													"nativeSrc": "8860:39:11",
													"nodeType": "YulBlock",
													"src": "8860:39:11",
													"statements": [
														{
															"nativeSrc": "8874:15:11",
															"nodeType": "YulAssignment",
															"src": "8874:15:11",
															"value": {
																"name": "store",
																"nativeSrc": "8884:5:11",
																"nodeType": "YulIdentifier",
																"src": "8884:5:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8874:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8874:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3224,
														"isOffset": false,
														"isSlot": false,
														"src": "8874:6:11",
														"valueSize": 1
													},
													{
														"declaration": 3214,
														"isOffset": false,
														"isSlot": false,
														"src": "8884:5:11",
														"valueSize": 1
													}
												],
												"id": 3226,
												"nodeType": "InlineAssembly",
												"src": "8851:48:11"
											},
											{
												"expression": {
													"id": 3227,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3224,
													"src": "8916:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 3209,
												"id": 3228,
												"nodeType": "Return",
												"src": "8909:13:11"
											}
										]
									},
									"documentation": {
										"id": 3201,
										"nodeType": "StructuredDocumentation",
										"src": "8087:539:11",
										"text": " @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "keys",
									"nameLocation": "8640:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3204,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "8667:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3230,
												"src": "8645:25:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
													"typeString": "struct EnumerableMap.UintToUintMap"
												},
												"typeName": {
													"id": 3203,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3202,
														"name": "UintToUintMap",
														"nameLocations": [
															"8645:13:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3024,
														"src": "8645:13:11"
													},
													"referencedDeclaration": 3024,
													"src": "8645:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToUintMap_$3024_storage_ptr",
														"typeString": "struct EnumerableMap.UintToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8644:27:11"
									},
									"returnParameters": {
										"id": 3209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3230,
												"src": "8695:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3206,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8695:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3207,
													"nodeType": "ArrayTypeName",
													"src": "8695:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8694:18:11"
									},
									"scope": 3903,
									"src": "8631:298:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.UintToAddressMap",
									"id": 3234,
									"members": [
										{
											"constant": false,
											"id": 3233,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "9014:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 3234,
											"src": "8994:26:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 3232,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3231,
													"name": "Bytes32ToBytes32Map",
													"nameLocations": [
														"8994:19:11"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2810,
													"src": "8994:19:11"
												},
												"referencedDeclaration": 2810,
												"src": "8994:19:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintToAddressMap",
									"nameLocation": "8967:16:11",
									"nodeType": "StructDefinition",
									"scope": 3903,
									"src": "8960:67:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3266,
										"nodeType": "Block",
										"src": "9349:87:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3248,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3238,
																"src": "9370:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 3249,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9374:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3233,
															"src": "9370:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3252,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3240,
																	"src": "9390:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9382:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3250,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "9382:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9382:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3260,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3242,
																					"src": "9420:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3259,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9412:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 3258,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "9412:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9412:14:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 3257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9404:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3256,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9404:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9404:23:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9396:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3254,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "9396:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9396:32:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3247,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2838,
															3051,
															3267,
															3501,
															3738
														],
														"referencedDeclaration": 2838,
														"src": "9366:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 3264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9366:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3246,
												"id": 3265,
												"nodeType": "Return",
												"src": "9359:70:11"
											}
										]
									},
									"documentation": {
										"id": 3235,
										"nodeType": "StructuredDocumentation",
										"src": "9033:216:11",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 3267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "9263:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3238,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "9292:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3267,
												"src": "9267:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 3237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3236,
														"name": "UintToAddressMap",
														"nameLocations": [
															"9267:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3234,
														"src": "9267:16:11"
													},
													"referencedDeclaration": 3234,
													"src": "9267:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3240,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "9305:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3267,
												"src": "9297:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9297:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9318:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3267,
												"src": "9310:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9310:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9266:58:11"
									},
									"returnParameters": {
										"id": 3246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3267,
												"src": "9343:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9343:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9342:6:11"
									},
									"scope": 3903,
									"src": "9254:182:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3287,
										"nodeType": "Block",
										"src": "9678:56:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3279,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3271,
																"src": "9702:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 3280,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9706:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3233,
															"src": "9702:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3283,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3273,
																	"src": "9722:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9714:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3281,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "9714:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9714:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3278,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2862,
															3072,
															3288,
															3528,
															3756
														],
														"referencedDeclaration": 2862,
														"src": "9695:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9695:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3277,
												"id": 3286,
												"nodeType": "Return",
												"src": "9688:39:11"
											}
										]
									},
									"documentation": {
										"id": 3268,
										"nodeType": "StructuredDocumentation",
										"src": "9442:148:11",
										"text": " @dev Removes a value from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 3288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "9604:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3271,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "9636:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3288,
												"src": "9611:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 3270,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3269,
														"name": "UintToAddressMap",
														"nameLocations": [
															"9611:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3234,
														"src": "9611:16:11"
													},
													"referencedDeclaration": 3234,
													"src": "9611:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3273,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "9649:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3288,
												"src": "9641:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9641:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9610:43:11"
									},
									"returnParameters": {
										"id": 3277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3288,
												"src": "9672:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9672:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9671:6:11"
									},
									"scope": 3903,
									"src": "9595:139:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3308,
										"nodeType": "Block",
										"src": "9903:58:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3300,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3292,
																"src": "9929:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 3301,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9933:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3233,
															"src": "9929:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3304,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3294,
																	"src": "9949:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9941:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3302,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "9941:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9941:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3299,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2880,
															3093,
															3309,
															3555,
															3774
														],
														"referencedDeclaration": 2880,
														"src": "9920:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 3306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9920:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3298,
												"id": 3307,
												"nodeType": "Return",
												"src": "9913:41:11"
											}
										]
									},
									"documentation": {
										"id": 3289,
										"nodeType": "StructuredDocumentation",
										"src": "9740:68:11",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 3309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "9822:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3292,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "9856:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3309,
												"src": "9831:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 3291,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3290,
														"name": "UintToAddressMap",
														"nameLocations": [
															"9831:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3234,
														"src": "9831:16:11"
													},
													"referencedDeclaration": 3234,
													"src": "9831:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3294,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "9869:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3309,
												"src": "9861:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9861:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9830:43:11"
									},
									"returnParameters": {
										"id": 3298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3309,
												"src": "9897:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3296,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9897:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9896:6:11"
									},
									"scope": 3903,
									"src": "9813:148:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3323,
										"nodeType": "Block",
										"src": "10122:42:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3319,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3313,
																"src": "10146:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 3320,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10150:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3233,
															"src": "10146:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 3318,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2895,
															3108,
															3324,
															3570,
															3789
														],
														"referencedDeclaration": 2895,
														"src": "10139:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 3321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10139:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3317,
												"id": 3322,
												"nodeType": "Return",
												"src": "10132:25:11"
											}
										]
									},
									"documentation": {
										"id": 3310,
										"nodeType": "StructuredDocumentation",
										"src": "9967:72:11",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 3324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "10053:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3313,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "10085:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3324,
												"src": "10060:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 3312,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3311,
														"name": "UintToAddressMap",
														"nameLocations": [
															"10060:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3234,
														"src": "10060:16:11"
													},
													"referencedDeclaration": 3234,
													"src": "10060:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10059:30:11"
									},
									"returnParameters": {
										"id": 3317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3324,
												"src": "10113:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10113:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10112:9:11"
									},
									"scope": 3903,
									"src": "10044:120:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3363,
										"nodeType": "Block",
										"src": "10599:134:11",
										"statements": [
											{
												"assignments": [
													3338,
													3340
												],
												"declarations": [
													{
														"constant": false,
														"id": 3338,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "10618:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 3363,
														"src": "10610:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3337,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10610:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3340,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "10631:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 3363,
														"src": "10623:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3339,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10623:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3346,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3342,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3328,
																"src": "10643:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 3343,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10647:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3233,
															"src": "10643:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 3344,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3330,
															"src": "10655:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3341,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2924,
															3142,
															3364,
															3610,
															3820
														],
														"referencedDeclaration": 2924,
														"src": "10640:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 3345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10640:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10609:52:11"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"id": 3349,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3338,
																	"src": "10687:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 3348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10679:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3347,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10679:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10679:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3357,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3340,
																					"src": "10717:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 3356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "10709:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 3355,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10709:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10709:14:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10701:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 3353,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "10701:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10701:23:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 3352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10693:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3351,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10693:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10693:32:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 3361,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10678:48:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"functionReturnParameters": 3336,
												"id": 3362,
												"nodeType": "Return",
												"src": "10671:55:11"
											}
										]
									},
									"documentation": {
										"id": 3325,
										"nodeType": "StructuredDocumentation",
										"src": "10170:326:11",
										"text": " @dev Returns the element stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 3364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "10510:2:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3328,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "10538:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3364,
												"src": "10513:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 3327,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3326,
														"name": "UintToAddressMap",
														"nameLocations": [
															"10513:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3234,
														"src": "10513:16:11"
													},
													"referencedDeclaration": 3234,
													"src": "10513:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3330,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "10551:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3364,
												"src": "10543:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10543:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10512:45:11"
									},
									"returnParameters": {
										"id": 3336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3364,
												"src": "10581:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10581:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3364,
												"src": "10590:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10590:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10580:18:11"
									},
									"scope": 3903,
									"src": "10501:232:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3403,
										"nodeType": "Block",
										"src": "10971:141:11",
										"statements": [
											{
												"assignments": [
													3378,
													3380
												],
												"declarations": [
													{
														"constant": false,
														"id": 3378,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10987:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 3403,
														"src": "10982:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3377,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10982:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3380,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "11004:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 3403,
														"src": "10996:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3379,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "10996:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3389,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3382,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3368,
																"src": "11020:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 3383,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11024:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3233,
															"src": "11020:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 3386,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3370,
																	"src": "11040:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11032:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3384,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11032:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11032:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3381,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2968,
															3176,
															3404,
															3650,
															3851
														],
														"referencedDeclaration": 2968,
														"src": "11013:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 3388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11013:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10981:64:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 3390,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3378,
															"src": "11063:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3397,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3380,
																					"src": "11096:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 3396,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "11088:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 3395,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "11088:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11088:14:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11080:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 3393,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "11080:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11080:23:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 3392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11072:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3391,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11072:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11072:32:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 3401,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "11062:43:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_address_$",
														"typeString": "tuple(bool,address)"
													}
												},
												"functionReturnParameters": 3376,
												"id": 3402,
												"nodeType": "Return",
												"src": "11055:50:11"
											}
										]
									},
									"documentation": {
										"id": 3365,
										"nodeType": "StructuredDocumentation",
										"src": "10739:130:11",
										"text": " @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 3404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "10883:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3368,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "10915:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3404,
												"src": "10890:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 3367,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3366,
														"name": "UintToAddressMap",
														"nameLocations": [
															"10890:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3234,
														"src": "10890:16:11"
													},
													"referencedDeclaration": 3234,
													"src": "10890:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3370,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "10928:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3404,
												"src": "10920:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10920:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10889:43:11"
									},
									"returnParameters": {
										"id": 3376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3404,
												"src": "10956:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3372,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10956:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3404,
												"src": "10962:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10962:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10955:15:11"
									},
									"scope": 3903,
									"src": "10874:238:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3433,
										"nodeType": "Block",
										"src": "11351:80:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 3422,
																						"name": "map",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3408,
																						"src": "11396:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
																							"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																						}
																					},
																					"id": 3423,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "11400:6:11",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3233,
																					"src": "11396:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																						"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 3426,
																							"name": "key",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3410,
																							"src": "11416:3:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 3425,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "11408:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes32_$",
																							"typeString": "type(bytes32)"
																						},
																						"typeName": {
																							"id": 3424,
																							"name": "bytes32",
																							"nodeType": "ElementaryTypeName",
																							"src": "11408:7:11",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 3427,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11408:12:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																						"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																					},
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 3421,
																				"name": "get",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					3004,
																					3200,
																					3434,
																					3680,
																					3872
																				],
																				"referencedDeclaration": 3004,
																				"src": "11392:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																				}
																			},
																			"id": 3428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11392:29:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 3420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11384:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3419,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11384:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11384:38:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11376:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 3417,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "11376:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11376:47:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 3416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11368:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 3415,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11368:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11368:56:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3414,
												"id": 3432,
												"nodeType": "Return",
												"src": "11361:63:11"
											}
										]
									},
									"documentation": {
										"id": 3405,
										"nodeType": "StructuredDocumentation",
										"src": "11118:140:11",
										"text": " @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 3434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "11272:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3408,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "11301:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3434,
												"src": "11276:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 3407,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3406,
														"name": "UintToAddressMap",
														"nameLocations": [
															"11276:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3234,
														"src": "11276:16:11"
													},
													"referencedDeclaration": 3234,
													"src": "11276:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3410,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "11314:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3434,
												"src": "11306:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11306:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11275:43:11"
									},
									"returnParameters": {
										"id": 3414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3434,
												"src": "11342:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11342:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11341:9:11"
									},
									"scope": 3903,
									"src": "11263:168:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3463,
										"nodeType": "Block",
										"src": "12066:216:11",
										"statements": [
											{
												"assignments": [
													3448
												],
												"declarations": [
													{
														"constant": false,
														"id": 3448,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12093:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 3463,
														"src": "12076:22:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 3446,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12076:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3447,
															"nodeType": "ArrayTypeName",
															"src": "12076:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3453,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3450,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3438,
																"src": "12106:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
																	"typeString": "struct EnumerableMap.UintToAddressMap storage pointer"
																}
															},
															"id": 3451,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12110:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3233,
															"src": "12106:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 3449,
														"name": "keys",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3020,
															3230,
															3464,
															3710,
															3902
														],
														"referencedDeclaration": 3020,
														"src": "12101:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 3452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12101:16:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12076:41:11"
											},
											{
												"assignments": [
													3458
												],
												"declarations": [
													{
														"constant": false,
														"id": 3458,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12144:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 3463,
														"src": "12127:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 3456,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12127:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3457,
															"nodeType": "ArrayTypeName",
															"src": "12127:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3459,
												"nodeType": "VariableDeclarationStatement",
												"src": "12127:23:11"
											},
											{
												"AST": {
													"nativeSrc": "12213:39:11",
													"nodeType": "YulBlock",
													"src": "12213:39:11",
													"statements": [
														{
															"nativeSrc": "12227:15:11",
															"nodeType": "YulAssignment",
															"src": "12227:15:11",
															"value": {
																"name": "store",
																"nativeSrc": "12237:5:11",
																"nodeType": "YulIdentifier",
																"src": "12237:5:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12227:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12227:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3458,
														"isOffset": false,
														"isSlot": false,
														"src": "12227:6:11",
														"valueSize": 1
													},
													{
														"declaration": 3448,
														"isOffset": false,
														"isSlot": false,
														"src": "12237:5:11",
														"valueSize": 1
													}
												],
												"id": 3460,
												"nodeType": "InlineAssembly",
												"src": "12204:48:11"
											},
											{
												"expression": {
													"id": 3461,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3458,
													"src": "12269:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 3443,
												"id": 3462,
												"nodeType": "Return",
												"src": "12262:13:11"
											}
										]
									},
									"documentation": {
										"id": 3435,
										"nodeType": "StructuredDocumentation",
										"src": "11437:539:11",
										"text": " @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "keys",
									"nameLocation": "11990:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3438,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "12020:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3464,
												"src": "11995:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
													"typeString": "struct EnumerableMap.UintToAddressMap"
												},
												"typeName": {
													"id": 3437,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3436,
														"name": "UintToAddressMap",
														"nameLocations": [
															"11995:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3234,
														"src": "11995:16:11"
													},
													"referencedDeclaration": 3234,
													"src": "11995:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
														"typeString": "struct EnumerableMap.UintToAddressMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11994:30:11"
									},
									"returnParameters": {
										"id": 3443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3464,
												"src": "12048:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3440,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12048:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3441,
													"nodeType": "ArrayTypeName",
													"src": "12048:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12047:18:11"
									},
									"scope": 3903,
									"src": "11981:301:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.AddressToUintMap",
									"id": 3468,
									"members": [
										{
											"constant": false,
											"id": 3467,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "12367:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 3468,
											"src": "12347:26:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 3466,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3465,
													"name": "Bytes32ToBytes32Map",
													"nameLocations": [
														"12347:19:11"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2810,
													"src": "12347:19:11"
												},
												"referencedDeclaration": 2810,
												"src": "12347:19:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressToUintMap",
									"nameLocation": "12320:16:11",
									"nodeType": "StructDefinition",
									"scope": 3903,
									"src": "12313:67:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3500,
										"nodeType": "Block",
										"src": "12702:87:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3482,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3472,
																"src": "12723:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 3483,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12727:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3467,
															"src": "12723:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3490,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3474,
																					"src": "12759:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3489,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "12751:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 3488,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "12751:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12751:12:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 3487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12743:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3486,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12743:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3492,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12743:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12735:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3484,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "12735:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12735:30:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 3496,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3476,
																	"src": "12775:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12767:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3494,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "12767:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12767:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3481,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2838,
															3051,
															3267,
															3501,
															3738
														],
														"referencedDeclaration": 2838,
														"src": "12719:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 3498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12719:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3480,
												"id": 3499,
												"nodeType": "Return",
												"src": "12712:70:11"
											}
										]
									},
									"documentation": {
										"id": 3469,
										"nodeType": "StructuredDocumentation",
										"src": "12386:216:11",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 3501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "12616:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3472,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "12645:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3501,
												"src": "12620:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 3471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3470,
														"name": "AddressToUintMap",
														"nameLocations": [
															"12620:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3468,
														"src": "12620:16:11"
													},
													"referencedDeclaration": 3468,
													"src": "12620:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3474,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "12658:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3501,
												"src": "12650:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12650:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3476,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12671:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3501,
												"src": "12663:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12663:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12619:58:11"
									},
									"returnParameters": {
										"id": 3480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3501,
												"src": "12696:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3478,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12696:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12695:6:11"
									},
									"scope": 3903,
									"src": "12607:182:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3527,
										"nodeType": "Block",
										"src": "13031:74:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3513,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3505,
																"src": "13055:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 3514,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13059:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3467,
															"src": "13055:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3521,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3507,
																					"src": "13091:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3520,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13083:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 3519,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "13083:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13083:12:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 3518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13075:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3517,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "13075:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13075:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3516,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13067:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3515,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "13067:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13067:30:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3512,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2862,
															3072,
															3288,
															3528,
															3756
														],
														"referencedDeclaration": 2862,
														"src": "13048:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13048:50:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3511,
												"id": 3526,
												"nodeType": "Return",
												"src": "13041:57:11"
											}
										]
									},
									"documentation": {
										"id": 3502,
										"nodeType": "StructuredDocumentation",
										"src": "12795:148:11",
										"text": " @dev Removes a value from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 3528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "12957:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3505,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "12989:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3528,
												"src": "12964:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 3504,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3503,
														"name": "AddressToUintMap",
														"nameLocations": [
															"12964:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3468,
														"src": "12964:16:11"
													},
													"referencedDeclaration": 3468,
													"src": "12964:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3507,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "13002:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3528,
												"src": "12994:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12994:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12963:43:11"
									},
									"returnParameters": {
										"id": 3511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3528,
												"src": "13025:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13025:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13024:6:11"
									},
									"scope": 3903,
									"src": "12948:157:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3554,
										"nodeType": "Block",
										"src": "13274:76:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3540,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3532,
																"src": "13300:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 3541,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13304:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3467,
															"src": "13300:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3548,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3534,
																					"src": "13336:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3547,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "13328:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 3546,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "13328:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13328:12:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 3545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13320:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3544,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "13320:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13320:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13312:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3542,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "13312:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13312:30:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3539,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2880,
															3093,
															3309,
															3555,
															3774
														],
														"referencedDeclaration": 2880,
														"src": "13291:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 3552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13291:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3538,
												"id": 3553,
												"nodeType": "Return",
												"src": "13284:59:11"
											}
										]
									},
									"documentation": {
										"id": 3529,
										"nodeType": "StructuredDocumentation",
										"src": "13111:68:11",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 3555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "13193:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3532,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "13227:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3555,
												"src": "13202:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 3531,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3530,
														"name": "AddressToUintMap",
														"nameLocations": [
															"13202:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3468,
														"src": "13202:16:11"
													},
													"referencedDeclaration": 3468,
													"src": "13202:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3534,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "13240:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3555,
												"src": "13232:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13232:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13201:43:11"
									},
									"returnParameters": {
										"id": 3538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3555,
												"src": "13268:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13268:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13267:6:11"
									},
									"scope": 3903,
									"src": "13184:166:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3569,
										"nodeType": "Block",
										"src": "13511:42:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3565,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3559,
																"src": "13535:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 3566,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13539:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3467,
															"src": "13535:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 3564,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2895,
															3108,
															3324,
															3570,
															3789
														],
														"referencedDeclaration": 2895,
														"src": "13528:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 3567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13528:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3563,
												"id": 3568,
												"nodeType": "Return",
												"src": "13521:25:11"
											}
										]
									},
									"documentation": {
										"id": 3556,
										"nodeType": "StructuredDocumentation",
										"src": "13356:72:11",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 3570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "13442:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3559,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "13474:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3570,
												"src": "13449:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 3558,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3557,
														"name": "AddressToUintMap",
														"nameLocations": [
															"13449:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3468,
														"src": "13449:16:11"
													},
													"referencedDeclaration": 3468,
													"src": "13449:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13448:30:11"
									},
									"returnParameters": {
										"id": 3563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3570,
												"src": "13502:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13502:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13501:9:11"
									},
									"scope": 3903,
									"src": "13433:120:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3609,
										"nodeType": "Block",
										"src": "13988:134:11",
										"statements": [
											{
												"assignments": [
													3584,
													3586
												],
												"declarations": [
													{
														"constant": false,
														"id": 3584,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "14007:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 3609,
														"src": "13999:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3583,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "13999:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3586,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "14020:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 3609,
														"src": "14012:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3585,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14012:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3592,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3588,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3574,
																"src": "14032:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 3589,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14036:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3467,
															"src": "14032:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 3590,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3576,
															"src": "14044:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3587,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2924,
															3142,
															3364,
															3610,
															3820
														],
														"referencedDeclaration": 2924,
														"src": "14029:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 3591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14029:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13998:52:11"
											},
											{
												"expression": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3599,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3584,
																					"src": "14092:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 3598,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14084:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 3597,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "14084:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14084:12:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14076:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 3595,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "14076:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14076:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 3594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14068:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3593,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14068:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14068:30:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3605,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3586,
																	"src": "14108:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 3604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14100:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3603,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14100:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14100:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 3607,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14067:48:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 3582,
												"id": 3608,
												"nodeType": "Return",
												"src": "14060:55:11"
											}
										]
									},
									"documentation": {
										"id": 3571,
										"nodeType": "StructuredDocumentation",
										"src": "13559:326:11",
										"text": " @dev Returns the element stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 3610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "13899:2:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3574,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "13927:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3610,
												"src": "13902:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 3573,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3572,
														"name": "AddressToUintMap",
														"nameLocations": [
															"13902:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3468,
														"src": "13902:16:11"
													},
													"referencedDeclaration": 3468,
													"src": "13902:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3576,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13940:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3610,
												"src": "13932:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13932:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13901:45:11"
									},
									"returnParameters": {
										"id": 3582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3579,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3610,
												"src": "13970:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13970:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3610,
												"src": "13979:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13979:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13969:18:11"
									},
									"scope": 3903,
									"src": "13890:232:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3649,
										"nodeType": "Block",
										"src": "14360:141:11",
										"statements": [
											{
												"assignments": [
													3624,
													3626
												],
												"declarations": [
													{
														"constant": false,
														"id": 3624,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "14376:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 3649,
														"src": "14371:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3623,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14371:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3626,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "14393:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 3649,
														"src": "14385:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3625,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "14385:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3641,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3628,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3614,
																"src": "14409:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 3629,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14413:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3467,
															"src": "14409:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 3636,
																					"name": "key",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3616,
																					"src": "14445:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14437:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 3634,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "14437:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14437:12:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 3633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14429:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3632,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "14429:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14429:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14421:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3630,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "14421:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14421:30:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3627,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2968,
															3176,
															3404,
															3650,
															3851
														],
														"referencedDeclaration": 2968,
														"src": "14402:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 3640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14402:50:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14370:82:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 3642,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3624,
															"src": "14470:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 3645,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3626,
																	"src": "14487:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 3644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14479:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3643,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14479:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14479:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 3647,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14469:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 3622,
												"id": 3648,
												"nodeType": "Return",
												"src": "14462:32:11"
											}
										]
									},
									"documentation": {
										"id": 3611,
										"nodeType": "StructuredDocumentation",
										"src": "14128:130:11",
										"text": " @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 3650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "14272:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3614,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "14304:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3650,
												"src": "14279:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 3613,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3612,
														"name": "AddressToUintMap",
														"nameLocations": [
															"14279:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3468,
														"src": "14279:16:11"
													},
													"referencedDeclaration": 3468,
													"src": "14279:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3616,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "14317:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3650,
												"src": "14309:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14309:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14278:43:11"
									},
									"returnParameters": {
										"id": 3622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3650,
												"src": "14345:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3618,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14345:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3650,
												"src": "14351:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14351:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14344:15:11"
									},
									"scope": 3903,
									"src": "14263:238:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3679,
										"nodeType": "Block",
										"src": "14740:80:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3664,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3654,
																		"src": "14769:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
																			"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																		}
																	},
																	"id": 3665,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "14773:6:11",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3467,
																	"src": "14769:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 3672,
																							"name": "key",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3656,
																							"src": "14805:3:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 3671,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "14797:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 3670,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "14797:7:11",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 3673,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14797:12:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 3669,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "14789:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 3668,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "14789:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 3674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14789:21:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "14781:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes32_$",
																			"typeString": "type(bytes32)"
																		},
																		"typeName": {
																			"id": 3666,
																			"name": "bytes32",
																			"nodeType": "ElementaryTypeName",
																			"src": "14781:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14781:30:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 3663,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3004,
																	3200,
																	3434,
																	3680,
																	3872
																],
																"referencedDeclaration": 3004,
																"src": "14765:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																}
															},
															"id": 3676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14765:47:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14757:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3661,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14757:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14757:56:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3660,
												"id": 3678,
												"nodeType": "Return",
												"src": "14750:63:11"
											}
										]
									},
									"documentation": {
										"id": 3651,
										"nodeType": "StructuredDocumentation",
										"src": "14507:140:11",
										"text": " @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 3680,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "14661:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3654,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "14690:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3680,
												"src": "14665:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 3653,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3652,
														"name": "AddressToUintMap",
														"nameLocations": [
															"14665:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3468,
														"src": "14665:16:11"
													},
													"referencedDeclaration": 3468,
													"src": "14665:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3656,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "14703:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3680,
												"src": "14695:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14695:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14664:43:11"
									},
									"returnParameters": {
										"id": 3660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3680,
												"src": "14731:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14731:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14730:9:11"
									},
									"scope": 3903,
									"src": "14652:168:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3709,
										"nodeType": "Block",
										"src": "15455:216:11",
										"statements": [
											{
												"assignments": [
													3694
												],
												"declarations": [
													{
														"constant": false,
														"id": 3694,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "15482:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 3709,
														"src": "15465:22:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 3692,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "15465:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3693,
															"nodeType": "ArrayTypeName",
															"src": "15465:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3699,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3696,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3684,
																"src": "15495:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
																	"typeString": "struct EnumerableMap.AddressToUintMap storage pointer"
																}
															},
															"id": 3697,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15499:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3467,
															"src": "15495:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 3695,
														"name": "keys",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3020,
															3230,
															3464,
															3710,
															3902
														],
														"referencedDeclaration": 3020,
														"src": "15490:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 3698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15490:16:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15465:41:11"
											},
											{
												"assignments": [
													3704
												],
												"declarations": [
													{
														"constant": false,
														"id": 3704,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "15533:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 3709,
														"src": "15516:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 3702,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15516:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3703,
															"nodeType": "ArrayTypeName",
															"src": "15516:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3705,
												"nodeType": "VariableDeclarationStatement",
												"src": "15516:23:11"
											},
											{
												"AST": {
													"nativeSrc": "15602:39:11",
													"nodeType": "YulBlock",
													"src": "15602:39:11",
													"statements": [
														{
															"nativeSrc": "15616:15:11",
															"nodeType": "YulAssignment",
															"src": "15616:15:11",
															"value": {
																"name": "store",
																"nativeSrc": "15626:5:11",
																"nodeType": "YulIdentifier",
																"src": "15626:5:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15616:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15616:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3704,
														"isOffset": false,
														"isSlot": false,
														"src": "15616:6:11",
														"valueSize": 1
													},
													{
														"declaration": 3694,
														"isOffset": false,
														"isSlot": false,
														"src": "15626:5:11",
														"valueSize": 1
													}
												],
												"id": 3706,
												"nodeType": "InlineAssembly",
												"src": "15593:48:11"
											},
											{
												"expression": {
													"id": 3707,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3704,
													"src": "15658:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 3689,
												"id": 3708,
												"nodeType": "Return",
												"src": "15651:13:11"
											}
										]
									},
									"documentation": {
										"id": 3681,
										"nodeType": "StructuredDocumentation",
										"src": "14826:539:11",
										"text": " @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3710,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "keys",
									"nameLocation": "15379:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3684,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "15409:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3710,
												"src": "15384:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
													"typeString": "struct EnumerableMap.AddressToUintMap"
												},
												"typeName": {
													"id": 3683,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3682,
														"name": "AddressToUintMap",
														"nameLocations": [
															"15384:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3468,
														"src": "15384:16:11"
													},
													"referencedDeclaration": 3468,
													"src": "15384:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressToUintMap_$3468_storage_ptr",
														"typeString": "struct EnumerableMap.AddressToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15383:30:11"
									},
									"returnParameters": {
										"id": 3689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3710,
												"src": "15437:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3686,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "15437:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3687,
													"nodeType": "ArrayTypeName",
													"src": "15437:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15436:18:11"
									},
									"scope": 3903,
									"src": "15370:301:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableMap.Bytes32ToUintMap",
									"id": 3714,
									"members": [
										{
											"constant": false,
											"id": 3713,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "15756:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 3714,
											"src": "15736:26:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
												"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
											},
											"typeName": {
												"id": 3712,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3711,
													"name": "Bytes32ToBytes32Map",
													"nameLocations": [
														"15736:19:11"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2810,
													"src": "15736:19:11"
												},
												"referencedDeclaration": 2810,
												"src": "15736:19:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToBytes32Map"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32ToUintMap",
									"nameLocation": "15709:16:11",
									"nodeType": "StructDefinition",
									"scope": 3903,
									"src": "15702:67:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3737,
										"nodeType": "Block",
										"src": "16091:60:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3728,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3718,
																"src": "16112:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 3729,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16116:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3713,
															"src": "16112:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 3730,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3720,
															"src": "16124:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 3733,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3722,
																	"src": "16137:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "16129:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 3731,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "16129:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16129:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3727,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2838,
															3051,
															3267,
															3501,
															3738
														],
														"referencedDeclaration": 2838,
														"src": "16108:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"
														}
													},
													"id": 3735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16108:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3726,
												"id": 3736,
												"nodeType": "Return",
												"src": "16101:43:11"
											}
										]
									},
									"documentation": {
										"id": 3715,
										"nodeType": "StructuredDocumentation",
										"src": "15775:216:11",
										"text": " @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."
									},
									"id": 3738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "set",
									"nameLocation": "16005:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3718,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "16034:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3738,
												"src": "16009:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 3717,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3716,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"16009:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3714,
														"src": "16009:16:11"
													},
													"referencedDeclaration": 3714,
													"src": "16009:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3720,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "16047:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3738,
												"src": "16039:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3719,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16039:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3722,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16060:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3738,
												"src": "16052:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16052:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16008:58:11"
									},
									"returnParameters": {
										"id": 3726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3738,
												"src": "16085:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3724,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16085:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16084:6:11"
									},
									"scope": 3903,
									"src": "15996:155:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3755,
										"nodeType": "Block",
										"src": "16393:47:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3750,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3742,
																"src": "16417:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 3751,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16421:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3713,
															"src": "16417:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 3752,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3744,
															"src": "16429:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3749,
														"name": "remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2862,
															3072,
															3288,
															3528,
															3756
														],
														"referencedDeclaration": 2862,
														"src": "16410:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 3753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16410:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3748,
												"id": 3754,
												"nodeType": "Return",
												"src": "16403:30:11"
											}
										]
									},
									"documentation": {
										"id": 3739,
										"nodeType": "StructuredDocumentation",
										"src": "16157:148:11",
										"text": " @dev Removes a value from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."
									},
									"id": 3756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "16319:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3742,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "16351:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3756,
												"src": "16326:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 3741,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3740,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"16326:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3714,
														"src": "16326:16:11"
													},
													"referencedDeclaration": 3714,
													"src": "16326:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3744,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "16364:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3756,
												"src": "16356:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3743,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16356:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16325:43:11"
									},
									"returnParameters": {
										"id": 3748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3756,
												"src": "16387:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3746,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16387:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16386:6:11"
									},
									"scope": 3903,
									"src": "16310:130:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3773,
										"nodeType": "Block",
										"src": "16609:49:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3768,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3760,
																"src": "16635:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 3769,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16639:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3713,
															"src": "16635:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 3770,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3762,
															"src": "16647:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3767,
														"name": "contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2880,
															3093,
															3309,
															3555,
															3774
														],
														"referencedDeclaration": 2880,
														"src": "16626:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 3771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16626:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3766,
												"id": 3772,
												"nodeType": "Return",
												"src": "16619:32:11"
											}
										]
									},
									"documentation": {
										"id": 3757,
										"nodeType": "StructuredDocumentation",
										"src": "16446:68:11",
										"text": " @dev Returns true if the key is in the map. O(1)."
									},
									"id": 3774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "16528:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3760,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "16562:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3774,
												"src": "16537:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 3759,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3758,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"16537:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3714,
														"src": "16537:16:11"
													},
													"referencedDeclaration": 3714,
													"src": "16537:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3762,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "16575:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3774,
												"src": "16567:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3761,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16567:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16536:43:11"
									},
									"returnParameters": {
										"id": 3766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3774,
												"src": "16603:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3764,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16603:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16602:6:11"
									},
									"scope": 3903,
									"src": "16519:139:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3788,
										"nodeType": "Block",
										"src": "16819:42:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3784,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3778,
																"src": "16843:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 3785,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16847:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3713,
															"src": "16843:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 3783,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2895,
															3108,
															3324,
															3570,
															3789
														],
														"referencedDeclaration": 2895,
														"src": "16836:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"
														}
													},
													"id": 3786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16836:18:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3782,
												"id": 3787,
												"nodeType": "Return",
												"src": "16829:25:11"
											}
										]
									},
									"documentation": {
										"id": 3775,
										"nodeType": "StructuredDocumentation",
										"src": "16664:72:11",
										"text": " @dev Returns the number of elements in the map. O(1)."
									},
									"id": 3789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "16750:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3778,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "16782:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3789,
												"src": "16757:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 3777,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3776,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"16757:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3714,
														"src": "16757:16:11"
													},
													"referencedDeclaration": 3714,
													"src": "16757:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16756:30:11"
									},
									"returnParameters": {
										"id": 3782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3789,
												"src": "16810:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16810:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16809:9:11"
									},
									"scope": 3903,
									"src": "16741:120:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3819,
										"nodeType": "Block",
										"src": "17296:107:11",
										"statements": [
											{
												"assignments": [
													3803,
													3805
												],
												"declarations": [
													{
														"constant": false,
														"id": 3803,
														"mutability": "mutable",
														"name": "key",
														"nameLocation": "17315:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 3819,
														"src": "17307:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3802,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "17307:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3805,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "17328:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 3819,
														"src": "17320:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3804,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "17320:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3811,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3807,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3793,
																"src": "17340:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 3808,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17344:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3713,
															"src": "17340:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 3809,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3795,
															"src": "17352:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3806,
														"name": "at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2924,
															3142,
															3364,
															3610,
															3820
														],
														"referencedDeclaration": 2924,
														"src": "17337:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"
														}
													},
													"id": 3810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17337:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_bytes32_$",
														"typeString": "tuple(bytes32,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17306:52:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 3812,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3803,
															"src": "17376:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 3815,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3805,
																	"src": "17389:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 3814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17381:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3813,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17381:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17381:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 3817,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "17375:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bytes32_$_t_uint256_$",
														"typeString": "tuple(bytes32,uint256)"
													}
												},
												"functionReturnParameters": 3801,
												"id": 3818,
												"nodeType": "Return",
												"src": "17368:28:11"
											}
										]
									},
									"documentation": {
										"id": 3790,
										"nodeType": "StructuredDocumentation",
										"src": "16867:326:11",
										"text": " @dev Returns the element stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 3820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "17207:2:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3793,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "17235:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3820,
												"src": "17210:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 3792,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3791,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"17210:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3714,
														"src": "17210:16:11"
													},
													"referencedDeclaration": 3714,
													"src": "17210:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3795,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "17248:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 3820,
												"src": "17240:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17240:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17209:45:11"
									},
									"returnParameters": {
										"id": 3801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3820,
												"src": "17278:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3797,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17278:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3820,
												"src": "17287:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17287:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17277:18:11"
									},
									"scope": 3903,
									"src": "17198:205:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3850,
										"nodeType": "Block",
										"src": "17641:114:11",
										"statements": [
											{
												"assignments": [
													3834,
													3836
												],
												"declarations": [
													{
														"constant": false,
														"id": 3834,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "17657:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 3850,
														"src": "17652:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3833,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17652:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 3836,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "17674:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 3850,
														"src": "17666:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 3835,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "17666:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3842,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3838,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3824,
																"src": "17690:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 3839,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17694:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3713,
															"src": "17690:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														},
														{
															"id": 3840,
															"name": "key",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3826,
															"src": "17702:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3837,
														"name": "tryGet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2968,
															3176,
															3404,
															3650,
															3851
														],
														"referencedDeclaration": 2968,
														"src": "17683:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"
														}
													},
													"id": 3841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17683:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes32_$",
														"typeString": "tuple(bool,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17651:55:11"
											},
											{
												"expression": {
													"components": [
														{
															"id": 3843,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3834,
															"src": "17724:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"id": 3846,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3836,
																	"src": "17741:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 3845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17733:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3844,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17733:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 3847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17733:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 3848,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "17723:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 3832,
												"id": 3849,
												"nodeType": "Return",
												"src": "17716:32:11"
											}
										]
									},
									"documentation": {
										"id": 3821,
										"nodeType": "StructuredDocumentation",
										"src": "17409:130:11",
										"text": " @dev Tries to returns the value associated with `key`. O(1).\n Does not revert if `key` is not in the map."
									},
									"id": 3851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryGet",
									"nameLocation": "17553:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3824,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "17585:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3851,
												"src": "17560:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 3823,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3822,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"17560:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3714,
														"src": "17560:16:11"
													},
													"referencedDeclaration": 3714,
													"src": "17560:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3826,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "17598:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3851,
												"src": "17590:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3825,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17590:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17559:43:11"
									},
									"returnParameters": {
										"id": 3832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3851,
												"src": "17626:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3828,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17626:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3851,
												"src": "17632:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17632:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17625:15:11"
									},
									"scope": 3903,
									"src": "17544:211:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3871,
										"nodeType": "Block",
										"src": "17994:53:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3865,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3855,
																		"src": "18023:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
																			"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																		}
																	},
																	"id": 3866,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "18027:6:11",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3713,
																	"src": "18023:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	}
																},
																{
																	"id": 3867,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3857,
																	"src": "18035:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																		"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 3864,
																"name": "get",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3004,
																	3200,
																	3434,
																	3680,
																	3872
																],
																"referencedDeclaration": 3004,
																"src": "18019:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"
																}
															},
															"id": 3868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18019:20:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 3863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "18011:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3862,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18011:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 3869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18011:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3861,
												"id": 3870,
												"nodeType": "Return",
												"src": "18004:36:11"
											}
										]
									},
									"documentation": {
										"id": 3852,
										"nodeType": "StructuredDocumentation",
										"src": "17761:140:11",
										"text": " @dev Returns the value associated with `key`. O(1).\n Requirements:\n - `key` must be in the map."
									},
									"id": 3872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "get",
									"nameLocation": "17915:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3855,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "17944:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3872,
												"src": "17919:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 3854,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3853,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"17919:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3714,
														"src": "17919:16:11"
													},
													"referencedDeclaration": 3714,
													"src": "17919:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3857,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "17957:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3872,
												"src": "17949:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3856,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17949:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17918:43:11"
									},
									"returnParameters": {
										"id": 3861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3872,
												"src": "17985:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17985:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17984:9:11"
									},
									"scope": 3903,
									"src": "17906:141:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3901,
										"nodeType": "Block",
										"src": "18682:216:11",
										"statements": [
											{
												"assignments": [
													3886
												],
												"declarations": [
													{
														"constant": false,
														"id": 3886,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "18709:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 3901,
														"src": "18692:22:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 3884,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "18692:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3885,
															"nodeType": "ArrayTypeName",
															"src": "18692:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3891,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3888,
																"name": "map",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3876,
																"src": "18722:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
																	"typeString": "struct EnumerableMap.Bytes32ToUintMap storage pointer"
																}
															},
															"id": 3889,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "18726:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3713,
															"src": "18722:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bytes32ToBytes32Map_$2810_storage",
																"typeString": "struct EnumerableMap.Bytes32ToBytes32Map storage ref"
															}
														],
														"id": 3887,
														"name": "keys",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3020,
															3230,
															3464,
															3710,
															3902
														],
														"referencedDeclaration": 3020,
														"src": "18717:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2810_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 3890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18717:16:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18692:41:11"
											},
											{
												"assignments": [
													3896
												],
												"declarations": [
													{
														"constant": false,
														"id": 3896,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "18760:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 3901,
														"src": "18743:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 3894,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "18743:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 3895,
															"nodeType": "ArrayTypeName",
															"src": "18743:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3897,
												"nodeType": "VariableDeclarationStatement",
												"src": "18743:23:11"
											},
											{
												"AST": {
													"nativeSrc": "18829:39:11",
													"nodeType": "YulBlock",
													"src": "18829:39:11",
													"statements": [
														{
															"nativeSrc": "18843:15:11",
															"nodeType": "YulAssignment",
															"src": "18843:15:11",
															"value": {
																"name": "store",
																"nativeSrc": "18853:5:11",
																"nodeType": "YulIdentifier",
																"src": "18853:5:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18843:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18843:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3896,
														"isOffset": false,
														"isSlot": false,
														"src": "18843:6:11",
														"valueSize": 1
													},
													{
														"declaration": 3886,
														"isOffset": false,
														"isSlot": false,
														"src": "18853:5:11",
														"valueSize": 1
													}
												],
												"id": 3898,
												"nodeType": "InlineAssembly",
												"src": "18820:48:11"
											},
											{
												"expression": {
													"id": 3899,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3896,
													"src": "18885:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 3881,
												"id": 3900,
												"nodeType": "Return",
												"src": "18878:13:11"
											}
										]
									},
									"documentation": {
										"id": 3873,
										"nodeType": "StructuredDocumentation",
										"src": "18053:539:11",
										"text": " @dev Return the an array containing all the keys\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 3902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "keys",
									"nameLocation": "18606:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3876,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "18636:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3902,
												"src": "18611:28:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
													"typeString": "struct EnumerableMap.Bytes32ToUintMap"
												},
												"typeName": {
													"id": 3875,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3874,
														"name": "Bytes32ToUintMap",
														"nameLocations": [
															"18611:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3714,
														"src": "18611:16:11"
													},
													"referencedDeclaration": 3714,
													"src": "18611:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32ToUintMap_$3714_storage_ptr",
														"typeString": "struct EnumerableMap.Bytes32ToUintMap"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18610:30:11"
									},
									"returnParameters": {
										"id": 3881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3902,
												"src": "18664:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 3878,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "18664:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 3879,
													"nodeType": "ArrayTypeName",
													"src": "18664:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18663:18:11"
									},
									"scope": 3903,
									"src": "18597:301:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3904,
							"src": "1651:17249:11",
							"usedErrors": [
								2802
							],
							"usedEvents": []
						}
					],
					"src": "205:18696:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							4516
						]
					},
					"id": 4517,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "205:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3906,
								"nodeType": "StructuredDocumentation",
								"src": "231:1098:12",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 4516,
							"linearizedBaseContracts": [
								4516
							],
							"name": "EnumerableSet",
							"nameLocation": "1338:13:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 3914,
									"members": [
										{
											"constant": false,
											"id": 3909,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1862:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 3914,
											"src": "1852:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 3907,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 3908,
												"nodeType": "ArrayTypeName",
												"src": "1852:9:12",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3913,
											"mutability": "mutable",
											"name": "_positions",
											"nameLocation": "2054:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 3914,
											"src": "2020:44:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 3912,
												"keyName": "value",
												"keyNameLocation": "2036:5:12",
												"keyType": {
													"id": 3910,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2020:33:12",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 3911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1805:3:12",
									"nodeType": "StructDefinition",
									"scope": 4516,
									"src": "1798:273:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 3955,
										"nodeType": "Block",
										"src": "2310:337:12",
										"statements": [
											{
												"condition": {
													"id": 3929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2324:22:12",
													"subExpression": {
														"arguments": [
															{
																"id": 3926,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3918,
																"src": "2335:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 3927,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3920,
																"src": "2340:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 3925,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4059,
															"src": "2325:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3914_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 3928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2325:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3953,
													"nodeType": "Block",
													"src": "2604:37:12",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 3951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2625:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 3924,
															"id": 3952,
															"nodeType": "Return",
															"src": "2618:12:12"
														}
													]
												},
												"id": 3954,
												"nodeType": "IfStatement",
												"src": "2320:321:12",
												"trueBody": {
													"id": 3950,
													"nodeType": "Block",
													"src": "2348:250:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3935,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3920,
																		"src": "2379:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 3930,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3918,
																			"src": "2362:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 3933,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2366:7:12",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3909,
																		"src": "2362:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 3934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2374:4:12",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2362:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 3936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2362:23:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3937,
															"nodeType": "ExpressionStatement",
															"src": "2362:23:12"
														},
														{
															"expression": {
																"id": 3946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 3938,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3918,
																			"src": "2520:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 3941,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2524:10:12",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3913,
																		"src": "2520:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 3942,
																	"indexExpression": {
																		"id": 3940,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3920,
																		"src": "2535:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2520:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 3943,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3918,
																			"src": "2544:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 3944,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2548:7:12",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3909,
																		"src": "2544:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 3945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2556:6:12",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2544:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2520:42:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3947,
															"nodeType": "ExpressionStatement",
															"src": "2520:42:12"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 3948,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2583:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 3924,
															"id": 3949,
															"nodeType": "Return",
															"src": "2576:11:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3915,
										"nodeType": "StructuredDocumentation",
										"src": "2077:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 3956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2250:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3918,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2267:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 3956,
												"src": "2255:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 3917,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3916,
														"name": "Set",
														"nameLocations": [
															"2255:3:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3914,
														"src": "2255:3:12"
													},
													"referencedDeclaration": 3914,
													"src": "2255:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3920,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2280:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 3956,
												"src": "2272:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3919,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2254:32:12"
									},
									"returnParameters": {
										"id": 3924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3923,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3956,
												"src": "2304:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3922,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2304:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:6:12"
									},
									"scope": 4516,
									"src": "2241:406:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 4039,
										"nodeType": "Block",
										"src": "2887:1296:12",
										"statements": [
											{
												"assignments": [
													3968
												],
												"declarations": [
													{
														"constant": false,
														"id": 3968,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2999:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 4039,
														"src": "2991:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3967,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2991:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3973,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 3969,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3960,
															"src": "3010:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 3970,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3014:10:12",
														"memberName": "_positions",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3913,
														"src": "3010:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 3972,
													"indexExpression": {
														"id": 3971,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3962,
														"src": "3025:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3010:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2991:40:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3974,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3968,
														"src": "3046:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3975,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3058:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3046:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 4037,
													"nodeType": "Block",
													"src": "4140:37:12",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 4035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4161:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 3966,
															"id": 4036,
															"nodeType": "Return",
															"src": "4154:12:12"
														}
													]
												},
												"id": 4038,
												"nodeType": "IfStatement",
												"src": "3042:1135:12",
												"trueBody": {
													"id": 4034,
													"nodeType": "Block",
													"src": "3061:1073:12",
													"statements": [
														{
															"assignments": [
																3978
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3978,
																	"mutability": "mutable",
																	"name": "valueIndex",
																	"nameLocation": "3421:10:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 4034,
																	"src": "3413:18:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3977,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3413:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3982,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3979,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3968,
																	"src": "3434:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3445:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3434:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3413:33:12"
														},
														{
															"assignments": [
																3984
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3984,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3468:9:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 4034,
																	"src": "3460:17:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3983,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3460:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3990,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 3985,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3960,
																			"src": "3480:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 3986,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3484:7:12",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3909,
																		"src": "3480:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 3987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3492:6:12",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3480:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3501:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3480:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3460:42:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3991,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3978,
																	"src": "3521:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 3992,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3984,
																	"src": "3535:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3521:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 4018,
															"nodeType": "IfStatement",
															"src": "3517:378:12",
															"trueBody": {
																"id": 4017,
																"nodeType": "Block",
																"src": "3546:349:12",
																"statements": [
																	{
																		"assignments": [
																			3995
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 3995,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3572:9:12",
																				"nodeType": "VariableDeclaration",
																				"scope": 4017,
																				"src": "3564:17:12",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 3994,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3564:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 4000,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 3996,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3960,
																					"src": "3584:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 3997,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3588:7:12",
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3909,
																				"src": "3584:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 3999,
																			"indexExpression": {
																				"id": 3998,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3984,
																				"src": "3596:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3584:22:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3564:42:12"
																	},
																	{
																		"expression": {
																			"id": 4007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 4001,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3960,
																						"src": "3705:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 4004,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3709:7:12",
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3909,
																					"src": "3705:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 4005,
																				"indexExpression": {
																					"id": 4003,
																					"name": "valueIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3978,
																					"src": "3717:10:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3705:23:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 4006,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3995,
																				"src": "3731:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3705:35:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 4008,
																		"nodeType": "ExpressionStatement",
																		"src": "3705:35:12"
																	},
																	{
																		"expression": {
																			"id": 4015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 4009,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3960,
																						"src": "3844:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 4012,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3848:10:12",
																					"memberName": "_positions",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3913,
																					"src": "3844:14:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 4013,
																				"indexExpression": {
																					"id": 4011,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3995,
																					"src": "3859:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3844:25:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 4014,
																				"name": "position",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3968,
																				"src": "3872:8:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3844:36:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 4016,
																		"nodeType": "ExpressionStatement",
																		"src": "3844:36:12"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 4019,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3960,
																			"src": "3973:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 4022,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3977:7:12",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3909,
																		"src": "3973:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 4023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3985:3:12",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3973:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 4024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3973:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4025,
															"nodeType": "ExpressionStatement",
															"src": "3973:17:12"
														},
														{
															"expression": {
																"id": 4030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4069:28:12",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 4026,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3960,
																			"src": "4076:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 4027,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4080:10:12",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3913,
																		"src": "4076:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 4029,
																	"indexExpression": {
																		"id": 4028,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3962,
																		"src": "4091:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4076:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 4031,
															"nodeType": "ExpressionStatement",
															"src": "4069:28:12"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 4032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4119:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 3966,
															"id": 4033,
															"nodeType": "Return",
															"src": "4112:11:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3957,
										"nodeType": "StructuredDocumentation",
										"src": "2653:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 4040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2824:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3960,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2844:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4040,
												"src": "2832:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 3959,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3958,
														"name": "Set",
														"nameLocations": [
															"2832:3:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3914,
														"src": "2832:3:12"
													},
													"referencedDeclaration": 3914,
													"src": "2832:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3962,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2857:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4040,
												"src": "2849:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3961,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2849:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2831:32:12"
									},
									"returnParameters": {
										"id": 3966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4040,
												"src": "2881:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3964,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2881:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:6:12"
									},
									"scope": 4516,
									"src": "2815:1368:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 4058,
										"nodeType": "Block",
										"src": "4343:50:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 4051,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4044,
																"src": "4360:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 4052,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4364:10:12",
															"memberName": "_positions",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3913,
															"src": "4360:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 4054,
														"indexExpression": {
															"id": 4053,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4046,
															"src": "4375:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4360:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 4055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4385:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4360:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 4050,
												"id": 4057,
												"nodeType": "Return",
												"src": "4353:33:12"
											}
										]
									},
									"documentation": {
										"id": 4041,
										"nodeType": "StructuredDocumentation",
										"src": "4189:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 4059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4273:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4044,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4295:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4059,
												"src": "4283:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 4043,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4042,
														"name": "Set",
														"nameLocations": [
															"4283:3:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3914,
														"src": "4283:3:12"
													},
													"referencedDeclaration": 3914,
													"src": "4283:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4046,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4308:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4059,
												"src": "4300:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4045,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4300:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4282:32:12"
									},
									"returnParameters": {
										"id": 4050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4059,
												"src": "4337:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4048,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4337:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4336:6:12"
									},
									"scope": 4516,
									"src": "4264:129:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 4072,
										"nodeType": "Block",
										"src": "4539:42:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 4068,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4063,
															"src": "4556:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 4069,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4560:7:12",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3909,
														"src": "4556:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 4070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4568:6:12",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4556:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4067,
												"id": 4071,
												"nodeType": "Return",
												"src": "4549:25:12"
											}
										]
									},
									"documentation": {
										"id": 4060,
										"nodeType": "StructuredDocumentation",
										"src": "4399:70:12",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 4073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4483:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4063,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4503:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4073,
												"src": "4491:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 4062,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4061,
														"name": "Set",
														"nameLocations": [
															"4491:3:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3914,
														"src": "4491:3:12"
													},
													"referencedDeclaration": 3914,
													"src": "4491:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4490:17:12"
									},
									"returnParameters": {
										"id": 4067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4066,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4073,
												"src": "4530:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4065,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4529:9:12"
									},
									"scope": 4516,
									"src": "4474:107:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 4089,
										"nodeType": "Block",
										"src": "4999:42:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 4084,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4077,
															"src": "5016:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 4085,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5020:7:12",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3909,
														"src": "5016:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 4087,
													"indexExpression": {
														"id": 4086,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4079,
														"src": "5028:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5016:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 4083,
												"id": 4088,
												"nodeType": "Return",
												"src": "5009:25:12"
											}
										]
									},
									"documentation": {
										"id": 4074,
										"nodeType": "StructuredDocumentation",
										"src": "4587:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 4090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4932:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4077,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4948:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4090,
												"src": "4936:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 4076,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4075,
														"name": "Set",
														"nameLocations": [
															"4936:3:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3914,
														"src": "4936:3:12"
													},
													"referencedDeclaration": 3914,
													"src": "4936:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4079,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4961:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4090,
												"src": "4953:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4935:32:12"
									},
									"returnParameters": {
										"id": 4083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4090,
												"src": "4990:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4081,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:9:12"
									},
									"scope": 4516,
									"src": "4923:118:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 4103,
										"nodeType": "Block",
										"src": "5655:35:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 4100,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4094,
														"src": "5672:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 4101,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5676:7:12",
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3909,
													"src": "5672:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 4099,
												"id": 4102,
												"nodeType": "Return",
												"src": "5665:18:12"
											}
										]
									},
									"documentation": {
										"id": 4091,
										"nodeType": "StructuredDocumentation",
										"src": "5047:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 4104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5590:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4094,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5610:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4104,
												"src": "5598:15:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 4093,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4092,
														"name": "Set",
														"nameLocations": [
															"5598:3:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3914,
														"src": "5598:3:12"
													},
													"referencedDeclaration": 3914,
													"src": "5598:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5597:17:12"
									},
									"returnParameters": {
										"id": 4099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4104,
												"src": "5637:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 4096,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5637:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 4097,
													"nodeType": "ArrayTypeName",
													"src": "5637:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:18:12"
									},
									"scope": 4516,
									"src": "5581:109:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 4108,
									"members": [
										{
											"constant": false,
											"id": 4107,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5747:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 4108,
											"src": "5743:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 4106,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 4105,
													"name": "Set",
													"nameLocations": [
														"5743:3:12"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3914,
													"src": "5743:3:12"
												},
												"referencedDeclaration": 3914,
												"src": "5743:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5722:10:12",
									"nodeType": "StructDefinition",
									"scope": 4516,
									"src": "5715:45:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 4125,
										"nodeType": "Block",
										"src": "6006:47:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4120,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4112,
																"src": "6028:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 4121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6032:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4107,
															"src": "6028:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 4122,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4114,
															"src": "6040:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 4119,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3956,
														"src": "6023:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$3914_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 4123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6023:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 4118,
												"id": 4124,
												"nodeType": "Return",
												"src": "6016:30:12"
											}
										]
									},
									"documentation": {
										"id": 4109,
										"nodeType": "StructuredDocumentation",
										"src": "5766:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 4126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5939:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4112,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5962:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4126,
												"src": "5943:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 4111,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4110,
														"name": "Bytes32Set",
														"nameLocations": [
															"5943:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4108,
														"src": "5943:10:12"
													},
													"referencedDeclaration": 4108,
													"src": "5943:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4114,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5975:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4126,
												"src": "5967:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4113,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5942:39:12"
									},
									"returnParameters": {
										"id": 4118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4126,
												"src": "6000:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4116,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6000:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5999:6:12"
									},
									"scope": 4516,
									"src": "5930:123:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4143,
										"nodeType": "Block",
										"src": "6300:50:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4138,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4130,
																"src": "6325:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 4139,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6329:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4107,
															"src": "6325:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 4140,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4132,
															"src": "6337:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 4137,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4040,
														"src": "6317:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$3914_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 4141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6317:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 4136,
												"id": 4142,
												"nodeType": "Return",
												"src": "6310:33:12"
											}
										]
									},
									"documentation": {
										"id": 4127,
										"nodeType": "StructuredDocumentation",
										"src": "6059:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 4144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6230:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4130,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6256:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4144,
												"src": "6237:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 4129,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4128,
														"name": "Bytes32Set",
														"nameLocations": [
															"6237:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4108,
														"src": "6237:10:12"
													},
													"referencedDeclaration": 4108,
													"src": "6237:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4132,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6269:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4144,
												"src": "6261:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6261:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6236:39:12"
									},
									"returnParameters": {
										"id": 4136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4144,
												"src": "6294:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6294:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:6:12"
									},
									"scope": 4516,
									"src": "6221:129:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4161,
										"nodeType": "Block",
										"src": "6517:52:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4156,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4148,
																"src": "6544:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 4157,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6548:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4107,
															"src": "6544:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 4158,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4150,
															"src": "6556:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 4155,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4059,
														"src": "6534:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3914_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 4159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 4154,
												"id": 4160,
												"nodeType": "Return",
												"src": "6527:35:12"
											}
										]
									},
									"documentation": {
										"id": 4145,
										"nodeType": "StructuredDocumentation",
										"src": "6356:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 4162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6440:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4148,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6468:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4162,
												"src": "6449:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 4147,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4146,
														"name": "Bytes32Set",
														"nameLocations": [
															"6449:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4108,
														"src": "6449:10:12"
													},
													"referencedDeclaration": 4108,
													"src": "6449:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4150,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6481:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4162,
												"src": "6473:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6473:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6448:39:12"
									},
									"returnParameters": {
										"id": 4154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4162,
												"src": "6511:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4152,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6511:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6510:6:12"
									},
									"scope": 4516,
									"src": "6431:138:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4176,
										"nodeType": "Block",
										"src": "6722:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4172,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4166,
																"src": "6747:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 4173,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6751:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4107,
															"src": "6747:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 4171,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4073,
														"src": "6739:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3914_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 4174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6739:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4170,
												"id": 4175,
												"nodeType": "Return",
												"src": "6732:26:12"
											}
										]
									},
									"documentation": {
										"id": 4163,
										"nodeType": "StructuredDocumentation",
										"src": "6575:70:12",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 4177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6659:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4166,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6685:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4177,
												"src": "6666:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 4165,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4164,
														"name": "Bytes32Set",
														"nameLocations": [
															"6666:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4108,
														"src": "6666:10:12"
													},
													"referencedDeclaration": 4108,
													"src": "6666:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:24:12"
									},
									"returnParameters": {
										"id": 4170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4177,
												"src": "6713:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6713:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6712:9:12"
									},
									"scope": 4516,
									"src": "6650:115:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4194,
										"nodeType": "Block",
										"src": "7190:46:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4189,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4181,
																"src": "7211:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 4190,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7215:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4107,
															"src": "7211:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 4191,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4183,
															"src": "7223:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4188,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4090,
														"src": "7207:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3914_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 4192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7207:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 4187,
												"id": 4193,
												"nodeType": "Return",
												"src": "7200:29:12"
											}
										]
									},
									"documentation": {
										"id": 4178,
										"nodeType": "StructuredDocumentation",
										"src": "6771:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 4195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7116:2:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4181,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7138:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4195,
												"src": "7119:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 4180,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4179,
														"name": "Bytes32Set",
														"nameLocations": [
															"7119:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4108,
														"src": "7119:10:12"
													},
													"referencedDeclaration": 4108,
													"src": "7119:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4183,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7151:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4195,
												"src": "7143:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7143:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7118:39:12"
									},
									"returnParameters": {
										"id": 4187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4195,
												"src": "7181:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4185,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7181:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7180:9:12"
									},
									"scope": 4516,
									"src": "7107:129:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4224,
										"nodeType": "Block",
										"src": "7857:219:12",
										"statements": [
											{
												"assignments": [
													4209
												],
												"declarations": [
													{
														"constant": false,
														"id": 4209,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "7884:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 4224,
														"src": "7867:22:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 4207,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7867:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 4208,
															"nodeType": "ArrayTypeName",
															"src": "7867:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4214,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 4211,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4199,
																"src": "7900:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 4212,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7904:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4107,
															"src": "7900:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 4210,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4104,
														"src": "7892:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3914_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 4213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7892:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7867:44:12"
											},
											{
												"assignments": [
													4219
												],
												"declarations": [
													{
														"constant": false,
														"id": 4219,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7938:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 4224,
														"src": "7921:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 4217,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7921:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 4218,
															"nodeType": "ArrayTypeName",
															"src": "7921:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4220,
												"nodeType": "VariableDeclarationStatement",
												"src": "7921:23:12"
											},
											{
												"AST": {
													"nativeSrc": "8007:39:12",
													"nodeType": "YulBlock",
													"src": "8007:39:12",
													"statements": [
														{
															"nativeSrc": "8021:15:12",
															"nodeType": "YulAssignment",
															"src": "8021:15:12",
															"value": {
																"name": "store",
																"nativeSrc": "8031:5:12",
																"nodeType": "YulIdentifier",
																"src": "8031:5:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8021:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8021:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4219,
														"isOffset": false,
														"isSlot": false,
														"src": "8021:6:12",
														"valueSize": 1
													},
													{
														"declaration": 4209,
														"isOffset": false,
														"isSlot": false,
														"src": "8031:5:12",
														"valueSize": 1
													}
												],
												"id": 4221,
												"nodeType": "InlineAssembly",
												"src": "7998:48:12"
											},
											{
												"expression": {
													"id": 4222,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4219,
													"src": "8063:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 4204,
												"id": 4223,
												"nodeType": "Return",
												"src": "8056:13:12"
											}
										]
									},
									"documentation": {
										"id": 4196,
										"nodeType": "StructuredDocumentation",
										"src": "7242:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 4225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7785:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4199,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7811:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4225,
												"src": "7792:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 4198,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4197,
														"name": "Bytes32Set",
														"nameLocations": [
															"7792:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4108,
														"src": "7792:10:12"
													},
													"referencedDeclaration": 4108,
													"src": "7792:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$4108_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7791:24:12"
									},
									"returnParameters": {
										"id": 4204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4225,
												"src": "7839:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 4201,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7839:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 4202,
													"nodeType": "ArrayTypeName",
													"src": "7839:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7838:18:12"
									},
									"scope": 4516,
									"src": "7776:300:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 4229,
									"members": [
										{
											"constant": false,
											"id": 4228,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8133:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 4229,
											"src": "8129:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 4227,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 4226,
													"name": "Set",
													"nameLocations": [
														"8129:3:12"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3914,
													"src": "8129:3:12"
												},
												"referencedDeclaration": 3914,
												"src": "8129:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8108:10:12",
									"nodeType": "StructDefinition",
									"scope": 4516,
									"src": "8101:45:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 4255,
										"nodeType": "Block",
										"src": "8392:74:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4241,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4233,
																"src": "8414:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$4229_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 4242,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8418:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4228,
															"src": "8414:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 4249,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4235,
																					"src": "8450:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 4248,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8442:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 4247,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8442:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 4250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8442:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 4246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8434:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 4245,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8434:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8434:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 4244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8426:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 4243,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8426:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 4252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8426:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 4240,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3956,
														"src": "8409:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$3914_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 4253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8409:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 4239,
												"id": 4254,
												"nodeType": "Return",
												"src": "8402:57:12"
											}
										]
									},
									"documentation": {
										"id": 4230,
										"nodeType": "StructuredDocumentation",
										"src": "8152:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 4256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8325:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4233,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8348:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4256,
												"src": "8329:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$4229_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 4232,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4231,
														"name": "AddressSet",
														"nameLocations": [
															"8329:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4229,
														"src": "8329:10:12"
													},
													"referencedDeclaration": 4229,
													"src": "8329:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$4229_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4235,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8361:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4256,
												"src": "8353:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8353:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8328:39:12"
									},
									"returnParameters": {
										"id": 4239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4256,
												"src": "8386:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4237,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8386:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8385:6:12"
									},
									"scope": 4516,
									"src": "8316:150:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4282,
										"nodeType": "Block",
										"src": "8713:77:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4268,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4260,
																"src": "8738:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$4229_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 4269,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8742:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4228,
															"src": "8738:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 4276,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4262,
																					"src": "8774:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 4275,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8766:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 4274,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8766:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 4277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8766:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 4273,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8758:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 4272,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8758:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8758:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 4271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8750:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 4270,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8750:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 4279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8750:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 4267,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4040,
														"src": "8730:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$3914_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 4280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8730:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 4266,
												"id": 4281,
												"nodeType": "Return",
												"src": "8723:60:12"
											}
										]
									},
									"documentation": {
										"id": 4257,
										"nodeType": "StructuredDocumentation",
										"src": "8472:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 4283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8643:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4260,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8669:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4283,
												"src": "8650:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$4229_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 4259,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4258,
														"name": "AddressSet",
														"nameLocations": [
															"8650:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4229,
														"src": "8650:10:12"
													},
													"referencedDeclaration": 4229,
													"src": "8650:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$4229_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4262,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8682:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4283,
												"src": "8674:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8649:39:12"
									},
									"returnParameters": {
										"id": 4266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4283,
												"src": "8707:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8707:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8706:6:12"
									},
									"scope": 4516,
									"src": "8634:156:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4309,
										"nodeType": "Block",
										"src": "8957:79:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4295,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4287,
																"src": "8984:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$4229_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 4296,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8988:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4228,
															"src": "8984:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 4303,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4289,
																					"src": "9020:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 4302,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9012:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 4301,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "9012:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 4304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9012:14:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 4300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9004:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 4299,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9004:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9004:23:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 4298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8996:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 4297,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8996:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 4306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8996:32:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 4294,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4059,
														"src": "8974:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3914_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 4307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8974:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 4293,
												"id": 4308,
												"nodeType": "Return",
												"src": "8967:62:12"
											}
										]
									},
									"documentation": {
										"id": 4284,
										"nodeType": "StructuredDocumentation",
										"src": "8796:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 4310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8880:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4287,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8908:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4310,
												"src": "8889:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$4229_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 4286,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4285,
														"name": "AddressSet",
														"nameLocations": [
															"8889:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4229,
														"src": "8889:10:12"
													},
													"referencedDeclaration": 4229,
													"src": "8889:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$4229_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4289,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8921:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4310,
												"src": "8913:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8913:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8888:39:12"
									},
									"returnParameters": {
										"id": 4293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4310,
												"src": "8951:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8951:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8950:6:12"
									},
									"scope": 4516,
									"src": "8871:165:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4324,
										"nodeType": "Block",
										"src": "9189:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4320,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4314,
																"src": "9214:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$4229_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 4321,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9218:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4228,
															"src": "9214:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 4319,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4073,
														"src": "9206:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3914_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 4322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9206:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4318,
												"id": 4323,
												"nodeType": "Return",
												"src": "9199:26:12"
											}
										]
									},
									"documentation": {
										"id": 4311,
										"nodeType": "StructuredDocumentation",
										"src": "9042:70:12",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 4325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9126:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4314,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9152:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4325,
												"src": "9133:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$4229_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 4313,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4312,
														"name": "AddressSet",
														"nameLocations": [
															"9133:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4229,
														"src": "9133:10:12"
													},
													"referencedDeclaration": 4229,
													"src": "9133:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$4229_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9132:24:12"
									},
									"returnParameters": {
										"id": 4318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4325,
												"src": "9180:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9180:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9179:9:12"
									},
									"scope": 4516,
									"src": "9117:115:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4351,
										"nodeType": "Block",
										"src": "9657:73:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 4343,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4329,
																						"src": "9702:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$4229_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 4344,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9706:6:12",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 4228,
																					"src": "9702:10:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$3914_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 4345,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4331,
																					"src": "9714:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$3914_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 4342,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4090,
																				"src": "9698:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3914_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 4346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9698:22:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 4341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9690:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 4340,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9690:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 4347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9690:31:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 4339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9682:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 4338,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9682:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 4348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9682:40:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 4337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9674:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 4336,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9674:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 4349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9674:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 4335,
												"id": 4350,
												"nodeType": "Return",
												"src": "9667:56:12"
											}
										]
									},
									"documentation": {
										"id": 4326,
										"nodeType": "StructuredDocumentation",
										"src": "9238:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 4352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9583:2:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4329,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9605:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4352,
												"src": "9586:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$4229_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 4328,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4327,
														"name": "AddressSet",
														"nameLocations": [
															"9586:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4229,
														"src": "9586:10:12"
													},
													"referencedDeclaration": 4229,
													"src": "9586:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$4229_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4331,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9618:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4352,
												"src": "9610:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9610:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9585:39:12"
									},
									"returnParameters": {
										"id": 4335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4352,
												"src": "9648:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9648:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9647:9:12"
									},
									"scope": 4516,
									"src": "9574:156:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4381,
										"nodeType": "Block",
										"src": "10351:219:12",
										"statements": [
											{
												"assignments": [
													4366
												],
												"declarations": [
													{
														"constant": false,
														"id": 4366,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10378:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 4381,
														"src": "10361:22:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 4364,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10361:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 4365,
															"nodeType": "ArrayTypeName",
															"src": "10361:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4371,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 4368,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4356,
																"src": "10394:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$4229_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 4369,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10398:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4228,
															"src": "10394:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 4367,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4104,
														"src": "10386:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3914_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 4370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10386:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10361:44:12"
											},
											{
												"assignments": [
													4376
												],
												"declarations": [
													{
														"constant": false,
														"id": 4376,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10432:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 4381,
														"src": "10415:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 4374,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10415:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 4375,
															"nodeType": "ArrayTypeName",
															"src": "10415:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4377,
												"nodeType": "VariableDeclarationStatement",
												"src": "10415:23:12"
											},
											{
												"AST": {
													"nativeSrc": "10501:39:12",
													"nodeType": "YulBlock",
													"src": "10501:39:12",
													"statements": [
														{
															"nativeSrc": "10515:15:12",
															"nodeType": "YulAssignment",
															"src": "10515:15:12",
															"value": {
																"name": "store",
																"nativeSrc": "10525:5:12",
																"nodeType": "YulIdentifier",
																"src": "10525:5:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10515:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10515:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4376,
														"isOffset": false,
														"isSlot": false,
														"src": "10515:6:12",
														"valueSize": 1
													},
													{
														"declaration": 4366,
														"isOffset": false,
														"isSlot": false,
														"src": "10525:5:12",
														"valueSize": 1
													}
												],
												"id": 4378,
												"nodeType": "InlineAssembly",
												"src": "10492:48:12"
											},
											{
												"expression": {
													"id": 4379,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4376,
													"src": "10557:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 4361,
												"id": 4380,
												"nodeType": "Return",
												"src": "10550:13:12"
											}
										]
									},
									"documentation": {
										"id": 4353,
										"nodeType": "StructuredDocumentation",
										"src": "9736:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 4382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10279:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4356,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10305:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4382,
												"src": "10286:22:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$4229_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 4355,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4354,
														"name": "AddressSet",
														"nameLocations": [
															"10286:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4229,
														"src": "10286:10:12"
													},
													"referencedDeclaration": 4229,
													"src": "10286:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$4229_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10285:24:12"
									},
									"returnParameters": {
										"id": 4361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4382,
												"src": "10333:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 4358,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10333:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 4359,
													"nodeType": "ArrayTypeName",
													"src": "10333:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10332:18:12"
									},
									"scope": 4516,
									"src": "10270:300:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 4386,
									"members": [
										{
											"constant": false,
											"id": 4385,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10621:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 4386,
											"src": "10617:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 4384,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 4383,
													"name": "Set",
													"nameLocations": [
														"10617:3:12"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3914,
													"src": "10617:3:12"
												},
												"referencedDeclaration": 3914,
												"src": "10617:3:12",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$3914_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10599:7:12",
									"nodeType": "StructDefinition",
									"scope": 4516,
									"src": "10592:42:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 4406,
										"nodeType": "Block",
										"src": "10877:56:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4398,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4390,
																"src": "10899:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$4386_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 4399,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10903:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4385,
															"src": "10899:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 4402,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4392,
																	"src": "10919:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 4401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10911:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 4400,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10911:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 4403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10911:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 4397,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3956,
														"src": "10894:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$3914_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 4404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10894:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 4396,
												"id": 4405,
												"nodeType": "Return",
												"src": "10887:39:12"
											}
										]
									},
									"documentation": {
										"id": 4387,
										"nodeType": "StructuredDocumentation",
										"src": "10640:159:12",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 4407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10813:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4390,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10833:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4407,
												"src": "10817:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$4386_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 4389,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4388,
														"name": "UintSet",
														"nameLocations": [
															"10817:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4386,
														"src": "10817:7:12"
													},
													"referencedDeclaration": 4386,
													"src": "10817:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$4386_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4392,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10846:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4407,
												"src": "10838:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10838:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10816:36:12"
									},
									"returnParameters": {
										"id": 4396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4407,
												"src": "10871:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10871:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10870:6:12"
									},
									"scope": 4516,
									"src": "10804:129:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4427,
										"nodeType": "Block",
										"src": "11177:59:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4419,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4411,
																"src": "11202:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$4386_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 4420,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11206:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4385,
															"src": "11202:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 4423,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4413,
																	"src": "11222:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 4422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11214:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 4421,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11214:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 4424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11214:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 4418,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4040,
														"src": "11194:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$3914_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 4425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11194:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 4417,
												"id": 4426,
												"nodeType": "Return",
												"src": "11187:42:12"
											}
										]
									},
									"documentation": {
										"id": 4408,
										"nodeType": "StructuredDocumentation",
										"src": "10939:157:12",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 4428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11110:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4411,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11133:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4428,
												"src": "11117:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$4386_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 4410,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4409,
														"name": "UintSet",
														"nameLocations": [
															"11117:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4386,
														"src": "11117:7:12"
													},
													"referencedDeclaration": 4386,
													"src": "11117:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$4386_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4413,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11146:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4428,
												"src": "11138:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11138:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11116:36:12"
									},
									"returnParameters": {
										"id": 4417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4428,
												"src": "11171:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11171:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11170:6:12"
									},
									"scope": 4516,
									"src": "11101:135:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4448,
										"nodeType": "Block",
										"src": "11400:61:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4440,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4432,
																"src": "11427:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$4386_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 4441,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11431:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4385,
															"src": "11427:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 4444,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4434,
																	"src": "11447:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 4443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11439:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 4442,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11439:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 4445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11439:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 4439,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4059,
														"src": "11417:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3914_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 4446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11417:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 4438,
												"id": 4447,
												"nodeType": "Return",
												"src": "11410:44:12"
											}
										]
									},
									"documentation": {
										"id": 4429,
										"nodeType": "StructuredDocumentation",
										"src": "11242:70:12",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 4449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11326:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4432,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11351:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4449,
												"src": "11335:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$4386_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 4431,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4430,
														"name": "UintSet",
														"nameLocations": [
															"11335:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4386,
														"src": "11335:7:12"
													},
													"referencedDeclaration": 4386,
													"src": "11335:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$4386_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4434,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11364:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4449,
												"src": "11356:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11356:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11334:36:12"
									},
									"returnParameters": {
										"id": 4438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4449,
												"src": "11394:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 4436,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11394:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11393:6:12"
									},
									"scope": 4516,
									"src": "11317:144:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4463,
										"nodeType": "Block",
										"src": "11611:43:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4459,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4453,
																"src": "11636:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$4386_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 4460,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11640:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4385,
															"src": "11636:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 4458,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4073,
														"src": "11628:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3914_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 4461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11628:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4457,
												"id": 4462,
												"nodeType": "Return",
												"src": "11621:26:12"
											}
										]
									},
									"documentation": {
										"id": 4450,
										"nodeType": "StructuredDocumentation",
										"src": "11467:70:12",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 4464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11551:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4453,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11574:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4464,
												"src": "11558:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$4386_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 4452,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4451,
														"name": "UintSet",
														"nameLocations": [
															"11558:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4386,
														"src": "11558:7:12"
													},
													"referencedDeclaration": 4386,
													"src": "11558:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$4386_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11557:21:12"
									},
									"returnParameters": {
										"id": 4457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4464,
												"src": "11602:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11602:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11601:9:12"
									},
									"scope": 4516,
									"src": "11542:112:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4484,
										"nodeType": "Block",
										"src": "12076:55:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 4478,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4468,
																		"src": "12105:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$4386_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 4479,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12109:6:12",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 4385,
																	"src": "12105:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$3914_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 4480,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4470,
																	"src": "12117:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$3914_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 4477,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4090,
																"src": "12101:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3914_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 4481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12101:22:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 4476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12093:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 4475,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12093:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 4482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12093:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 4474,
												"id": 4483,
												"nodeType": "Return",
												"src": "12086:38:12"
											}
										]
									},
									"documentation": {
										"id": 4465,
										"nodeType": "StructuredDocumentation",
										"src": "11660:331:12",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 4485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "12005:2:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4468,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12024:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4485,
												"src": "12008:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$4386_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 4467,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4466,
														"name": "UintSet",
														"nameLocations": [
															"12008:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4386,
														"src": "12008:7:12"
													},
													"referencedDeclaration": 4386,
													"src": "12008:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$4386_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4470,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12037:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 4485,
												"src": "12029:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12029:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12007:36:12"
									},
									"returnParameters": {
										"id": 4474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4485,
												"src": "12067:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12067:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12066:9:12"
									},
									"scope": 4516,
									"src": "11996:135:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 4514,
										"nodeType": "Block",
										"src": "12749:219:12",
										"statements": [
											{
												"assignments": [
													4499
												],
												"declarations": [
													{
														"constant": false,
														"id": 4499,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12776:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 4514,
														"src": "12759:22:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 4497,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12759:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 4498,
															"nodeType": "ArrayTypeName",
															"src": "12759:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4504,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 4501,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4489,
																"src": "12792:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$4386_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 4502,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12796:6:12",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4385,
															"src": "12792:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$3914_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 4500,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4104,
														"src": "12784:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$3914_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 4503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12784:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12759:44:12"
											},
											{
												"assignments": [
													4509
												],
												"declarations": [
													{
														"constant": false,
														"id": 4509,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12830:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 4514,
														"src": "12813:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 4507,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12813:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4508,
															"nodeType": "ArrayTypeName",
															"src": "12813:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4510,
												"nodeType": "VariableDeclarationStatement",
												"src": "12813:23:12"
											},
											{
												"AST": {
													"nativeSrc": "12899:39:12",
													"nodeType": "YulBlock",
													"src": "12899:39:12",
													"statements": [
														{
															"nativeSrc": "12913:15:12",
															"nodeType": "YulAssignment",
															"src": "12913:15:12",
															"value": {
																"name": "store",
																"nativeSrc": "12923:5:12",
																"nodeType": "YulIdentifier",
																"src": "12923:5:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12913:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12913:6:12"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 4509,
														"isOffset": false,
														"isSlot": false,
														"src": "12913:6:12",
														"valueSize": 1
													},
													{
														"declaration": 4499,
														"isOffset": false,
														"isSlot": false,
														"src": "12923:5:12",
														"valueSize": 1
													}
												],
												"id": 4511,
												"nodeType": "InlineAssembly",
												"src": "12890:48:12"
											},
											{
												"expression": {
													"id": 4512,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4509,
													"src": "12955:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 4494,
												"id": 4513,
												"nodeType": "Return",
												"src": "12948:13:12"
											}
										]
									},
									"documentation": {
										"id": 4486,
										"nodeType": "StructuredDocumentation",
										"src": "12137:529:12",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 4515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12680:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4489,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12703:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 4515,
												"src": "12687:19:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$4386_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 4488,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4487,
														"name": "UintSet",
														"nameLocations": [
															"12687:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 4386,
														"src": "12687:7:12"
													},
													"referencedDeclaration": 4386,
													"src": "12687:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$4386_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12686:21:12"
									},
									"returnParameters": {
										"id": 4494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4515,
												"src": "12731:16:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 4491,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12731:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 4492,
													"nodeType": "ArrayTypeName",
													"src": "12731:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12730:18:12"
									},
									"scope": 4516,
									"src": "12671:297:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4517,
							"src": "1330:11640:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "205:12766:12"
				},
				"id": 12
			},
			"Contracts/ERC721/CreoEvoltBlockchain.sol": {
				"ast": {
					"absolutePath": "Contracts/ERC721/CreoEvoltBlockchain.sol",
					"exportedSymbols": {
						"Context": [
							1338
						],
						"ERC165": [
							1617
						],
						"ERC721": [
							1145
						],
						"EVTolToken": [
							4602
						],
						"EnumerableMap": [
							3903
						],
						"EnumerableSet": [
							4516
						],
						"IERC165": [
							1629
						],
						"IERC721": [
							1262
						],
						"IERC721Errors": [
							89
						],
						"IERC721Metadata": [
							1308
						],
						"IERC721Receiver": [
							1280
						],
						"Strings": [
							1593
						]
					},
					"id": 4603,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4518,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 4519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4603,
							"sourceUnit": 1146,
							"src": "57:57:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
							"file": "@openzeppelin/contracts/utils/structs/EnumerableMap.sol",
							"id": 4520,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4603,
							"sourceUnit": 3904,
							"src": "115:65:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4521,
										"name": "ERC721",
										"nameLocations": [
											"238:6:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1145,
										"src": "238:6:13"
									},
									"id": 4522,
									"nodeType": "InheritanceSpecifier",
									"src": "238:6:13"
								}
							],
							"canonicalName": "EVTolToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 4602,
							"linearizedBaseContracts": [
								4602,
								1145,
								89,
								1308,
								1262,
								1617,
								1629,
								1338
							],
							"name": "EVTolToken",
							"nameLocation": "224:10:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 4526,
									"libraryName": {
										"id": 4523,
										"name": "EnumerableMap",
										"nameLocations": [
											"257:13:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3903,
										"src": "257:13:13"
									},
									"nodeType": "UsingForDirective",
									"src": "251:55:13",
									"typeName": {
										"id": 4525,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4524,
											"name": "EnumerableMap.UintToAddressMap",
											"nameLocations": [
												"275:13:13",
												"289:16:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3234,
											"src": "275:30:13"
										},
										"referencedDeclaration": 3234,
										"src": "275:30:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
											"typeString": "struct EnumerableMap.UintToAddressMap"
										}
									}
								},
								{
									"canonicalName": "EVTolToken.EVTOLOwner",
									"id": 4531,
									"members": [
										{
											"constant": false,
											"id": 4528,
											"mutability": "mutable",
											"name": "identifier",
											"nameLocation": "427:10:13",
											"nodeType": "VariableDeclaration",
											"scope": 4531,
											"src": "420:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 4527,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "420:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 4530,
											"mutability": "mutable",
											"name": "inspectionHistory",
											"nameLocation": "488:17:13",
											"nodeType": "VariableDeclaration",
											"scope": 4531,
											"src": "481:24:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 4529,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "481:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "EVTOLOwner",
									"nameLocation": "399:10:13",
									"nodeType": "StructDefinition",
									"scope": 4602,
									"src": "392:200:13",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 4536,
									"mutability": "mutable",
									"name": "_eVTOLData",
									"nameLocation": "680:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 4602,
									"src": "641:49:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EVTOLOwner_$4531_storage_$",
										"typeString": "mapping(uint256 => struct EVTolToken.EVTOLOwner)"
									},
									"typeName": {
										"id": 4535,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 4532,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "649:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "641:30:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EVTOLOwner_$4531_storage_$",
											"typeString": "mapping(uint256 => struct EVTolToken.EVTOLOwner)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 4534,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 4533,
												"name": "EVTOLOwner",
												"nameLocations": [
													"660:10:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 4531,
												"src": "660:10:13"
											},
											"referencedDeclaration": 4531,
											"src": "660:10:13",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_EVTOLOwner_$4531_storage_ptr",
												"typeString": "struct EVTolToken.EVTOLOwner"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 4539,
									"mutability": "mutable",
									"name": "_tokenOwners",
									"nameLocation": "735:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 4602,
									"src": "696:51:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage",
										"typeString": "struct EnumerableMap.UintToAddressMap"
									},
									"typeName": {
										"id": 4538,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 4537,
											"name": "EnumerableMap.UintToAddressMap",
											"nameLocations": [
												"696:13:13",
												"710:16:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 3234,
											"src": "696:30:13"
										},
										"referencedDeclaration": 3234,
										"src": "696:30:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage_ptr",
											"typeString": "struct EnumerableMap.UintToAddressMap"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 4546,
										"nodeType": "Block",
										"src": "912:2:13",
										"statements": []
									},
									"id": 4547,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "6556544f4c",
													"id": 4542,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "894:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0d8aecdc806fd189eeb5c7288f457bdcf25cdf498722689f99096542269b4d7b",
														"typeString": "literal_string \"eVTOL\""
													},
													"value": "eVTOL"
												},
												{
													"hexValue": "4556544f4c",
													"id": 4543,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "903:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a7edb8146304af8cac6fe5e058c745fe33c7e73b51cb3425d425b1f9a19cf823",
														"typeString": "literal_string \"EVTOL\""
													},
													"value": "EVTOL"
												}
											],
											"id": 4544,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 4541,
												"name": "ERC721",
												"nameLocations": [
													"887:6:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1145,
												"src": "887:6:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "887:24:13"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "884:2:13"
									},
									"returnParameters": {
										"id": 4545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "912:0:13"
									},
									"scope": 4602,
									"src": "873:41:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4572,
										"nodeType": "Block",
										"src": "1081:239:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 4559,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4549,
															"src": "1097:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4560,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4551,
															"src": "1101:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4558,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "1091:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 4561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1091:18:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4562,
												"nodeType": "ExpressionStatement",
												"src": "1091:18:13"
											},
											{
												"expression": {
													"id": 4570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 4563,
															"name": "_eVTOLData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4536,
															"src": "1205:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EVTOLOwner_$4531_storage_$",
																"typeString": "mapping(uint256 => struct EVTolToken.EVTOLOwner storage ref)"
															}
														},
														"id": 4565,
														"indexExpression": {
															"id": 4564,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4551,
															"src": "1216:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1205:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EVTOLOwner_$4531_storage",
															"typeString": "struct EVTolToken.EVTOLOwner storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4567,
																"name": "identifier",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4553,
																"src": "1238:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 4568,
																"name": "inspectionHistory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4555,
																"src": "1250:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"id": 4566,
															"name": "EVTOLOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4531,
															"src": "1227:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_EVTOLOwner_$4531_storage_ptr_$",
																"typeString": "type(struct EVTolToken.EVTOLOwner storage pointer)"
															}
														},
														"id": 4569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1227:41:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_EVTOLOwner_$4531_memory_ptr",
															"typeString": "struct EVTolToken.EVTOLOwner memory"
														}
													},
													"src": "1205:63:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_EVTOLOwner_$4531_storage",
														"typeString": "struct EVTolToken.EVTOLOwner storage ref"
													}
												},
												"id": 4571,
												"nodeType": "ExpressionStatement",
												"src": "1205:63:13"
											}
										]
									},
									"functionSelector": "11ba9aae",
									"id": 4573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintEVTOLOwner",
									"nameLocation": "969:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4549,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "992:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 4573,
												"src": "984:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4551,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1004:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 4573,
												"src": "996:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "996:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4553,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "1027:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4573,
												"src": "1013:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1013:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4555,
												"mutability": "mutable",
												"name": "inspectionHistory",
												"nameLocation": "1053:17:13",
												"nodeType": "VariableDeclaration",
												"scope": 4573,
												"src": "1039:31:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4554,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1039:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:88:13"
									},
									"returnParameters": {
										"id": 4557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:0:13"
									},
									"scope": 4602,
									"src": "960:360:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4600,
										"nodeType": "Block",
										"src": "1498:252:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 4585,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4575,
																	"src": "1538:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 4583,
																	"name": "_tokenOwners",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4539,
																	"src": "1516:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UintToAddressMap_$3234_storage",
																		"typeString": "struct EnumerableMap.UintToAddressMap storage ref"
																	}
																},
																"id": 4584,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1529:8:13",
																"memberName": "contains",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3309,
																"src": "1516:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$3234_storage_ptr_$_t_uint256_$returns$_t_bool_$attached_to$_t_struct$_UintToAddressMap_$3234_storage_ptr_$",
																	"typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) view returns (bool)"
																}
															},
															"id": 4586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1516:30:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20494420646f6573206e6f74206578697374",
															"id": 4587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1548:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f",
																"typeString": "literal_string \"Token ID does not exist\""
															},
															"value": "Token ID does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50419861f9ad0bbc39e2eeb33b51b9bd82e240ae24e7f89f7b123b947e2f731f",
																"typeString": "literal_string \"Token ID does not exist\""
															}
														],
														"id": 4582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1508:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1508:66:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4589,
												"nodeType": "ExpressionStatement",
												"src": "1508:66:13"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"id": 4590,
																	"name": "_eVTOLData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4536,
																	"src": "1624:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EVTOLOwner_$4531_storage_$",
																		"typeString": "mapping(uint256 => struct EVTolToken.EVTOLOwner storage ref)"
																	}
																},
																"id": 4592,
																"indexExpression": {
																	"id": 4591,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4575,
																	"src": "1635:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1624:19:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_EVTOLOwner_$4531_storage",
																	"typeString": "struct EVTolToken.EVTOLOwner storage ref"
																}
															},
															"id": 4593,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1644:10:13",
															"memberName": "identifier",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4528,
															"src": "1624:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 4594,
																	"name": "_eVTOLData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4536,
																	"src": "1656:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EVTOLOwner_$4531_storage_$",
																		"typeString": "mapping(uint256 => struct EVTolToken.EVTOLOwner storage ref)"
																	}
																},
																"id": 4596,
																"indexExpression": {
																	"id": 4595,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4575,
																	"src": "1667:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1656:19:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_EVTOLOwner_$4531_storage",
																	"typeString": "struct EVTolToken.EVTOLOwner storage ref"
																}
															},
															"id": 4597,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1676:17:13",
															"memberName": "inspectionHistory",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 4530,
															"src": "1656:37:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														}
													],
													"id": 4598,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1623:71:13",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_string_storage_$_t_string_storage_$",
														"typeString": "tuple(string storage ref,string storage ref)"
													}
												},
												"functionReturnParameters": 4581,
												"id": 4599,
												"nodeType": "Return",
												"src": "1616:78:13"
											}
										]
									},
									"functionSelector": "5b031fb2",
									"id": 4601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEVTOLOwnerMetadata",
									"nameLocation": "1377:21:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4575,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1407:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 4601,
												"src": "1399:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1399:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1398:17:13"
									},
									"returnParameters": {
										"id": 4581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4578,
												"mutability": "mutable",
												"name": "identifier",
												"nameLocation": "1453:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 4601,
												"src": "1439:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4577,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1439:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4580,
												"mutability": "mutable",
												"name": "inspectionHistory",
												"nameLocation": "1479:17:13",
												"nodeType": "VariableDeclaration",
												"scope": 4601,
												"src": "1465:31:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 4579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1465:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1438:59:13"
									},
									"scope": 4602,
									"src": "1368:382:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4603,
							"src": "215:1594:13",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": [
								1161,
								1170,
								1179
							]
						}
					],
					"src": "32:1778:13"
				},
				"id": 13
			}
		}
	}
}